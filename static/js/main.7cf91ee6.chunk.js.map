{"version":3,"sources":["components/utils/constants/CalendarConstants.js","serviceWorker.js","components/navigation/NavLink.js","components/navigation/CalendarNavigationBar.js","components/calendar/DayBlock.js","components/calendar/CalendarBody.js","components/utils/UtilFunctions.js","components/utils/util-components/Loading.js","components/utils/util-components/MessageBox.js","components/calendar/AddNotesForm.js","components/utils/util-components/Pagination.js","components/utils/util-components/ModalBox.js","components/calendar/NotesView.js","components/calendar/ImageBlock.js","components/calendar/CalendarStatusBar.js","db/Requester.js","components/calendar/Calendar.js","components/CalendarApp.js","services/AuthenticationService.js","controllers/LoginForm.js","controllers/RegisterForm.js","components/UserNavigation.js","services/RegisterService.js","services/NotesService.js","AppContainer.js","index.js"],"names":["module","exports","MONTHS_MAP","0","1","2","3","4","5","6","7","8","9","10","11","DAYS_MAP","Boolean","window","location","hostname","match","NavLink","_this","this","react_default","a","createElement","className","props","isActive","onClick","click","name","Component","CalendarNavigationBar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","menuLink","links","Array","totalLinks","fill","setState","linksStatus","navigation_NavLink","handleLinkClick","bind","DayBlock","concat","clickHandler","value","React","CalendarBody","currentMonth","nextProps","JSON","stringify","blockValue","blockClass","blockKey","calendar_DayBlock","key","id","row","i","push","renderBlock","_this2","renderHeader","map","day","iterCount","dayValue","dayClass","UtilFunctions","date","getFullYear","getMonth","getDate","date1","date2","Loading","messageBoxContainer","document","getElementById","MessageBox","animationClass","messageBox","type","setTimeout","closeMessageBox","handleContainerClassChange","appendChild","_this3","onClose","contains","removeChild","change","toLowerCase","classList","add","remove","_this4","ReactDOM","createPortal","handleBoxClick","charAt","toUpperCase","slice","message","defaultProps","AddNotesForm","note","isLoading","show","msgBox","msgBoxState","evt","target","e","preventDefault","data","dayId","Utils","activeDate","noteContent","loggedInUser","emptyTextArea","stopLoading","openMsgBox","showMessageBox","authenticationService","getCurrentUser","then","user","notesService","addNote","successResponse","failResponse","failed","renderValue","util_components_MessageBox","hideMessageBox","util_components_Loading","rows","onChange","updateNote","submitNote","library","faAngleLeft","faAngleRight","Pagination","pager","items","length","resetPage","prevProps","prevState","setPage","initialPage","page","_this$props","pageSize","totalPages","pageDirection","currentPage","getPager","pageOfItems","startIndex","endIndex","onChangePage","totalItems","startPage","endPage","Math","ceil","min","pages","toConsumableArray","keys","href","react_fontawesome_index_es","icon","index","modalRoot","ModalBox","isShown","transitionEnded","modal","isOpen","children","NotesView","isLoggedIn","notes","ajaxStarted","currentNotesPage","notesAnimation","modalData","idToDelete","animateClass","handlePageChange","assertThisInitialized","currentUser","fetchNotes","errGettingCurrentUser","alert","initLoggedIn","isThisViewActive","notesArr","equals","failedResponse","console","log","_this5","showMsgBoxHandler","hideMsgBoxHandler","deleteNote","closeModal","modalState","getNotesForUserById","authToken","_this6","div","util_components_Pagination","animationDiv","_id","openModal","_this7","renderNotes","util_components_ModalBox","closeFunction","ImageBlock","currentClass","getCurrentMonth","toString","substr","CalendarStatusBar","oldDate","Date","display","isFlipped","nextProp","displayState","calendar_ImageBlock","switchView","calendar_NotesView","calendar_AddNotesForm","API_BASE_URL","API_KEY","BASIC_AUTH_HEADER","Authorization","btoa","Requester","$","ajax","method","url","headers","userId","header","dbCollectionName","Calendar","daysInCurrentMonth","year","month","animation","moveYear","moveMonth","createCurrentMonthObject","number","num","newMonth","newYear","monthObject","daysFromNextMonth","getDaysInMonth","getDay","daysInLastMonth","getFirstDayOfMonth","realTimeNow","calendarTimeNow","dayBlock","startsWith","includes","updateYear","updateMonth","calendar_CalendarBody","handleDayBlockClicked","calendar_CalendarStatusBar","CalendarApp","bindCustomArrayEqualsMethod","prototype","array","l","defineProperty","enumerable","navigation_CalendarNavigationBar","calendar_Calendar","AuthenticationService","userObject","setTokenFunction","setToken","Promise","resolve","reject","succResp","_kmd","authtoken","failResp","getToken","error","authorizationHeader","success","localStorage","removeItem","errMsg","userToken","setItem","getItem","succ","err","LoginForm","startLoading","loginUsername","loginPassword","handleUsernameChange","handlePasswordChange","loginUserObject","username","password","closeModalFunc","userChangeHandler","loginHandler","loginUser","errResp","event","htmlFor","placeholder","RegisterForm","registerUsername","registerPassword","registerEmail","handleEmailChange","isUsernameValid","isPasswordValid","isEmailValid","registerUserObject","email","registrationService","registerUser","resolveResponse","rejectResponse","UserNavigation","isLoginModalOpen","isRegisterModalOpen","mouseOver","modalToClose","logoutFunc","changeLogoutState","logout","onMouseEnter","handleMouseOver","onMouseLeave","handleMouseLeave","controllers_RegisterForm","controllers_LoginForm","RegisterService","errorResponse","NotesService","noteData","generateHeaders","noteId","dateId","successMessage","errorMessage","AppContainer","components_UserNavigation","components_CalendarApp","render","src_AppContainer","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7cf91ee6.chunk.js","sourcesContent":["const MONTHS_MAP = {\r\n    0: \"January\",\r\n    1: \"February\",\r\n    2: \"March\",\r\n    3: \"April\",\r\n    4: \"May\",\r\n    5: \"June\",\r\n    6: \"July\",\r\n    7: \"August\",\r\n    8: \"Semptember\",\r\n    9: \"October\",\r\n    10: \"November\",\r\n    11: \"December\",\r\n};\r\n\r\nconst DAYS_MAP = {\r\n    0: \"MON\",\r\n    1: \"TUE\",\r\n    2: \"WED\",\r\n    3: \"THU\",\r\n    4: \"FRI\",\r\n    5: \"SAT\",\r\n    6: \"SUN\",\r\n    7: \"SUN\"\r\n};\r\n\r\nmodule.exports = {MONTHS_MAP, DAYS_MAP};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a currentNotesPage, after all the\n// existing tabs open on the currentNotesPage have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our currentNotesPage is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this currentNotesPage are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the currentNotesPage.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the currentNotesPage.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. CalendarNavigationBar is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\r\n\r\nclass NavLink extends Component {\r\n    render() {\r\n        return (\r\n            <li className={this.props.isActive} onClick={() => this.props.click(this)}>\r\n                {this.props.name}\r\n                </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavLink;\r\n","import React, {Component} from 'react';\nimport '../component-styles/Nav.css';\nimport NavLink from './NavLink';\n\n\nclass CalendarNavigationBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // links:this.props.config.items,\n            // totalLinks:this.props.config.items.length,\n            // linksStatus:Array(this.props.config.items.length).fill(\"\")\n        };\n    }\n\n    handleLinkClick(menuLink) {\n        let links = Array(this.state.totalLinks).fill(\"\");\n        links[menuLink] = \"nav-link-active\";\n        this.setState({linksStatus: links});\n    }\n\n    render() {\n        return (\n            <nav className={\"navigation-bar\"}>\n                <div className={\"logo-container\"}>\n                    <h2>Calendar</h2>\n                </div>\n                <div className=\"url-container\">\n                    <ul>\n                        <NavLink\n                            name={\"Home\"}\n                            click={this.handleLinkClick.bind(this)}\n                        />\n                        <NavLink\n                            name={\"My days\"}\n                            click={this.handleLinkClick.bind(this)}\n                        />\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default CalendarNavigationBar;\n","import React from 'react';\r\nimport '../component-styles/DayBlockStyle.css';\r\nclass DayBlock extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={`day-block ${this.props.className}`}\r\n                 onClick={() => this.props.clickHandler(this)}>\r\n                {this.props.value}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DayBlock;","import React from 'react';\r\nimport DayBlock from \"./DayBlock\";\r\nimport {DAYS_MAP} from \"../utils/constants/CalendarConstants\";\r\n\r\nclass CalendarBody extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: this.props.currentMonth\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        //We changed the year or month\r\n        if (JSON.stringify(this.props.currentMonth) !== JSON.stringify(nextProps.currentMonth)) {\r\n            this.setState({currentMonth: nextProps.currentMonth})\r\n        }\r\n    }\r\n\r\n\r\n    renderBlock(blockValue, blockClass, blockKey) {\r\n        return (<DayBlock key={blockKey}\r\n                          id={blockKey}\r\n                          value={blockValue}\r\n                          className={blockClass}\r\n                          clickHandler={this.props.clickHandler}\r\n        />)\r\n    }\r\n\r\n    renderHeader() {\r\n        let row = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            row.push(\r\n                this.renderBlock(DAYS_MAP[i], \"block-heading\", `h-${i}`)\r\n            )\r\n        }\r\n        return row;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"calendar-body\">\r\n                {this.renderHeader()}\r\n                {this.state.currentMonth.map((day, iterCount) => this.renderBlock(day.dayValue, day.dayClass, \"d-\" + iterCount))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default CalendarBody;","export default {\r\n    extractIdByDate: function (date) {\r\n        //Basicly the id is yyyy-mm-dd\r\n        //Example 21st october 2018 will have id=2018-10-21\r\n        let id = date.getFullYear() +\r\n            \"-\" + date.getMonth() +\r\n            \"-\" + date.getDate();\r\n        return id;\r\n    },\r\n    extractDateById: function (id) {\r\n        let year = id.split(\"-\")[0];\r\n        let month = id.split(\"-\")[1];\r\n        let day = id.split(\"-\")[2];\r\n        return new Date(year,month,day,0,0,0);\r\n    },\r\n    compareDates: function (date1, date2) {\r\n        return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\r\n    }\r\n};","import React from 'react';\r\nimport './util-styles/Loading.css';\r\n\r\nclass Loading extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loading-background\">\r\n                <div className=\"loading-wrapper\">\r\n                    <div className=\"loading-inner\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './util-styles/modal-styles/MessageBoxStyle.css';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst propTypes = {\r\n    type: PropTypes.oneOf(['info', 'success', 'warning', 'error']).isRequired,\r\n    message: PropTypes.string.isRequired\r\n};\r\nconst defaultProps = {\r\n    type: \"info\",\r\n    message: \"Message text\",\r\n};\r\n\r\nconst messageBoxContainer = document.getElementById('message-box-container');\r\n\r\nclass MessageBox extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animationClass: \"hide\"\r\n        };\r\n\r\n        this.messageBox = document.createElement('div');\r\n    }\r\n\r\n    componentWillMount() {\r\n        //Self closing if success or info message\r\n        if (this.props.type === 'success' || this.props.type === 'info') {\r\n            setTimeout(() => {\r\n                this.closeMessageBox()\r\n            }, 3000);\r\n        }\r\n\r\n        this.handleContainerClassChange(\"show\");\r\n        messageBoxContainer.appendChild(this.messageBox);\r\n        setTimeout(() => {\r\n            this.setState({animationClass: \"show\"});\r\n        }, 10);\r\n\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.handleContainerClassChange(\"hide\")\r\n    }\r\n\r\n    closeMessageBox() {\r\n        this.setState({animationClass: \"hide\"});\r\n        setTimeout(() => {\r\n            this.props.onClose();\r\n            if (messageBoxContainer.contains(this.messageBox))\r\n                messageBoxContainer.removeChild(this.messageBox);\r\n        }, 1000);\r\n\r\n\r\n    }\r\n\r\n    handleBoxClick() {\r\n        this.closeMessageBox();\r\n    }\r\n\r\n    handleContainerClassChange(change) {\r\n        if (change.toLowerCase() === \"show\") {\r\n            messageBoxContainer.classList.add(\"show\");\r\n            messageBoxContainer.classList.remove(\"hide\");\r\n        } else if (change.toLowerCase() === \"hide\") {\r\n            messageBoxContainer.classList.add(\"hide\");\r\n            messageBoxContainer.classList.remove(\"show\");\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div\r\n                onClick={() => this.handleBoxClick()}\r\n                className={\"message-box-content \"\r\n                + this.props.type + \"  \"\r\n                + this.state.animationClass}>\r\n                <div\r\n                    className=\"message-box-message\">\r\n                    <span\r\n                        className=\"message-type\">{this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1) + \": \"}</span>\r\n                    {this.props.message}\r\n                </div>\r\n            </div>\r\n            , this.messageBox)\r\n    }\r\n}\r\n\r\nMessageBox.propTypes = propTypes;\r\nMessageBox.defaultProps = defaultProps;\r\n\r\nexport default MessageBox;\r\n","import React from 'react';\r\nimport '../component-styles/AddNoteFormStyle.css';\r\nimport Utils from '../utils/UtilFunctions';\r\nimport Loading from \"../utils/util-components/Loading\";\r\nimport MessageBox from \"../utils/util-components/MessageBox\";\r\n\r\nclass AddNotesForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            note: \"\",\r\n            isLoading: false,\r\n            messageBox: {\r\n                show: false,\r\n                type: \"\",\r\n                message: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    showMessageBox(type, message) {\r\n        let msgBox = this.state.messageBox;\r\n        msgBox.show = true;\r\n        msgBox.type = type;\r\n        msgBox.message = message;\r\n        this.setState({messageBox: msgBox});\r\n    }\r\n\r\n    hideMessageBox() {\r\n        let msgBoxState = this.state.messageBox;\r\n        msgBoxState.show = false;\r\n        msgBoxState.message = \"\";\r\n        this.setState({messageBox: msgBoxState})\r\n    }\r\n\r\n    emptyTextArea() {\r\n        this.setState({note: \"\"});\r\n    }\r\n\r\n    stopLoading() {\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    updateNote(evt) {\r\n        this.setState({note: evt.target.value})\r\n    }\r\n\r\n    submitNote(e) {\r\n        e.preventDefault();\r\n        //if its empty text ignore\r\n        if (this.state.note === \"\")\r\n            return;\r\n\r\n        let data = {};\r\n        data.dayId = Utils.extractIdByDate(this.props.activeDate);\r\n        data.noteContent = this.state.note;\r\n        let emptyTextArea = this.emptyTextArea.bind(this);\r\n        let stopLoading = this.stopLoading.bind(this);\r\n        let openMsgBox = this.showMessageBox.bind(this);\r\n        this.setState({isLoading: true});\r\n        let loggedInUser;\r\n        this.props.authenticationService.getCurrentUser().then((user) => {\r\n            loggedInUser = user;\r\n            this.props.notesService.addNote(data, loggedInUser).then((successResponse) => {\r\n                openMsgBox(\"success\", \"Added a note\");\r\n                emptyTextArea();\r\n                stopLoading();\r\n            }, (failResponse) => {\r\n                openMsgBox(\"error\", \"Could not add note\");\r\n            });\r\n        }, (failed) => {\r\n            openMsgBox(\"error\", \"You are not logged in\");\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        let renderValue;\r\n        let messageBox;\r\n        if (this.state.messageBox.show)\r\n            messageBox = <MessageBox\r\n                onClose={() => this.hideMessageBox()}\r\n                type={this.state.messageBox.type}\r\n                message={this.state.messageBox.message}/>;\r\n        if (this.state.isLoading) {\r\n            renderValue = <Loading/>\r\n        } else {\r\n            renderValue = <div className=\"form-group\">\r\n                <textarea value={this.state.note} rows=\"3\" className=\"form-control\"\r\n                          onChange={(evt) => this.updateNote(evt)}>\r\n                </textarea>\r\n            </div>\r\n        }\r\n        return (\r\n            <form className=\"add-note-form\">\r\n                {messageBox}\r\n                {renderValue}\r\n                <button onClick={(e) => this.submitNote(e)} className=\"btn btn-primary\">Add note</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddNotesForm;","//DISCLAIMER I did not make this, credits go to jasonwatmore\r\n//http://jasonwatmore.com/post/2017/03/14/react-pagination-example-with-logic-like-google\r\n//I made some custom functionality to fit my needs\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./util-styles/PaginationStyle.css\";\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleLeft, faAngleRight} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faAngleLeft, faAngleRight);\r\n\r\nconst propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    initialPage: PropTypes.number,\r\n    pageSize: PropTypes.number\r\n};\r\n\r\nconst defaultProps = {\r\n    initialPage: 1,\r\n    pageSize: 10\r\n};\r\n\r\nclass Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {pager: {}};\r\n    }\r\n\r\n    componentWillMount() {\r\n        // set currentNotesPage if items array isn't empty\r\n        if (this.props.items && this.props.items.length) {\r\n            this.resetPage();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // reset currentNotesPage if items array has changed\r\n        if (this.props.items !== prevProps.items) {\r\n            this.resetPage();\r\n        }\r\n    }\r\n\r\n    resetPage() {\r\n        this.setPage(this.props.initialPage);\r\n    }\r\n\r\n    setPage(page) {\r\n        var {items, pageSize} = this.props;\r\n        var pager = this.state.pager;\r\n\r\n        if (page < 1 || page > pager.totalPages) {\r\n            return;\r\n        }\r\n        let pageDirection;\r\n        if(this.state.pager.currentPage < page){\r\n            pageDirection = \"animate-left\";\r\n        } else if(this.state.pager.currentPage > page) {\r\n            pageDirection = \"animate-right\";\r\n        } else {\r\n            pageDirection = \"\";\r\n        }\r\n        // get new pager object for specified currentNotesPage\r\n        pager = this.getPager(items.length, page, pageSize);\r\n        // get new currentNotesPage of items from items array\r\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n        // update state\r\n        this.setState({pager: pager});\r\n        // call change currentNotesPage function in parent component\r\n        this.props.onChangePage(pageOfItems, pageDirection);\r\n    }\r\n\r\n    getPager(totalItems, currentPage, pageSize) {\r\n        // default to first currentNotesPage\r\n        currentPage = currentPage || 1;\r\n\r\n        // default currentNotesPage size is 10\r\n        pageSize = pageSize || 10;\r\n\r\n        // calculate total pages\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        var startPage, endPage;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        var startIndex = (currentPage - 1) * pageSize;\r\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    render() {\r\n        var pager = this.state.pager;\r\n        if (!pager.pages || pager.pages.length <= 1) {\r\n            // don't display pager if there is only 1 currentNotesPage\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                <div className=\"pag-wrapper\">\r\n                    {/*<li className={pager.currentPage === 1 ? 'disabled' : ''}>*/}\r\n                    {/*<a onClick={() => this.setPage(1)}>First</a>*/}\r\n                    {/*</li>*/}\r\n                    <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                        <a href={\"#\"} onClick={() => this.setPage(pager.currentPage - 1)}><FontAwesomeIcon icon=\"angle-left\"/></a>\r\n                    </li>\r\n                    {pager.pages.map((page, index) =>\r\n                        <li key={index} className={pager.currentPage === page ? 'active' : ''}>\r\n                            <a href={\"#\"} onClick={() => this.setPage(page)}>{page}</a>\r\n                        </li>\r\n                    )}\r\n                    <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                        <a href={\"#\"} onClick={() => this.setPage(pager.currentPage + 1)}><FontAwesomeIcon icon=\"angle-right\"/></a>\r\n                    </li>\r\n                    {/*<li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>*/}\r\n                    {/*<a onClick={() => this.setPage(pager.totalPages)}>Last</a>*/}\r\n                    {/*</li>*/}\r\n                </div>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\nexport default Pagination;","import React from 'react';\r\nimport './util-styles/modal-styles/ModalBox.css';\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.getElementById('modals');\r\nconst propTypes = {\r\n    isOpen:PropTypes.bool.isRequired,\r\n    closeFunction:PropTypes.func.isRequired\r\n};\r\nclass ModalBox extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShown:false,\r\n            animationClass: \"hide\",\r\n            transitionEnded: false\r\n        };\r\n        this.modal = document.createElement('div');\r\n    }\r\n\r\n    componentWillMount() {\r\n        modalRoot.appendChild(this.modal);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if(props.isOpen) {\r\n            this.setState({isShown: true});\r\n            setTimeout(() => {this.setState({animationClass:\"show\"})}, 10);\r\n        }\r\n        else {\r\n            this.setState({animationClass:\"hide\"});\r\n            const animationDurationMs = 300;\r\n            setTimeout(() => {this.setState({isShown:false})}, animationDurationMs);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div className={`modal-box-background ${this.state.isShown ? \"shown\" : \"\"}`}>\r\n                <div className={`modal-box-content ${this.state.animationClass}`}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n            , this.modal)\r\n    }\r\n}\r\nModalBox.propTypes = propTypes\r\nexport default ModalBox;\r\n","import React from 'react';\r\nimport '../component-styles/NotesView.css';\r\nimport Pagination from \"../utils/util-components/Pagination\";\r\nimport ModalBox from \"../utils/util-components/ModalBox\";\r\nimport Utils from \"../utils/UtilFunctions\";\r\nimport Loading from \"../utils/util-components/Loading\";\r\nimport MessageBox from \"../utils/util-components/MessageBox\";\r\n\r\nclass NotesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loggedInUser: this.props.loggedInUser,\r\n            isLoggedIn: this.props.isLoggedIn,\r\n            notes: null,\r\n            ajaxStarted: false,\r\n            currentNotesPage: [],\r\n            notesAnimation: \"\",\r\n            modalData: {\r\n                isOpen: false,\r\n                idToDelete: \"\",\r\n                animateClass: \"\"\r\n            },\r\n            messageBox: {\r\n                show: false,\r\n                type: \"\",\r\n                message: \"\"\r\n            }\r\n        };\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n    }\r\n\r\n    showMessageBox(type, message) {\r\n        let msgBox = this.state.messageBox;\r\n        msgBox.show = true;\r\n        msgBox.type = type;\r\n        msgBox.message = message;\r\n        this.setState({messageBox: msgBox});\r\n    }\r\n\r\n    hideMessageBox() {\r\n        let msgBoxState = this.state.messageBox;\r\n        msgBoxState.show = false;\r\n        msgBoxState.message = \"\";\r\n        this.setState({messageBox: msgBoxState})\r\n    }\r\n\r\n    //This method is called only once and is for initial loading from DB\r\n    initLoggedIn() {\r\n        return this.props.authenticationService.getCurrentUser().then((currentUser) => {\r\n            this.setState({loggedInUser: currentUser});\r\n            this.fetchNotes().then((notes) => this.setState({notes: notes}));\r\n        }, (errGettingCurrentUser) => {\r\n            alert(\"Couldnt get current user ==> VIEW\")\r\n        });\r\n    }\r\n\r\n    //INITIAL GET NOTES FROM DB\r\n    componentWillMount() {\r\n        if (this.props.isLoggedIn) {\r\n            this.initLoggedIn()\r\n        }\r\n    }\r\n\r\n    //For backend purpose\r\n    componentWillUpdate(nextProps) {\r\n        //If we have logged in but havent gotten user object\r\n        if (this.state.isLoggedIn && !this.state.loggedInUser) {\r\n            this.props.authenticationService.getCurrentUser().then((currentUser) => {\r\n                this.setState({loggedInUser: currentUser});\r\n            }, (errGettingCurrentUser) => {\r\n                alert(\"Couldnt get current user ==> VIEW\")\r\n            });\r\n        }\r\n        //IF logged in state will change\r\n        if (nextProps.isLoggedIn !== this.state.isLoggedIn) {\r\n            //If we are about to logout, just log out state\r\n            if (!nextProps.isLoggedIn) {\r\n                this.setState({\r\n                    isLoggedIn: false,\r\n                    loggedInUser: null,\r\n                    notes: null\r\n                });\r\n            } else if (nextProps.isLoggedIn) {\r\n\r\n                //Else if we are about to login\r\n                this.props.authenticationService.getCurrentUser().then((currentUser) => {\r\n                    this.fetchNotes(currentUser).then((notes) => this.setState({notes: notes}));\r\n                    this.setState({\r\n                        isLoggedIn: true,\r\n                        loggedInUser: currentUser\r\n                    });\r\n                }, (errGettingCurrentUser) => {\r\n                    alert(\"Couldnt get current user ==> VIEW\")\r\n                });\r\n            }\r\n        }\r\n\r\n        //Everything below needs authentication\r\n        if (!this.state.isLoggedIn || !this.state.loggedInUser)\r\n            return;\r\n\r\n        //IF WE HAVE CHANGED THE DAY\r\n        //initialize notes and ajax\r\n        if (!Utils.compareDates(this.props.activeDate, nextProps.activeDate)) {\r\n            this.setState({\r\n                notes: null,\r\n                ajaxStarted: false\r\n            });\r\n        }\r\n        //We need to see if notes changed\r\n        //IF (the notes are not initialized or view was inactive and is about to go acite)\r\n        //AND another ajax request hasnt started and element hasnt updated\r\n        if ((!this.state.notes || (nextProps.isThisViewActive && !this.props.isThisViewActive))\r\n            && !this.state.ajaxStarted && nextProps !== this.props) {\r\n            //start ajax\r\n            this.setState({ajaxStarted: true});\r\n            this.fetchNotes().then((notesArr) => {\r\n                this.setState({ajaxStarted: false});\r\n                //if notes are the same return\r\n                if (notesArr.equals(this.state.notes))\r\n                    return;\r\n\r\n                this.setState({\r\n                    notes: notesArr\r\n                })\r\n            }, (failedResponse) => {\r\n                //TODO: ERROR MSG BOX\r\n                alert('failed to fetch notes')\r\n                console.log(failedResponse)\r\n            });\r\n        }\r\n    }\r\n\r\n    //FOR ANIMATION PURPOSE ONLY\r\n    componentDidUpdate() {\r\n        const animationDuration = 550;\r\n        if (this.state.notesAnimation !== \"\") {\r\n            setTimeout(() => this.setState({notesAnimation: \"\"}), animationDuration)\r\n        }\r\n    }\r\n\r\n    deleteNote(id) {\r\n        let showMsgBoxHandler = this.showMessageBox.bind(this);\r\n        let hideMsgBoxHandler = this.hideMessageBox.bind(this);\r\n        this.props.notesService.deleteNote(id, this.state.loggedInUser).then((successResponse) => {\r\n            showMsgBoxHandler(\"success\", \"Deleted note\")\r\n            this.fetchNotes().then((notes) => this.setState({notes: notes}));\r\n            this.closeModal();\r\n        }, (failResponse) => {\r\n            hideMsgBoxHandler(\"error\", \"Failed to delete note\");\r\n        });\r\n\r\n    }\r\n\r\n    openModal(id) {\r\n        let modalState = this.state.modalData;\r\n        modalState.isOpen = true;\r\n        modalState.idToDelete = id;\r\n        modalState.animateClass = \"show\";\r\n        this.setState({modalData: modalState});\r\n    }\r\n\r\n    closeModal() {\r\n        let modalState = this.state.modalData;\r\n        modalState.isOpen = false;\r\n        modalState.animateClass = \"hide\";\r\n        this.setState({modalData: modalState});\r\n    }\r\n\r\n\r\n    //PAGINATION PAGE CHANGE\r\n    handlePageChange(currentPage, pageDirection) {\r\n        this.setState({\r\n            currentNotesPage: currentPage,\r\n            notesAnimation: pageDirection\r\n        });\r\n    }\r\n\r\n    fetchNotes(user) {\r\n        if (user)\r\n            return this.props.notesService.getNotesForUserById(\r\n                user.id,\r\n                Utils.extractIdByDate(this.props.activeDate),\r\n                user.authToken);\r\n        return this.props.notesService.getNotesForUserById(\r\n            this.state.loggedInUser.id,\r\n            Utils.extractIdByDate(this.props.activeDate),\r\n            this.state.loggedInUser.authToken);\r\n\r\n    }\r\n\r\n    renderNotes() {\r\n        if (!this.state.isLoggedIn)\r\n            return \"Login to add some notes\";\r\n        if (this.state.notes !== null) {\r\n            if (this.state.notes.length === 0) {\r\n                return \"No notes for this day yet\";\r\n            }\r\n            else {\r\n                let div = [];\r\n                div.push(<Pagination\r\n                    key=\"pag-notes\"\r\n                    items={this.state.notes}\r\n                    onChangePage={this.handlePageChange}\r\n                    pageSize={5}/>);\r\n                let animationDiv = [<div key=\"note-anim-div\" className={\"note-anim \" + this.state.notesAnimation}>\r\n                    {this.state.currentNotesPage.map((note) =>\r\n                        <li key={note._id}>{note.noteContent}\r\n                            <span key=\"dada\" className=\"delete-note-btn\" onClick={() => this.openModal(note._id)}>\r\n                            <span key={\"nene\"} className=\"tooltip\">Delete this note</span>\r\n                            <a href=\"#\">X</a>\r\n                        </span>\r\n                        </li>\r\n                    )}\r\n                </div>];\r\n\r\n                div.push(animationDiv);\r\n                return div;\r\n            }\r\n        }//If notes are null are about to be fetched so i return Loding component\r\n        else\r\n            return <Loading/>\r\n    }\r\n\r\n    render() {\r\n        let msgBox;\r\n        if(this.state.messageBox.show)\r\n            msgBox = <MessageBox\r\n                onClose={() => this.hideMessageBox()}\r\n                type={this.state.messageBox.type}\r\n                message={this.state.messageBox.message}/>;\r\n        return (\r\n            <ul className=\"notes-list\">\r\n                {msgBox}\r\n                {this.renderNotes()}\r\n                <ModalBox\r\n                    isOpen={this.state.modalData.isOpen}\r\n                    closeFunction={() => this.closeModal()}\r\n                >\r\n                    <div className=\"delete-confirmation-modal\">\r\n                        <div className=\"delete-confirmation-modal-header\">\r\n                            <p>Are you sure?</p>\r\n                            <span><a href=\"#\" onClick={() => this.closeModal()}>X</a></span>\r\n                        </div>\r\n                        <div className=\"delete-confirmation-modal-message\">This will delete the note</div>\r\n                        <div className=\"delete-confirmation-modal-footer\">\r\n                            <button className=\"btn btn-danger\"\r\n                                    onClick={() => this.deleteNote(this.state.modalData.idToDelete)}>Yes\r\n                            </button>\r\n                            <button className=\"btn btn alert-primary\" onClick={() => this.closeModal()}>No</button>\r\n                        </div>\r\n                    </div>\r\n                </ModalBox>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotesView;\r\n","import React from 'react';\r\nimport {MONTHS_MAP} from \"../utils/constants/CalendarConstants\";\r\n\r\nclass ImageBlock extends React.Component {\r\n\r\n    getCurrentMonth() {\r\n        return this.props.activeDate.getMonth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.currentClass}>\r\n                <h3>{MONTHS_MAP[this.getCurrentMonth()].toString().substr(0,3)}</h3>\r\n                <p className=\"day-paragraph\">{this.props.activeDate.getDate()}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageBlock;","import React from 'react';\r\nimport '../component-styles/CalendarStatusStyle.css';\r\nimport AddNotesForm from \"./AddNotesForm\";\r\nimport NotesView from \"./NotesView\";\r\nimport ImageBlock from \"./ImageBlock\";\r\n\r\nclass CalendarStatusBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animateClass: \"\",\r\n            oldDate: new Date(),\r\n            display: {\r\n                isFlipped: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProp) {\r\n\r\n        if (nextProp.activeDate !== this.props.activeDate) {\r\n            //makes the top sheet animated, and switches blocks location\r\n\r\n            this.setState({animateClass: \"calendar-block-animate\"});\r\n            //Timeout is so floating animated calendar currentNotesPage can stay the same\r\n            const animationDuration = 950;\r\n            setTimeout(() => {\r\n                this.setState({animateClass: \"\"});\r\n                this.setState({oldDate: nextProp.activeDate})\r\n            }, animationDuration);\r\n        }\r\n    }\r\n\r\n    switchView() {\r\n        let displayState = this.state.display;\r\n        displayState.isFlipped = !displayState.isFlipped;\r\n        this.setState({display: displayState});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"status-container\">\r\n                <div className=\"block-container\">\r\n\r\n                    <ImageBlock\r\n                        currentClass={\"calendar-block old-calendar-block\"}\r\n                        activeDate={this.props.activeDate}/>\r\n                    <ImageBlock\r\n                        currentClass={\"calendar-block \" + this.state.animateClass}\r\n                        activeDate={this.state.oldDate}/>\r\n\r\n                </div>\r\n                <div className=\"notes-container\">\r\n                    <button\r\n                        className={`switch-view ${this.props.isLoggedIn ? \" enabled\" : \" disabled\"}`}\r\n                        onClick={() => this.switchView()}>\r\n                        {this.state.display.isFlipped ? \"Go back to notes\" : \"Add note for this day\"}\r\n                    </button>\r\n                    <div\r\n                        className={`view-note-container\r\n                        ${this.state.display.isFlipped ? \"flipped\" : \"\"}`}>\r\n                        <div className=\"notes-view\">\r\n                            <NotesView\r\n                                isLoggedIn={this.props.isLoggedIn}\r\n                                authenticationService={this.props.authenticationService}\r\n                                notesService={this.props.notesService}\r\n                                activeDate={this.props.activeDate}\r\n                                isThisViewActive={!this.state.display.isFlipped}/>\r\n                        </div>\r\n                        <div className=\"save-note back\">\r\n                            <AddNotesForm\r\n                                authenticationService={this.props.authenticationService}\r\n                                notesService={this.props.notesService}\r\n                                activeDate={this.props.activeDate}/>\r\n                            <button className=\"btn btn-primary\">Save day to my days</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarStatusBar;\r\n","import $ from 'jquery';\r\n\r\nconst API_BASE_URL = \"https://baas.kinvey.com/\";\r\nconst API_KEY = \"kid_r1ynbbg6Q\";\r\nconst API_SECRET = \"33903aebaffd4a3b944250b832bd81f3\";\r\nconst BASIC_AUTH_HEADER = {\r\n    'Authorization': \"Basic \" + btoa(API_KEY + \":\" + API_SECRET)\r\n};\r\nconst MASTER_AUTH_HEADER = {\r\n    'Authorization': \"Basic \" + btoa(API_KEY + \":f55dd3810f61465c98c4fec7525a6ba9\")\r\n};\r\n\r\nexport default {\r\n    login: function (data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: API_BASE_URL + \"user/\" + API_KEY + \"/login\",\r\n            headers: BASIC_AUTH_HEADER,\r\n            data: data\r\n        });\r\n    },\r\n\r\n    register: function (data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: API_BASE_URL + \"user/\" + API_KEY,\r\n            headers: BASIC_AUTH_HEADER,\r\n            data: data\r\n        });\r\n    },\r\n\r\n    logout: function (headers) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: API_BASE_URL + \"user/\" + API_KEY + \"/_logout\",\r\n            headers: headers\r\n        });\r\n    },\r\n\r\n    getNotesForUserByDay: function (userId, dayId, header) {\r\n        return $.ajax({\r\n            method: \"GET\",\r\n            url: API_BASE_URL + \"appdata/\" + API_KEY +\r\n                `/notes/?query={\"dayId\":\"${dayId}\",\"_acl.creator\":\"${userId}\"}`,\r\n            headers: header,\r\n        });\r\n    },\r\n    addNote: function (data, headers) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: API_BASE_URL + \"appdata/\" + API_KEY + \"/notes\",\r\n            headers: headers,\r\n            data: data\r\n        });\r\n    },\r\n    addNoteDayRelation(data, headers) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: API_BASE_URL + \"appdata/\" + API_KEY + \"/days-notes\",\r\n            headers: headers,\r\n            data: data\r\n        });\r\n    },\r\n    deleteFromById(dbCollectionName, id, header) {\r\n        return $.ajax({\r\n            method: \"DELETE\",\r\n            url: API_BASE_URL + \"appdata/\" + API_KEY + \"/\" + dbCollectionName + \"/\" + id,\r\n            headers: header\r\n        })\r\n    },\r\n    getUser(authToken) {\r\n        let headers = {\"Authorization\": \"Kinvey \" + authToken};\r\n        return $.ajax({\r\n            method:\"GET\",\r\n            url: API_BASE_URL + \"user/\" + API_KEY + \"/_me\",\r\n            headers: headers\r\n        })\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport '../component-styles/CalendarStyle.css';\r\nimport '../component-styles/responsive-styles/CalendarBodyResponsive.css'\r\nimport CalendarBody from './CalendarBody';\r\nimport CalendarStatusBar from \"./CalendarStatusBar\";\r\nimport {MONTHS_MAP} from \"../utils/constants/CalendarConstants\"\r\nimport Requester from \"../../db/Requester\";\r\nimport Utils from \"../utils/UtilFunctions\";\r\n\r\nclass Calendar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        /**INFO ABOUT STATE VARIABLES\r\n         *@params {Date}           activeDate         The date of the currently clicked day\r\n         *@params {object}         daysInCurrentMonth The information about every day's rendering (class, value etc)\r\n         *@params {Number}         year               The current year\r\n         *@params {Number}         month              The current month\r\n         *@params {Object}         animation          Animation classes for this component\r\n         */\r\n        this.state = {\r\n            activeDate: new Date(),\r\n            daysInCurrentMonth: {},\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth(),\r\n            animation: {\r\n                moveYear: \"\",\r\n                moveMonth: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            daysInCurrentMonth: this.createCurrentMonthObject()\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let animation = this.state.animation;\r\n        const animationDuration = 1000;\r\n        if (animation.moveYear !== \"\") {\r\n            setTimeout(() => {\r\n                    animation.moveYear = \"\";\r\n                    this.setState({animation: animation})\r\n                }\r\n                , animationDuration);\r\n        }\r\n        if(animation.moveMonth !== \"\") {\r\n            setTimeout(() => {\r\n                    animation.moveMonth = \"\";\r\n                    this.setState({animation: animation})\r\n                }\r\n                , animationDuration);\r\n        }\r\n    }\r\n\r\n    updateYear(number) {\r\n        let animation = this.state.animation;\r\n        if (number < 0) {\r\n            //Left move\r\n            animation.moveYear = \"year-left\";\r\n        } else {\r\n            //right move\r\n            animation.moveYear = \"year-right\";\r\n        }\r\n        this.setState({\r\n            year: this.state.year + number,\r\n            currentMonth: this.createCurrentMonthObject(),\r\n            animation: animation\r\n        })\r\n    }\r\n\r\n    updateMonth(num) {\r\n        let animation = this.state.animation;\r\n        if (num < 0) {\r\n            //Left move\r\n            animation.moveMonth = \"month-left\";\r\n        } else {\r\n            //right move\r\n            animation.moveMonth = \"month-right\";\r\n        }\r\n        let newYear = this.state.year, newMonth;\r\n        if (this.state.month === 0 && num === (-1)) {\r\n            newMonth = 11;\r\n            newYear = this.state.year - 1;\r\n        }\r\n        else if (this.state.month === 11 && num === 1) {\r\n            newMonth = 0;\r\n            newYear = this.state.year + 1;\r\n        }\r\n        else {\r\n            newMonth = this.state.month + num;\r\n        }\r\n        this.setState({month: newMonth, year: newYear});\r\n    }\r\n\r\n    createCurrentMonthObject() {\r\n        let monthObject = [];\r\n        //We subtract the dayValue of the week of the last dayValue of the current month from 6,\r\n        // because we start from 0\r\n        //example: Date(2018,11,1).getDay() = THU = 3 (since MON is 0)\r\n        let daysFromNextMonth = 6 - new Date(this.state.year,\r\n            this.state.month,\r\n            this.getDaysInMonth() - 1).getDay();\r\n\r\n        let daysInLastMonth = this.getDaysInMonth(this.state.month - 1);\r\n        let currentMonthFirstDay = this.getFirstDayOfMonth();\r\n        let startDateLastMonth = daysInLastMonth - currentMonthFirstDay;\r\n        for (let i = startDateLastMonth + 1; i <= daysInLastMonth; i++) {\r\n            monthObject.push({\r\n                dayValue: i,\r\n                dayClass: \"last-month\"\r\n            });\r\n        }\r\n        for (let i = 1; i <= this.getDaysInMonth(); i++) {\r\n            let realTimeNow = new Date();\r\n            let calendarTimeNow = new Date(this.state.year, this.state.month, i);\r\n            let dayClass = \"current-month\";\r\n            if (i === realTimeNow.getDate() && this.state.month === realTimeNow.getMonth() && this.state.year === realTimeNow.getFullYear()) {\r\n                dayClass += \" today\";\r\n            }\r\n            if (Utils.compareDates(this.state.activeDate, calendarTimeNow)) {\r\n                dayClass += \" active\";\r\n            }\r\n            monthObject.push({\r\n                dayValue: i,\r\n                dayClass: dayClass\r\n            });\r\n        }\r\n        for (let i = 1; i <= daysFromNextMonth; i++) {\r\n            monthObject.push({\r\n                dayValue: i,\r\n                dayClass: \"next-month\"\r\n            });\r\n        }\r\n        return monthObject;\r\n    }\r\n\r\n    getDaysInMonth(month) {\r\n        //IF we dont have a month as a function parameter, we return days in the current month\r\n        if (month != null) {\r\n            if (month === -1)\r\n                month = 11;\r\n            return new Date(this.state.year, month + 1, 0).getDate();\r\n        }\r\n        return new Date(this.state.year, this.state.month + 1, 0).getDate();\r\n    }\r\n\r\n    getFirstDayOfMonth() {\r\n        return new Date(this.state.year, this.state.month, 0).getDay();\r\n    }\r\n\r\n    handleDayBlockClicked(dayBlock) {\r\n        //Check if its a valid dayblock\r\n        if (dayBlock.props.id.startsWith(\"d-\") && dayBlock.props.className.includes(\"current-month\")) {\r\n            let date = new Date(this.state.year, this.state.month, dayBlock.props.value);\r\n            this.setState({activeDate: date});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calendar-container\">\r\n                <div className=\"body-container\">\r\n                    <div className=\"calendar-header\">\r\n                        <div className=\"year\">\r\n                            <button onClick={() => this.updateYear(-1)}></button>\r\n                            <p className={this.state.animation.moveYear}>{this.state.year}</p>\r\n                            <button onClick={() => this.updateYear(1)}></button>\r\n                        </div>\r\n                        <div className=\"month\">\r\n                            <button onClick={() => this.updateMonth(-1)}></button>\r\n                            <p className={this.state.animation.moveMonth}>{MONTHS_MAP[this.state.month]}</p>\r\n                            <button onClick={() => this.updateMonth(1)}></button>\r\n                        </div>\r\n                    </div>\r\n                    <CalendarBody clickHandler={this.handleDayBlockClicked.bind(this)}\r\n                                  currentMonth={this.createCurrentMonthObject()}/>\r\n                </div>\r\n                <CalendarStatusBar\r\n                    isLoggedIn={this.props.isLoggedIn}\r\n                    activeDate={this.state.activeDate}\r\n                    notesService={this.props.notesService}\r\n                    authenticationService={this.props.authenticationService}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Calendar;","import React, {Component} from 'react';\r\nimport CalendarNavigationBar from \"./navigation/CalendarNavigationBar\";\r\nimport Calendar from \"./calendar/Calendar\";\r\nimport './component-styles/App.css';\r\n\r\nclass CalendarApp extends Component {\r\n\r\n    componentWillMount() {\r\n        this.bindCustomArrayEqualsMethod();\r\n    }\r\n\r\n    bindCustomArrayEqualsMethod() {\r\n        Array.prototype.equals = function (array) {\r\n            // if the other array is a falsy value, return\r\n            if (!array) {\r\n                return false;\r\n            }\r\n\r\n\r\n            // compare lengths - can save a lot of time\r\n            if (this.length !== array.length) {\r\n                return false;\r\n            }\r\n\r\n\r\n            for (var i = 0, l = this.length; i < l; i++) {\r\n                // Check if we have nested arrays\r\n                if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                    // recurse into the nested arrays\r\n                    if (!this[i].equals(array[i])) {\r\n\r\n                        return false;\r\n                    }\r\n                }\r\n                else if (this[i] === array[i]) {\r\n                    // Warning - two different object instances will never be equal: {x:20} != {x:20}\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        // Hide method from for-in loops\r\n        Object.defineProperty(Array.prototype, \"equals\", {enumerable: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calendar-app-container\">\r\n                <CalendarNavigationBar/>\r\n                <Calendar\r\n                    isLoggedIn={this.props.isLoggedIn}\r\n                    authenticationService={this.props.authenticationService}\r\n                    notesService={this.props.notesService}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarApp;\r\n","import Requester from \"../db/Requester\";\r\n\r\nexport default class AuthenticationService {\r\n    constructor() {\r\n    }\r\n\r\n\r\n    loginUser(userObject) {\r\n        let setTokenFunction = this.setToken;\r\n        return new Promise(function (resolve, reject) {\r\n            Requester.login(userObject).then((succResp) => {\r\n                const authToken = succResp._kmd.authtoken;\r\n                setTokenFunction(authToken);\r\n                resolve(authToken);\r\n            }, (failResp) => {\r\n                alert('failed to login');\r\n                console.log(failResp);\r\n                reject(failResp);\r\n            });\r\n        })\r\n    }\r\n\r\n    isLoggedIn() {\r\n        return !!this.getToken();\r\n    }\r\n\r\n    logout() {\r\n        return new Promise((resolve, error) => {\r\n            let authorizationHeader = {Authorization: \"Kinvey \" + this.getToken()};\r\n            Requester.logout(authorizationHeader).then((success) => {\r\n                localStorage.removeItem('user_token');\r\n                resolve(success);\r\n            }, (errMsg) => {\r\n                alert('failed to logout');\r\n                error(errMsg);\r\n            })\r\n        })\r\n    }\r\n\r\n    setToken(userToken) {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('user_token', userToken)\r\n    }\r\n\r\n    getToken() {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem('user_token')\r\n    }\r\n\r\n    getCurrentUser() {\r\n        if(!this.isLoggedIn())\r\n            return;\r\n        return new Promise((resolve, reject) => {\r\n            Requester.getUser(this.getToken()).then((succ)=> {\r\n                let user = {};\r\n                user.id = succ._id;\r\n                user.authToken = succ._kmd.authtoken;\r\n                user.authToken = this.getToken();\r\n                resolve(user);\r\n            },(err) => {\r\n                alert(\"error getting currently logged in user\");\r\n                console.log(err);\r\n                reject(err);\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport '../components/component-styles/DayBlockStyle.css';\r\nimport AuthenticationService from \"../services/AuthenticationService\";\r\nimport Loading from \"../components/utils/util-components/Loading\";\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startLoading:false,\r\n            loginUsername: \"\",\r\n            loginPassword: \"\"\r\n        };\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n\r\n    }\r\n    stopLoading() {\r\n        this.setState({startLoading:false});\r\n    }\r\n    loginUser() {\r\n        let loginUserObject = {\r\n            username: this.state.loginUsername,\r\n            password: this.state.loginPassword,\r\n        };\r\n        let closeModalFunc = this.props.closeModal;\r\n        let stopLoading = this.stopLoading.bind(this);\r\n        //This is so global object AppContainer knows when user changes\r\n        let userChangeHandler = this.props.loginHandler;\r\n        this.setState({startLoading:true});\r\n        this.props.authenticationService.loginUser(loginUserObject).then(function loggedInSuccessfully(authToken) {\r\n            stopLoading();\r\n            closeModalFunc();\r\n            userChangeHandler();\r\n        }, function failedToLogIn(errResp) {\r\n            stopLoading();\r\n            alert(\"ERROR LOGGING IN MAYBE WRONG CREDENTIALS\");\r\n            console.log(errResp)\r\n        });\r\n    }\r\n\r\n\r\n    handleUsernameChange(event) {\r\n        let username = event.target.value;\r\n        this.setState({loginUsername: username})\r\n    }\r\n\r\n    handlePasswordChange(event) {\r\n        let password = btoa(event.target.value);\r\n        this.setState({loginPassword: password})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"user-form user-login-form\">\r\n                {!this.state.startLoading ? \"\" : <Loading/>}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"login-username\">Username:</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"login-username\"\r\n                        type=\"text\"\r\n                        placeholder=\"username\"\r\n                        onChange={this.handleUsernameChange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"login-password\">Password:</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"login-password\"\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        onChange={this.handlePasswordChange}/>\r\n                </div>\r\n                <div className=\"form-group pl-1\">\r\n                    <button onClick={() => this.loginUser()} className=\"btn btn-primary\">Login</button>\r\n                    <button onClick={() => this.props.closeModal()} className=\"btn btn-primary\">Cancel</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport '../components/component-styles/DayBlockStyle.css';\r\nimport Requester from \"../db/Requester\";\r\n\r\nclass RegisterForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            registerUsername: \"\",\r\n            registerPassword: \"\",\r\n            registerEmail: \"\"\r\n        };\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n    }\r\n\r\n    registerUser() {\r\n        if (this.isUsernameValid() &&\r\n            this.isPasswordValid() &&\r\n            this.isEmailValid()) {\r\n            let registerUserObject = {\r\n                username: this.state.registerUsername,\r\n                password: this.state.registerPassword,\r\n                email: this.state.registerEmail\r\n            };\r\n            let closeModal = this.props.closeModal;\r\n            this.props.registrationService.registerUser(registerUserObject).then((resolveResponse) => {\r\n                closeModal();\r\n            }, (rejectResponse) => {\r\n                alert(\"registration failed\")\r\n                console.log(rejectResponse);\r\n            })\r\n        }\r\n    }\r\n\r\n    handleUsernameChange(event) {\r\n        let username = event.target.value;\r\n        this.setState({registerUsername: username})\r\n    }\r\n\r\n    handlePasswordChange(event) {\r\n        let password = btoa(event.target.value);\r\n        this.setState({registerPassword: password})\r\n    }\r\n\r\n    handleEmailChange(event) {\r\n        let email = event.target.value;\r\n        this.setState({registerEmail: email})\r\n    }\r\n\r\n    isUsernameValid() {\r\n        return true;\r\n    }\r\n\r\n    isPasswordValid() {\r\n        return true;\r\n    }\r\n\r\n    isEmailValid() {\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"user-form user-login-form\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"register-username\">Username:</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"register-username\"\r\n                        type=\"text\"\r\n                        placeholder=\"username\"\r\n                        onChange={this.handleUsernameChange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"register-password\">Password:</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"register-password\"\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        onChange={this.handlePasswordChange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"register-password\">Password:</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"register-email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={this.handleEmailChange}/>\r\n                </div>\r\n                <div className=\"form-group pl-1\">\r\n                    <button onClick={() => this.registerUser()} className=\"btn btn-primary\">Register</button>\r\n                    <button onClick={() => this.props.closeModal()} className=\"btn btn-primary\">Cancel\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterForm;","import React, {Component} from 'react';\r\nimport './component-styles/UserNavigation.css';\r\nimport ModalBox from \"./utils/util-components/ModalBox\";\r\nimport LoginForm from \"../controllers/LoginForm\";\r\nimport RegisterForm from \"../controllers/RegisterForm\";\r\n\r\nclass UserNavigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn: false,\r\n            isLoginModalOpen: false,\r\n            isRegisterModalOpen: false,\r\n            mouseOver:false\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.setState({isLoggedIn: this.props.isLoggedIn});\r\n    }\r\n    componentWillUpdate(nextProps) {\r\n        if (this.state.isLoggedIn !== nextProps.isLoggedIn)\r\n            this.setState({isLoggedIn: nextProps.isLoggedIn})\r\n\r\n    }\r\n\r\n    closeModal(modalToClose) {\r\n        switch (modalToClose.toLowerCase()) {\r\n            case \"login\" : {\r\n                if (this.state.isLoginModalOpen)\r\n                    this.setState({isLoginModalOpen: false})\r\n            }\r\n                break;\r\n            case \"register\" : {\r\n                if (this.state.isRegisterModalOpen)\r\n                    this.setState({isRegisterModalOpen: false})\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    openModal(modalToClose) {\r\n        switch (modalToClose.toLowerCase()) {\r\n            case \"login\" : {\r\n                if (!this.state.isLoginModalOpen)\r\n                    this.setState({isLoginModalOpen: true})\r\n            }\r\n                break;\r\n            case \"register\" : {\r\n                if (!this.state.isRegisterModalOpen)\r\n                    this.setState({isRegisterModalOpen: true})\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        let logoutFunc = this.changeLogoutState.bind(this);\r\n        //This is for the global AppContainer object to know if someone logged in\r\n        let userChangeHandler = this.props.userChangeHandler;\r\n        this.props.authenticationService.logout().then(() => {\r\n            logoutFunc();\r\n            userChangeHandler();\r\n        });\r\n    }\r\n\r\n    changeLogoutState() {\r\n        this.setState({isLoggedIn: false});\r\n    }\r\n\r\n    handleMouseOver() {\r\n        this.setState({mouseOver:true});\r\n    }\r\n    handleMouseLeave() {\r\n        this.setState({mouseOver:false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                onMouseEnter={() => this.handleMouseOver()}\r\n                onMouseLeave={() => this.handleMouseLeave()}\r\n                className={`user-navigation-container ${this.state.mouseOver ? \"show\" : \"hide\"}`}>\r\n                <span>NAVIGATION</span>\r\n                <ul className=\"user-nav\">\r\n                    <li className={`user-nav-link ${!this.state.isLoggedIn ? \"\" : \"hidden\"}`}>\r\n                        <a href=\"#\" onClick={() => this.openModal('login')}>\r\n                            Login\r\n                        </a>\r\n                    </li>\r\n                    <li className={`user-nav-link ${!this.state.isLoggedIn ? \"\" : \"hidden\"}`}>\r\n                        <a onClick={() => this.openModal('register')} href=\"#\">\r\n                            Register</a>\r\n                    </li>\r\n                    <li className={`user-nav-link ${!this.state.isLoggedIn ? \"hidden\" : \"\"}`}>\r\n                        <a onClick={() => this.logout()} href=\"#\">\r\n                            Logout\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n\r\n                {/*REGISTER MODAL*/}\r\n                <ModalBox\r\n                    isOpen={this.state.isRegisterModalOpen}\r\n                    closeFunction={() => this.closeModal('register')}>\r\n                    <RegisterForm\r\n                        closeModal={() => this.closeModal('register')}\r\n                        registrationService={this.props.registrationService}/>\r\n                </ModalBox>\r\n                {/*LOGIN MODAL*/}\r\n                <ModalBox\r\n                    isOpen={this.state.isLoginModalOpen}\r\n                    closeFunction={() => this.closeModal('Login')}>\r\n                    <LoginForm\r\n                        loginHandler={this.props.userChangeHandler}\r\n                        closeModal={() => this.closeModal('login')}\r\n                        authenticationService={this.props.authenticationService}/>\r\n                </ModalBox>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserNavigation;\r\n","import Requester from \"../db/Requester\";\r\n\r\nexport default class RegisterService {\r\n    constructor() {\r\n    }\r\n\r\n\r\n   registerUser(userObject) {\r\n        return new Promise((resolve, reject) => {\r\n            Requester.register(userObject).then((successResponse) => {\r\n                resolve(successResponse);\r\n            },(errorResponse) => {\r\n                reject(errorResponse);\r\n            })\r\n        })\r\n   }\r\n}","import Requester from \"../db/Requester\";\r\nimport Utils from \"../components/utils/UtilFunctions\";\r\n\r\nexport default class NotesService {\r\n    constructor() {\r\n    }\r\n    generateHeaders(authToken) {\r\n        return  {\"Authorization\": \"Kinvey \" + authToken};\r\n    }\r\n    addNote(noteData, user)  {\r\n        let headers = this.generateHeaders(user.authToken);\r\n        return new Promise((resolve, reject) => {\r\n            Requester.addNote(noteData, headers).then((successResponse) => {\r\n                let data = {\r\n                    dayId: successResponse.dayId,\r\n                    noteId: successResponse._id\r\n                };\r\n                resolve(Requester.addNoteDayRelation(data, headers))\r\n            },(failedResponse) => {\r\n                reject(failedResponse);\r\n                console.log(failedResponse)\r\n            });\r\n        });\r\n    }\r\n\r\n    getNotesForUserById(userId, dateId, authToken) {\r\n        let header =  this.generateHeaders(authToken);\r\n        return new Promise((resolve, reject) => {\r\n            Requester.getNotesForUserByDay(userId, dateId, header).then((successMessage) => {\r\n                resolve(successMessage)\r\n            }, (errorMessage) => {\r\n                reject(errorMessage);\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    deleteNote(noteId, user) {\r\n        let headers = this.generateHeaders(user.authToken);\r\n        return new Promise((resolve, reject) => {\r\n           Requester.deleteFromById(\"notes\", noteId, headers).then((success) => {\r\n               resolve(success);\r\n           },(failResp) => {\r\n               reject(failResp)\r\n            })\r\n        });\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport CalendarApp from \"./components/CalendarApp\";\r\nimport UserNavigation from \"./components/UserNavigation\";\r\nimport AuthenticationService from \"./services/AuthenticationService\";\r\nimport RegisterService from \"./services/RegisterService\";\r\nimport NotesService from \"./services/NotesService\";\r\n\r\nclass AppContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let authenticationService = new AuthenticationService();\r\n        let registrationService = new RegisterService();\r\n        let notesService = new NotesService();\r\n        this.state = {\r\n            isLoggedIn:false,\r\n            authenticationService: authenticationService,\r\n            registrationService: registrationService,\r\n            notesService: notesService\r\n        };\r\n    }\r\n    componentWillMount() {\r\n        this.setState({isLoggedIn:this.state.authenticationService.isLoggedIn()});\r\n    }\r\n    userChangeHandler() {\r\n        this.setState({isLoggedIn:this.state.authenticationService.isLoggedIn()});\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"app-container\">\r\n                <UserNavigation\r\n                    isLoggedIn={this.state.isLoggedIn}\r\n                    userChangeHandler={() => this.userChangeHandler()}\r\n                    authenticationService={this.state.authenticationService}\r\n                    registrationService={this.state.registrationService}/>\r\n                <CalendarApp\r\n                    isLoggedIn={this.state.isLoggedIn}\r\n                    authenticationService={this.state.authenticationService}\r\n                    notesService={this.state.notesService}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppContainer;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppContainer from \"./AppContainer\";\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}