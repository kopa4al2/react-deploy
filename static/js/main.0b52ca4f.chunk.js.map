{"version":3,"sources":["repositories/ApiConstants.js","components/utils/constants/CalendarConstants.js","serviceWorker.js","components/calendar/main-view/CalendarNavigationBar.js","components/calendar/main-view/DayBlock.js","components/calendar/main-view/CalendarBody.js","components/utils/UtilFunctions.js","components/utils/util-components/Loading.js","components/utils/util-components/MessageBox.js","components/calendar/forms/AddNotesForm.js","components/utils/util-components/Pagination.js","components/utils/util-components/ModalBox.js","components/calendar/main-view/NotesView.js","components/calendar/main-view/CalendarImage.js","components/calendar/main-view/CalendarStatusBar.js","components/calendar/main-view/Calendar.js","components/my-days/CalendarDayHeader.js","components/my-days/CalendarDayBody.js","components/my-days/CalendarDay.js","components/my-days/MyDaysPagination.js","components/my-days/MyDaysContainer.js","components/CalendarApp.js","components/utils/AnimationUtils.js","components/calendar/forms/RegisterForm.js","components/calendar/forms/LoginForm.js","components/navigation/UserNavigation.js","repositories/AuthenticationRepository.js","services/AuthenticationService.js","services/RegisterService.js","repositories/BaseRepository.js","repositories/NotesRepository.js","services/NotesService.js","repositories/MyDaysRepository.js","services/MyDaysService.js","AppContainer.js","index.js"],"names":["BASIC_AUTH_HEADER","Authorization","btoa","API_KEY","module","exports","API_BASE_URL","MONTHS_MAP","0","1","2","3","4","5","6","7","8","9","10","11","DAYS_MAP","Boolean","window","location","hostname","match","CalendarNavigationBar","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","menuLink","links","Array","state","totalLinks","fill","setState","linksStatus","react_default","a","createElement","className","Link","to","Component","DayBlock","_this","concat","onClick","clickHandler","value","React","CalendarBody","currentMonth","nextProps","JSON","stringify","blockValue","blockClass","blockKey","main_view_DayBlock","key","id","row","i","push","renderBlock","_this2","renderHeader","map","day","iterCount","dayValue","dayClass","UtilFunctions","date","getFullYear","getMonth","getDate","year","split","month","Date","date1","date2","user1","user2","authToken","Loading","messageBoxContainer","document","getElementById","MessageBox","animationClass","messageBox","type","setTimeout","closeMessageBox","handleContainerClassChange","appendChild","_this3","closeFunction","contains","removeChild","change","toLowerCase","classList","add","remove","_this4","ReactDOM","createPortal","handleBoxClick","charAt","toUpperCase","slice","message","defaultProps","AddNotesForm","note","isLoading","openMessageBox","evt","target","e","preventDefault","data","dayId","Utils","activeDate","noteContent","loggedInUser","emptyTextArea","bind","stopLoading","openMsgBox","showMessageBox","authenticationService","getCurrentUser","then","user","notesService","addNote","successResponse","failResponse","failed","renderValue","util_components_Loading","rows","onChange","updateNote","submitNote","library","faAngleLeft","faAngleRight","Pagination","pager","items","length","resetPage","prevProps","prevState","setPage","initialPage","page","_this$props","pageSize","totalPages","pageDirection","currentPage","getPager","pageOfItems","startIndex","endIndex","onChangePage","totalItems","startPage","endPage","Math","ceil","min","pages","toConsumableArray","keys","href","react_fontawesome_index_es","icon","index","modalRoot","ModalBox","isShown","transitionEnded","customStyle","modal","isOpen","style","children","NotesView","scrollPosition","isLoggedIn","notes","ajaxStarted","currentNotesPage","notesAnimation","modalData","idToDelete","animateClass","handlePageChange","assertThisInitialized","currentUser","fetchNotes","errGettingCurrentUser","initLoggedIn","findDOMNode","scrollY","isThisViewActive","notesArr","equals","failedResponse","alert","console","log","scrollTo","_this5","showMsgBoxHandler","deleteNote","closeModal","modalState","getNotesForUserById","_this6","div","util_components_Pagination","animationDiv","_id","openModal","_this7","renderNotes","util_components_ModalBox","CalendarImage","currentClass","getCurrentMonth","toString","substr","CalendarStatusBar","oldDate","display","isFlipped","nextProp","displayState","myDaysService","getMyDayByUser","dayResponse","addDayToMyDays","error","loading","main_view_CalendarImage","switchView","main_view_NotesView","forms_AddNotesForm","saveDayToMyDays","Calendar","daysInCurrentMonth","animation","moveYear","moveMonth","createCurrentMonthObject","number","num","newMonth","newYear","monthObject","daysFromNextMonth","getDaysInMonth","getDay","daysInLastMonth","getFirstDayOfMonth","realTimeNow","calendarTimeNow","dayBlock","startsWith","includes","updateYear","updateMonth","main_view_CalendarBody","handleDayBlockClicked","main_view_CalendarStatusBar","CalendarDayHeader","getDayOfWeek","CalendarDayBody","CalendarDay","stretchDay","components_my_days_CalendarDayHeader","components_my_days_CalendarDayBody","MyDaysPagination","nextState","itemsPerPage","pageBar","prevPage","_loop","activeClassName","handleLinkClick","nextPage","pageNumber","renderPageLinks","MyDaysContainer","currentPageItems","getDaysPaged","getDaysCount","resp","count","output","item","components_my_days_CalendarDay","components_my_days_MyDaysPagination","renderDays","faCheck","faTimes","faCheckCircle","faTimesCircle","CalendarApp","bindCustomArrayEqualsMethod","prototype","array","l","defineProperty","enumerable","main_view_CalendarNavigationBar","Route","exact","path","render","main_view_Calendar","components_my_days_MyDaysContainer","AnimationUtils","node","animationDuration","RegisterForm","registerUsername","registerEmail","registerPassword","registerConfirmPassword","isUsernameValid","isEmailValid","isPasswordValid","isConfirmPasswordValid","warningDivClass","checkingUser","registerLoading","usernameExists","showUsernameTooltip","handleInputChange","registerUser","checkIfUsernameExists","registrationService","isUsernameAlreadyTaken","response","eventFirer","areInputsValid","registerUserObject","username","password","email","resolveResponse","rejectResponse","parentNode","event","isValid","name","atob","test","String","confirmPassword","usernameLoading","method","htmlFor","placeholder","onBlur","closeForm","LoginForm","startLoading","loginUsername","loginPassword","handleUsernameChange","handlePasswordChange","loginUser","loginUserObject","closeModalFunc","userChangeHandler","loginHandler","errResp","UserNavigation","isLoginModalOpen","isRegisterModalOpen","mouseOver","modalToClose","logoutFunc","changeLogoutState","logout","onMouseEnter","handleMouseOver","onMouseLeave","handleMouseLeave","marginTop","width","forms_RegisterForm","forms_LoginForm","AuthenticationRepository","$","ajax","url","ApiConstants","headers","AuthenticationService","userObject","setTokenFunction","setToken","Promise","resolve","reject","Requester","succResp","_kmd","authtoken","failResp","getToken","authorizationHeader","success","localStorage","removeItem","errMsg","userToken","setItem","getItem","succ","err","RegisterService","errorResponse","BaseRepository","collectionName","query","requestQuery","dbCollectionName","NotesRepository","userId","noteId","NotesService","noteData","generateHeaders","dateId","header","successMessage","errorMessage","MyDaysRepository","MyDaysService","AppContainer","msgBox","util_components_MessageBox","resetMessageBox","navigation_UserNavigation","BrowserRouter","components_CalendarApp","src_AppContainer","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b52ca4f.chunk.js","sourcesContent":["const API_BASE_URL = \"https://baas.kinvey.com/\";\r\nconst API_KEY = \"kid_r1ynbbg6Q\";\r\nconst API_SECRET = \"33903aebaffd4a3b944250b832bd81f3\";\r\nconst BASIC_AUTH_HEADER = {\r\n    'Authorization': \"Basic \" + btoa(API_KEY + \":\" + API_SECRET)\r\n};\r\nconst MASTER_AUTH_HEADER = {\r\n    'Authorization': \"Basic \" + btoa(API_KEY + \":f55dd3810f61465c98c4fec7525a6ba9\")\r\n};\r\nmodule.exports = {API_BASE_URL, API_KEY, BASIC_AUTH_HEADER};","const MONTHS_MAP = {\r\n    0: \"January\",\r\n    1: \"February\",\r\n    2: \"March\",\r\n    3: \"April\",\r\n    4: \"May\",\r\n    5: \"June\",\r\n    6: \"July\",\r\n    7: \"August\",\r\n    8: \"Semptember\",\r\n    9: \"October\",\r\n    10: \"November\",\r\n    11: \"December\",\r\n};\r\n\r\nconst DAYS_MAP = {\r\n    0: \"MON\",\r\n    1: \"TUE\",\r\n    2: \"WED\",\r\n    3: \"THU\",\r\n    4: \"FRI\",\r\n    5: \"SAT\",\r\n    6: \"SUN\",\r\n    7: \"SUN\"\r\n};\r\n\r\nmodule.exports = {MONTHS_MAP, DAYS_MAP};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a currentNotesPage, after all the\n// existing tabs open on the currentNotesPage have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our currentNotesPage is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this currentNotesPage are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the currentNotesPage.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the currentNotesPage.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. CalendarNavigationBar is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport '../../../component-styles/Nav.css';\nimport {Link} from \"react-router-dom\";\n\n\nclass CalendarNavigationBar extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleLinkClick(menuLink) {\n        let links = Array(this.state.totalLinks).fill(\"\");\n        links[menuLink] = \"nav-link-active\";\n        this.setState({linksStatus: links});\n    }\n\n    render() {\n        return (\n            <nav className={\"navigation-bar\"}>\n                <div className={\"logo-container\"}>\n                    <h2>Calendar</h2>\n                </div>\n                <div className=\"url-container\">\n                    <ul>\n                        <li><Link to={\"/\"}>Home</Link></li>\n                        <li><Link to={\"/my_notes\"}>My notes</Link></li>\n                        <li><Link to={\"/my_days\"}>My Days</Link></li>\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default CalendarNavigationBar;\n","import React from 'react';\r\nimport '../../../component-styles/DayBlockStyle.css';\r\nclass DayBlock extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={`day-block ${this.props.className}`}\r\n                 onClick={() => this.props.clickHandler(this)}>\r\n                {this.props.value}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DayBlock;","import React from 'react';\r\nimport DayBlock from \"./DayBlock\";\r\nimport {DAYS_MAP} from \"../../utils/constants/CalendarConstants\";\r\n\r\nclass CalendarBody extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: this.props.currentMonth\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        //We changed the year or month\r\n        if (JSON.stringify(this.props.currentMonth) !== JSON.stringify(nextProps.currentMonth)) {\r\n            this.setState({currentMonth: nextProps.currentMonth})\r\n        }\r\n    }\r\n\r\n\r\n    renderBlock(blockValue, blockClass, blockKey) {\r\n        return (<DayBlock key={blockKey}\r\n                          id={blockKey}\r\n                          value={blockValue}\r\n                          className={blockClass}\r\n                          clickHandler={this.props.clickHandler}\r\n        />)\r\n    }\r\n\r\n    renderHeader() {\r\n        let row = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            row.push(\r\n                this.renderBlock(DAYS_MAP[i], \"block-heading\", `h-${i}`)\r\n            )\r\n        }\r\n        return row;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"calendar-body\">\r\n                {this.renderHeader()}\r\n                {this.state.currentMonth.map((day, iterCount) => this.renderBlock(day.dayValue, day.dayClass, \"d-\" + iterCount))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default CalendarBody;","export default {\r\n    extractIdByDate: function (date) {\r\n        //Basicly the id is yyyy-mm-dd\r\n        //Example 21st october 2018 will have id=2018-10-21\r\n        let id = date.getFullYear() +\r\n            \"-\" + date.getMonth() +\r\n            \"-\" + date.getDate();\r\n        return id;\r\n    },\r\n    extractDateById: function (id) {\r\n        let year = id.split(\"-\")[0];\r\n        let month = id.split(\"-\")[1];\r\n        let day = id.split(\"-\")[2];\r\n        return new Date(year,month,day,0,0,0);\r\n    },\r\n    compareDates: function (date1, date2) {\r\n        return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\r\n    },\r\n    areUsersSame: function(user1, user2) {\r\n        return user1.id === user2.id && user1.authToken === user2.authToken;\r\n    }\r\n};","import React from 'react';\r\nimport './util-styles/Loading.css';\r\n\r\nclass Loading extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loading-background\">\r\n                <div className=\"loading-wrapper\">\r\n                    <div className=\"loading-inner\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './util-styles/MessageBoxStyle.css';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst propTypes = {\r\n    type: PropTypes.oneOf(['info', 'success', 'warning', 'error']).isRequired,\r\n    message: PropTypes.string.isRequired\r\n};\r\nconst defaultProps = {\r\n    type: \"info\",\r\n    message: \"Message text\",\r\n};\r\n\r\nconst messageBoxContainer = document.getElementById('message-box-container');\r\n\r\nclass MessageBox extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animationClass: \"hide\"\r\n        };\r\n\r\n        this.messageBox = document.createElement('div');\r\n    }\r\n\r\n    componentWillMount() {\r\n        //Self closing if success or info message\r\n        if (this.props.type === 'success' || this.props.type === 'info') {\r\n            setTimeout(() => {\r\n                this.closeMessageBox()\r\n            }, 3000);\r\n        }\r\n\r\n        this.handleContainerClassChange(\"show\");\r\n        messageBoxContainer.appendChild(this.messageBox);\r\n        setTimeout(() => {\r\n            this.setState({animationClass: \"show\"});\r\n        }, 10);\r\n\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.handleContainerClassChange(\"hide\")\r\n    }\r\n\r\n    closeMessageBox() {\r\n        this.setState({animationClass: \"hide\"});\r\n        setTimeout(() => {\r\n            if(this.props.closeFunction)\r\n                this.props.closeFunction();\r\n            if (messageBoxContainer.contains(this.messageBox))\r\n                messageBoxContainer.removeChild(this.messageBox);\r\n        }, 1000);\r\n\r\n\r\n    }\r\n\r\n    handleBoxClick() {\r\n        this.closeMessageBox();\r\n    }\r\n\r\n    handleContainerClassChange(change) {\r\n        if (change.toLowerCase() === \"show\") {\r\n            messageBoxContainer.classList.add(\"show\");\r\n            messageBoxContainer.classList.remove(\"hide\");\r\n        } else if (change.toLowerCase() === \"hide\") {\r\n            messageBoxContainer.classList.add(\"hide\");\r\n            messageBoxContainer.classList.remove(\"show\");\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div\r\n                onClick={() => this.handleBoxClick()}\r\n                className={\"message-box-content \"\r\n                + this.props.type + \"  \"\r\n                + this.state.animationClass}>\r\n                <div\r\n                    className=\"message-box-message\">\r\n                    <span\r\n                        className=\"message-type\">{this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1) + \": \"}</span>\r\n                    {this.props.message}\r\n                </div>\r\n            </div>\r\n            , this.messageBox)\r\n    }\r\n}\r\n\r\nMessageBox.propTypes = propTypes;\r\nMessageBox.defaultProps = defaultProps;\r\n\r\nexport default MessageBox;\r\n","import React from 'react';\r\nimport '../../../component-styles/AddNoteFormStyle.css';\r\nimport Utils from '../../utils/UtilFunctions';\r\nimport Loading from \"../../utils/util-components/Loading\";\r\nimport MessageBox from \"../../utils/util-components/MessageBox\";\r\n\r\nclass AddNotesForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            note: \"\",\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    showMessageBox(type, message) {\r\n       this.props.openMessageBox(type, message);\r\n    }\r\n\r\n\r\n    emptyTextArea() {\r\n        this.setState({note: \"\"});\r\n    }\r\n\r\n    stopLoading() {\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    updateNote(evt) {\r\n        this.setState({note: evt.target.value})\r\n    }\r\n\r\n    submitNote(e) {\r\n        e.preventDefault();\r\n        //if its empty text ignore\r\n        if (this.state.note === \"\")\r\n            return;\r\n\r\n        let data = {};\r\n        data.dayId = Utils.extractIdByDate(this.props.activeDate);\r\n        data.noteContent = this.state.note;\r\n        let emptyTextArea = this.emptyTextArea.bind(this);\r\n        let stopLoading = this.stopLoading.bind(this);\r\n        let openMsgBox = this.showMessageBox.bind(this);\r\n        this.setState({isLoading: true});\r\n        let loggedInUser;\r\n        this.props.authenticationService.getCurrentUser().then((user) => {\r\n            loggedInUser = user;\r\n            this.props.notesService.addNote(data, loggedInUser).then((successResponse) => {\r\n                openMsgBox(\"success\", \"Added a note\");\r\n                emptyTextArea();\r\n                stopLoading();\r\n            }, (failResponse) => {\r\n                openMsgBox(\"error\", \"Could not add note\");\r\n                stopLoading();\r\n            });\r\n        }, (failed) => {\r\n            openMsgBox(\"error\", \"You are not logged in\");\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        let renderValue;\r\n        if (this.state.isLoading) {\r\n            renderValue = <Loading/>\r\n        } else {\r\n            renderValue = <div className=\"form-group\">\r\n                <textarea value={this.state.note} rows=\"3\" className=\"form-control\"\r\n                          onChange={(evt) => this.updateNote(evt)}>\r\n                </textarea>\r\n            </div>\r\n        }\r\n        return (\r\n            <form className=\"add-note-form\">\r\n                {renderValue}\r\n                <button onClick={(e) => this.submitNote(e)} className=\"btn btn-primary\">Add note</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddNotesForm;","//DISCLAIMER I did not make this, credits go to jasonwatmore\r\n//http://jasonwatmore.com/post/2017/03/14/react-pagination-example-with-logic-like-google\r\n//I made some custom functionality to fit my needs\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./util-styles/PaginationStyle.css\";\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleLeft, faAngleRight} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faAngleLeft, faAngleRight);\r\n\r\nconst propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    initialPage: PropTypes.number,\r\n    pageSize: PropTypes.number\r\n};\r\n\r\nconst defaultProps = {\r\n    initialPage: 1,\r\n    pageSize: 10\r\n};\r\n\r\nclass Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {pager: {}};\r\n    }\r\n\r\n    componentWillMount() {\r\n        // set currentNotesPage if items array isn't empty\r\n        if (this.props.items && this.props.items.length) {\r\n            this.resetPage();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // reset currentNotesPage if items array has changed\r\n        if (this.props.items !== prevProps.items) {\r\n            this.resetPage();\r\n        }\r\n    }\r\n\r\n    resetPage() {\r\n        this.setPage(this.props.initialPage);\r\n    }\r\n\r\n    setPage(page) {\r\n        var {items, pageSize} = this.props;\r\n        var pager = this.state.pager;\r\n\r\n        if (page < 1 || page > pager.totalPages) {\r\n            return;\r\n        }\r\n        let pageDirection;\r\n        if(this.state.pager.currentPage < page){\r\n            pageDirection = \"animate-left\";\r\n        } else if(this.state.pager.currentPage > page) {\r\n            pageDirection = \"animate-right\";\r\n        } else {\r\n            pageDirection = \"\";\r\n        }\r\n        // get new pager object for specified currentNotesPage\r\n        pager = this.getPager(items.length, page, pageSize);\r\n        // get new currentNotesPage of items from items array\r\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n        // update state\r\n        this.setState({pager: pager});\r\n        // call change currentNotesPage function in parent component\r\n        this.props.onChangePage(pageOfItems, pageDirection);\r\n    }\r\n\r\n    getPager(totalItems, currentPage, pageSize) {\r\n        // default to first currentNotesPage\r\n        currentPage = currentPage || 1;\r\n\r\n        // default currentNotesPage size is 10\r\n        pageSize = pageSize || 10;\r\n\r\n        // calculate total pages\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        var startPage, endPage;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        var startIndex = (currentPage - 1) * pageSize;\r\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    render() {\r\n        var pager = this.state.pager;\r\n        if (!pager.pages || pager.pages.length <= 1) {\r\n            // don't display pager if there is only 1 currentNotesPage\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                <div className=\"pag-wrapper\">\r\n                    {/*<li className={pager.currentPage === 1 ? 'disabled' : ''}>*/}\r\n                    {/*<a onClick={() => this.setPage(1)}>First</a>*/}\r\n                    {/*</li>*/}\r\n                    <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                        <a href={\"#\"} onClick={() => this.setPage(pager.currentPage - 1)}><FontAwesomeIcon icon=\"angle-left\"/></a>\r\n                    </li>\r\n                    {pager.pages.map((page, index) =>\r\n                        <li key={index} className={pager.currentPage === page ? 'active' : ''}>\r\n                            <a href={\"#\"} onClick={() => this.setPage(page)}>{page}</a>\r\n                        </li>\r\n                    )}\r\n                    <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                        <a href={\"#\"} onClick={() => this.setPage(pager.currentPage + 1)}><FontAwesomeIcon icon=\"angle-right\"/></a>\r\n                    </li>\r\n                    {/*<li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>*/}\r\n                    {/*<a onClick={() => this.setPage(pager.totalPages)}>Last</a>*/}\r\n                    {/*</li>*/}\r\n                </div>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\nexport default Pagination;","import React from 'react';\r\nimport './util-styles/ModalBox.css';\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.getElementById('root');\r\nconst propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    closeFunction: PropTypes.func.isRequired\r\n};\r\n\r\nclass ModalBox extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShown: false,\r\n            animationClass: \"hide\",\r\n            transitionEnded: false,\r\n            customStyle: {}\r\n        };\r\n        this.modal = document.createElement('div');\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.customStyle)\r\n            this.setState({customStyle: this.props.customStyle});\r\n        modalRoot.appendChild(this.modal);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props.isOpen) {\r\n            this.setState({isShown: true});\r\n            setTimeout(() => {\r\n                this.setState({animationClass: \"show\"})\r\n            }, 10);\r\n        }\r\n        else {\r\n            this.setState({animationClass: \"hide\"});\r\n            const animationDurationMs = 300;\r\n            setTimeout(() => {\r\n                this.setState({isShown: false})\r\n            }, animationDurationMs);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div className={`modal-box-background ${this.state.isShown ? \"shown\" : \"\"}`}>\r\n                <div style={this.state.customStyle}\r\n                     className={`modal-box-content ${this.state.animationClass}`}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n            , this.modal)\r\n    }\r\n}\r\n\r\nModalBox.propTypes = propTypes;\r\nexport default ModalBox;\r\n","import React from 'react';\r\nimport '../../../component-styles/NotesView.css';\r\nimport ReactDOM from \"react-dom\";\r\nimport Pagination from \"../../utils/util-components/Pagination\";\r\nimport Loading from \"../../utils/util-components/Loading\";\r\nimport Utils from \"../../utils/UtilFunctions\";\r\nimport ModalBox from \"../../utils/util-components/ModalBox\";\r\n\r\nclass NotesView extends React.Component {\r\n\r\n    scrollPosition = 0;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loggedInUser: this.props.loggedInUser,\r\n            isLoggedIn: this.props.isLoggedIn,\r\n            notes: null,\r\n            ajaxStarted: false,\r\n            currentNotesPage: [],\r\n            notesAnimation: \"\",\r\n            modalData: {\r\n                isOpen: false,\r\n                idToDelete: \"\",\r\n                animateClass: \"\"\r\n            }\r\n        };\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n    }\r\n\r\n    showMessageBox(type, message) {\r\n        this.props.openMessageBox(type, message);\r\n    }\r\n\r\n    //This method is called only once and is for initial loading from DB\r\n    initLoggedIn() {\r\n        this.props.authenticationService.getCurrentUser().then((currentUser) => {\r\n            this.setState({loggedInUser: currentUser});\r\n            this.fetchNotes().then((notes) => this.setState({notes: notes}));\r\n        }, (errGettingCurrentUser) => {\r\n            this.showMessageBox(\"error\", \"Please log in\");\r\n        });\r\n    }\r\n\r\n    //INITIAL GET NOTES FROM DB\r\n    componentWillMount() {\r\n        if (this.props.isLoggedIn) {\r\n            this.initLoggedIn()\r\n        }\r\n    }\r\n\r\n    //For backend purpose\r\n    componentWillUpdate(nextProps) {\r\n        //For the scroll on top issue\r\n        const element = ReactDOM.findDOMNode(this);\r\n        if (element != null) {\r\n            this.scrollPosition = window.scrollY\r\n        }\r\n\r\n        //If we have logged in but havent gotten user object\r\n        if (this.state.isLoggedIn && !this.state.loggedInUser) {\r\n            this.props.authenticationService.getCurrentUser().then((currentUser) => {\r\n                this.setState({loggedInUser: currentUser});\r\n            }, (errGettingCurrentUser) => {\r\n                this.showMessageBox(\"error\", \"Please log in\");\r\n            });\r\n        }\r\n        //IF logged in state will change\r\n        if (nextProps.isLoggedIn !== this.state.isLoggedIn) {\r\n            //If we are about to logout, just log out state\r\n            if (!nextProps.isLoggedIn) {\r\n                this.setState({\r\n                    isLoggedIn: false,\r\n                    loggedInUser: null,\r\n                    notes: null\r\n                });\r\n            } else if (nextProps.isLoggedIn) {\r\n\r\n                //Else if we are about to login\r\n                this.props.authenticationService.getCurrentUser().then((currentUser) => {\r\n                    this.fetchNotes(currentUser).then((notes) => this.setState({notes: notes}));\r\n                    this.setState({\r\n                        isLoggedIn: true,\r\n                        loggedInUser: currentUser\r\n                    });\r\n                }, (errGettingCurrentUser) => {\r\n                    this.showMessageBox(\"error\", \"Please log in\");\r\n                });\r\n            }\r\n        }\r\n\r\n        //Everything below needs authentication\r\n        if (!this.state.isLoggedIn || !this.state.loggedInUser)\r\n            return;\r\n\r\n        //IF WE HAVE CHANGED THE DAY\r\n        //initialize notes and ajax\r\n        if (!Utils.compareDates(this.props.activeDate, nextProps.activeDate)) {\r\n            this.setState({\r\n                notes: null,\r\n                ajaxStarted: false\r\n            });\r\n        }\r\n        //We need to see if notes changed\r\n        //IF (the notes are not initialized or view was inactive and is about to go acite)\r\n        //AND another ajax request hasnt started and element hasnt updated\r\n        if ((!this.state.notes || (nextProps.isThisViewActive && !this.props.isThisViewActive))\r\n            && !this.state.ajaxStarted && nextProps !== this.props) {\r\n            //start ajax\r\n            this.setState({ajaxStarted: true});\r\n            this.fetchNotes().then((notesArr) => {\r\n                this.setState({ajaxStarted: false});\r\n                //if notes are the same return\r\n                if (notesArr.equals(this.state.notes))\r\n                    return;\r\n\r\n                this.setState({\r\n                    notes: notesArr\r\n                })\r\n            }, (failedResponse) => {\r\n                //TODO: ERROR MSG BOX\r\n                alert('failed to fetch notes')\r\n                console.log(failedResponse)\r\n            });\r\n        }\r\n    }\r\n\r\n    //FOR ANIMATION PURPOSE ONLY\r\n    componentDidUpdate() {\r\n        //CURRENT INADEQUATE SOLUTION FOR SCROLL POSITION CHANGE ON PAGE CHANGE AND MODAL OPEN\r\n        const element = ReactDOM.findDOMNode(this);\r\n        if (element != null) {\r\n            setTimeout(() => {\r\n                window.scrollTo(0, this.scrollPosition)\r\n            }, 1);\r\n\r\n        }\r\n\r\n        const animationDuration = 550;\r\n        if (this.state.notesAnimation !== \"\") {\r\n            setTimeout(() => this.setState({notesAnimation: \"\"}), animationDuration)\r\n        }\r\n    }\r\n\r\n    deleteNote(id) {\r\n        let showMsgBoxHandler = this.showMessageBox.bind(this);\r\n        this.props.notesService.deleteNote(id, this.state.loggedInUser).then((successResponse) => {\r\n            showMsgBoxHandler(\"success\", \"Deleted note\")\r\n            this.fetchNotes().then((notes) => this.setState({notes: notes}));\r\n            this.closeModal();\r\n        }, (failResponse) => {\r\n            showMsgBoxHandler(\"error\", \"Failed to delete note\");\r\n        });\r\n\r\n    }\r\n\r\n    openModal(id) {\r\n        let modalState = this.state.modalData;\r\n        modalState.isOpen = true;\r\n        modalState.idToDelete = id;\r\n        modalState.animateClass = \"show\";\r\n        this.setState({modalData: modalState});\r\n    }\r\n\r\n    closeModal() {\r\n        let modalState = this.state.modalData;\r\n        modalState.isOpen = false;\r\n        modalState.animateClass = \"hide\";\r\n        this.setState({modalData: modalState});\r\n    }\r\n\r\n\r\n    //PAGINATION PAGE CHANGE\r\n    handlePageChange(currentPage, pageDirection) {\r\n        this.setState({\r\n            currentNotesPage: currentPage,\r\n            notesAnimation: pageDirection\r\n        });\r\n    }\r\n\r\n    fetchNotes(user) {\r\n        if (user)\r\n            return this.props.notesService.getNotesForUserById(\r\n                user.id,\r\n                Utils.extractIdByDate(this.props.activeDate),\r\n                user.authToken);\r\n        return this.props.notesService.getNotesForUserById(\r\n            this.state.loggedInUser.id,\r\n            Utils.extractIdByDate(this.props.activeDate),\r\n            this.state.loggedInUser.authToken);\r\n\r\n    }\r\n\r\n    renderNotes() {\r\n        if (!this.state.isLoggedIn)\r\n            return \"Login to add some notes\";\r\n        if (this.state.notes !== null) {\r\n            if (this.state.notes.length === 0) {\r\n                return \"No notes for this day yet\";\r\n            }\r\n            else {\r\n                let div = [];\r\n\r\n                div.push(\r\n                    <Pagination\r\n                        key=\"pag-notes\"\r\n                        items={this.state.notes}\r\n                        onChangePage={this.handlePageChange}\r\n                        pageSize={5}/>\r\n                );\r\n\r\n                let animationDiv = [\r\n                    <div key=\"note-anim-div\"\r\n                         className={\"note-anim \" + this.state.notesAnimation}>\r\n                        {this.state.currentNotesPage.map((note) =>\r\n                                <li key={note._id}>{note.noteContent}\r\n                                    <span key=\"dada\" className=\"delete-note-btn\"\r\n                                          onClick={() => this.openModal(note._id)}>\r\n                            <span key={\"nene\"} className=\"tooltip\">Delete this note</span>\r\n                            <a href=\"#\">X</a>\r\n                        </span>\r\n                                </li>\r\n                        )}\r\n                    </div>];\r\n                div.push(animationDiv);\r\n                return div;\r\n            }\r\n        }//If notes are null are about to be fetched so i return Loding component\r\n        else\r\n            return <Loading/>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"notes-list\">\r\n                {this.renderNotes()}\r\n                <ModalBox\r\n                    isOpen={this.state.modalData.isOpen}\r\n                    closeFunction={() => this.closeModal()}\r\n                >\r\n                    <div className=\"delete-confirmation-modal\">\r\n                        <div className=\"delete-confirmation-modal-header\">\r\n                            <p>Are you sure?</p>\r\n                            <span><a href=\"#\" onClick={() => this.closeModal()}>&times;</a></span>\r\n                        </div>\r\n                        <div className=\"delete-confirmation-modal-message\">This will delete the note</div>\r\n                        <div className=\"delete-confirmation-modal-footer\">\r\n                            <button className=\"btn btn-danger\"\r\n                                    onClick={() => this.deleteNote(this.state.modalData.idToDelete)}>Yes\r\n                            </button>\r\n                            <button className=\"btn btn alert-primary\" onClick={() => this.closeModal()}>No</button>\r\n                        </div>\r\n                    </div>\r\n                </ModalBox>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotesView;\r\n","import React from 'react';\r\nimport {MONTHS_MAP} from \"../../utils/constants/CalendarConstants\";\r\n\r\nclass CalendarImage extends React.Component {\r\n\r\n    getCurrentMonth() {\r\n        return this.props.activeDate.getMonth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.currentClass}>\r\n                <h3>{MONTHS_MAP[this.getCurrentMonth()].toString().substr(0,3)}</h3>\r\n                <p className=\"day-paragraph\">{this.props.activeDate.getDate()}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarImage;","import React from 'react';\r\nimport '../../../component-styles/CalendarStatusStyle.css';\r\nimport AddNotesForm from \".././forms/AddNotesForm\";\r\nimport NotesView from \"./NotesView\";\r\nimport CalendarImage from \"./CalendarImage\";\r\nimport Loading from \"../../utils/util-components/Loading\";\r\n\r\nclass CalendarStatusBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animateClass: \"\",\r\n            oldDate: new Date(),\r\n            isLoading: false,\r\n            display: {\r\n                isFlipped: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProp) {\r\n\r\n        if (nextProp.activeDate !== this.props.activeDate) {\r\n            //makes the top sheet animated, and switches blocks location\r\n\r\n            this.setState({animateClass: \"calendar-block-animate\"});\r\n            //Timeout is so floating animated calendar currentNotesPage can stay the same\r\n            const animationDuration = 950;\r\n            setTimeout(() => {\r\n                this.setState({animateClass: \"\"});\r\n                this.setState({oldDate: nextProp.activeDate});\r\n            }, animationDuration);\r\n        }\r\n    }\r\n\r\n    switchView() {\r\n        let displayState = this.state.display;\r\n        displayState.isFlipped = !displayState.isFlipped;\r\n        this.setState({display: displayState});\r\n    }\r\n\r\n\r\n    saveDayToMyDays() {\r\n        this.setState({isLoading: true});\r\n\r\n        this.props.authenticationService.getCurrentUser()\r\n            .then((user) => {\r\n                this.props.myDaysService.getMyDayByUser(this.props.activeDate, user)\r\n                    .then((dayResponse) => {\r\n                        if (dayResponse.length === 0) {\r\n                            this.props.myDaysService.addDayToMyDays(this.props.activeDate, user)\r\n                                .then(() => {\r\n                                    this.props.openMessageBox(\"success\", \"Added day to 'my days'\");\r\n                                    this.setState({isLoading: false})\r\n                                }, (error) => {\r\n                                    alert(\"DEVELOPER BUG: something went wrong with adding day to my days\");\r\n                                });\r\n                        }\r\n                        else {\r\n                            this.props.openMessageBox(\"error\", \"This day is already in 'my days'\");\r\n                            this.setState({isLoading:false});\r\n                        }\r\n\r\n                    }, (error) => {\r\n                        alert(\"DEVELOPER BUG: something went wrong with fetching day\")\r\n                    })\r\n            }, (error) => {\r\n                this.props.openMessageBox(\"error\", \"Please log in\");\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let loading = this.state.isLoading ? <Loading/> : \"\";\r\n        return (\r\n            <div className=\"status-container\">\r\n                {/*The upper part (the calendar image)*/}\r\n                <div className=\"block-container\">\r\n                    <CalendarImage\r\n                        currentClass={\"calendar-block old-calendar-block\"}\r\n                        activeDate={this.props.activeDate}/>\r\n                    <CalendarImage\r\n                        currentClass={\"calendar-block \" + this.state.animateClass}\r\n                        activeDate={this.state.oldDate}/>\r\n                </div>\r\n                {/*The lower part (notes etc)*/}\r\n                <div className=\"notes-container\">\r\n                    {loading}\r\n                    <button\r\n                        className={`switch-view ${this.props.isLoggedIn ? \" enabled\" : \" disabled\"}`}\r\n                        onClick={() => this.switchView()}>\r\n                        {this.state.display.isFlipped ? \"Go back to notes\" : \"Add notes for this day\"}\r\n                    </button>\r\n                    <div\r\n                        className={`view-note-container\r\n                        ${this.state.display.isFlipped ? \"flipped\" : \"\"}`}>\r\n                        <div className=\"notes-view\">\r\n                            <NotesView\r\n                                openMessageBox={this.props.openMessageBox}\r\n                                isLoggedIn={this.props.isLoggedIn}\r\n                                authenticationService={this.props.authenticationService}\r\n                                notesService={this.props.notesService}\r\n                                activeDate={this.props.activeDate}\r\n                                isThisViewActive={!this.state.display.isFlipped}/>\r\n                        </div>\r\n                        <div className=\"save-note back\">\r\n                            <AddNotesForm\r\n                                openMessageBox={this.props.openMessageBox}\r\n                                authenticationService={this.props.authenticationService}\r\n                                notesService={this.props.notesService}\r\n                                activeDate={this.props.activeDate}/>\r\n                            <button onClick={() => this.saveDayToMyDays()} className=\"btn btn-primary\">Save day to my\r\n                                days\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarStatusBar;\r\n","import React from 'react';\r\nimport '../../../component-styles/CalendarStyle.css';\r\nimport '../../../component-styles/responsive-styles/CalendarBodyResponsive.css'\r\nimport CalendarBody from \"./CalendarBody\";\r\nimport CalendarStatusBar from \"./CalendarStatusBar\";\r\nimport Utils from \"../../utils/UtilFunctions\";\r\nimport {MONTHS_MAP} from \"../../utils/constants/CalendarConstants\";\r\n\r\nclass Calendar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        /**INFO ABOUT STATE VARIABLES\r\n         *@params {Date}           activeDate         The date of the currently clicked day\r\n         *@params {object}         daysInCurrentMonth The information about every day's rendering (class, value etc)\r\n         *@params {Number}         year               The current year\r\n         *@params {Number}         month              The current month\r\n         *@params {Object}         animation          Animation classes for this component\r\n         */\r\n        this.state = {\r\n            activeDate: new Date(),\r\n            daysInCurrentMonth: {},\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth(),\r\n            animation: {\r\n                moveYear: \"\",\r\n                moveMonth: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            daysInCurrentMonth: this.createCurrentMonthObject()\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let animation = this.state.animation;\r\n        const animationDuration = 1000;\r\n        if (animation.moveYear !== \"\") {\r\n            setTimeout(() => {\r\n                    animation.moveYear = \"\";\r\n                    this.setState({animation: animation})\r\n                }\r\n                , animationDuration);\r\n        }\r\n        if(animation.moveMonth !== \"\") {\r\n            setTimeout(() => {\r\n                    animation.moveMonth = \"\";\r\n                    this.setState({animation: animation})\r\n                }\r\n                , animationDuration);\r\n        }\r\n    }\r\n\r\n    updateYear(number) {\r\n        let animation = this.state.animation;\r\n        if (number < 0) {\r\n            //Left move\r\n            animation.moveYear = \"year-left\";\r\n        } else {\r\n            //right move\r\n            animation.moveYear = \"year-right\";\r\n        }\r\n        this.setState({\r\n            year: this.state.year + number,\r\n            currentMonth: this.createCurrentMonthObject(),\r\n            animation: animation\r\n        })\r\n    }\r\n\r\n    updateMonth(num) {\r\n        let animation = this.state.animation;\r\n        if (num < 0) {\r\n            //Left move\r\n            animation.moveMonth = \"month-left\";\r\n        } else {\r\n            //right move\r\n            animation.moveMonth = \"month-right\";\r\n        }\r\n        let newYear = this.state.year, newMonth;\r\n        if (this.state.month === 0 && num === (-1)) {\r\n            newMonth = 11;\r\n            newYear = this.state.year - 1;\r\n        }\r\n        else if (this.state.month === 11 && num === 1) {\r\n            newMonth = 0;\r\n            newYear = this.state.year + 1;\r\n        }\r\n        else {\r\n            newMonth = this.state.month + num;\r\n        }\r\n        this.setState({month: newMonth, year: newYear});\r\n    }\r\n\r\n    createCurrentMonthObject() {\r\n        let monthObject = [];\r\n        //We subtract the dayValue of the week of the last dayValue of the current month from 6,\r\n        // because we start from 0\r\n        //example: Date(2018,11,1).getDay() = THU = 3 (since MON is 0)\r\n        let daysFromNextMonth = 6 - new Date(this.state.year,\r\n            this.state.month,\r\n            this.getDaysInMonth() - 1).getDay();\r\n\r\n        let daysInLastMonth = this.getDaysInMonth(this.state.month - 1);\r\n        let currentMonthFirstDay = this.getFirstDayOfMonth();\r\n        let startDateLastMonth = daysInLastMonth - currentMonthFirstDay;\r\n        for (let i = startDateLastMonth + 1; i <= daysInLastMonth; i++) {\r\n            monthObject.push({\r\n                dayValue: i,\r\n                dayClass: \"last-month\"\r\n            });\r\n        }\r\n        for (let i = 1; i <= this.getDaysInMonth(); i++) {\r\n            let realTimeNow = new Date();\r\n            let calendarTimeNow = new Date(this.state.year, this.state.month, i);\r\n            let dayClass = \"current-month\";\r\n            if (i === realTimeNow.getDate() && this.state.month === realTimeNow.getMonth() && this.state.year === realTimeNow.getFullYear()) {\r\n                dayClass += \" today\";\r\n            }\r\n            if (Utils.compareDates(this.state.activeDate, calendarTimeNow)) {\r\n                dayClass += \" active\";\r\n            }\r\n            monthObject.push({\r\n                dayValue: i,\r\n                dayClass: dayClass\r\n            });\r\n        }\r\n        for (let i = 1; i <= daysFromNextMonth; i++) {\r\n            monthObject.push({\r\n                dayValue: i,\r\n                dayClass: \"next-month\"\r\n            });\r\n        }\r\n        return monthObject;\r\n    }\r\n\r\n    getDaysInMonth(month) {\r\n        //IF we dont have a month as a function parameter, we return days in the current month\r\n        if (month != null) {\r\n            if (month === -1)\r\n                month = 11;\r\n            return new Date(this.state.year, month + 1, 0).getDate();\r\n        }\r\n        return new Date(this.state.year, this.state.month + 1, 0).getDate();\r\n    }\r\n\r\n    getFirstDayOfMonth() {\r\n        return new Date(this.state.year, this.state.month, 0).getDay();\r\n    }\r\n\r\n    handleDayBlockClicked(dayBlock) {\r\n        //Check if its a valid dayblock\r\n        if (dayBlock.props.id.startsWith(\"d-\") && dayBlock.props.className.includes(\"current-month\")) {\r\n            let date = new Date(this.state.year, this.state.month, dayBlock.props.value);\r\n            this.setState({activeDate: date});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calendar-container\">\r\n                {/*The left part (calendar itself)*/}\r\n                <div className=\"body-container\">\r\n                    <div className=\"calendar-header\">\r\n                        <div className=\"year\">\r\n                            <button onClick={() => this.updateYear(-1)}></button>\r\n                            <p className={this.state.animation.moveYear}>{this.state.year}</p>\r\n                            <button onClick={() => this.updateYear(1)}></button>\r\n                        </div>\r\n                        <div className=\"month\">\r\n                            <button onClick={() => this.updateMonth(-1)}></button>\r\n                            <p className={this.state.animation.moveMonth}>{MONTHS_MAP[this.state.month]}</p>\r\n                            <button onClick={() => this.updateMonth(1)}></button>\r\n                        </div>\r\n                    </div>\r\n                    <CalendarBody clickHandler={this.handleDayBlockClicked.bind(this)}\r\n                                  currentMonth={this.createCurrentMonthObject()}/>\r\n                </div>\r\n                {/*The right part of the calendar*/}\r\n                <CalendarStatusBar\r\n                    openMessageBox={this.props.openMessageBox}\r\n                    isLoggedIn={this.props.isLoggedIn}\r\n                    activeDate={this.state.activeDate}\r\n                    notesService={this.props.notesService}\r\n                    authenticationService={this.props.authenticationService}\r\n                    myDaysService={this.props.myDaysService}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Calendar;","import React from 'react';\r\nimport '../../component-styles/my-days/CalendarDayHeader.css';\r\nimport UtilFunctions from \"../utils/UtilFunctions\";\r\nimport {MONTHS_MAP, DAYS_MAP} from \"../utils/constants/CalendarConstants\";\r\n\r\nclass CalendarDayHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    getDate(){\r\n        return UtilFunctions.extractDateById(this.props.date);\r\n    }\r\n    getMonth() {\r\n        return MONTHS_MAP[this.getDate().getMonth()].toString().substr(0,3);\r\n    }\r\n    getDayOfWeek() {\r\n        return DAYS_MAP[this.getDate().getDay()];\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"calendar-header\">\r\n                <div className=\"calendar-day-year-month-container\">\r\n                    <span className=\"calendar-day-month\">{this.getMonth()}</span>\r\n                    <span className=\"calendar-day-year\">{this.getDate().getFullYear()}</span>\r\n                </div>\r\n                <div className=\"calendar-day-number\">{this.getDate().getDate()}</div>\r\n                <div className=\"calendar-day-day-of-week\">{this.getDayOfWeek()}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarDayHeader;","import React from 'react';\r\nimport '../../component-styles/my-days/CalendarDayBody.css';\r\n\r\nclass CalendarDayBody extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`calendar-day-body `}>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarDayBody;","import React from 'react';\r\nimport '../../component-styles/my-days/CalendarDay.css';\r\nimport CalendarDayHeader from \"./CalendarDayHeader\";\r\nimport CalendarDayBody from \"./CalendarDayBody\";\r\n\r\nclass CalendarDay extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    stretchDay() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={()=> this.stretchDay()} className=\"calendar-day\">\r\n                <CalendarDayHeader\r\n                date={this.props.date}/>\r\n                <CalendarDayBody/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarDay;","import React from 'react';\r\nimport '../../component-styles/my-days/MyDaysPagination.css';\r\n\r\nclass MyDaysPagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalPages: null,\r\n            currentPage: null\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        if (this.state.totalPages === null &&\r\n            nextProps.totalItems && nextProps.itemsPerPage) {\r\n            let totalPages = Math.ceil(this.props.totalItems / this.props.itemsPerPage);\r\n            this.setState({\r\n                totalPages: totalPages,\r\n                currentPage: this.props.currentPage\r\n            });\r\n        }\r\n    }\r\n\r\n    renderPageLinks() {\r\n        if (this.state.totalPages <= 1)\r\n            return;\r\n\r\n        let pageBar = [];\r\n        pageBar.push(<li\r\n            className={this.state.currentPage === 1 ? \"disabled\" : \"\"}\r\n            key={\"prev-page\"}>\r\n            <a onClick={() => this.prevPage()} href=\"#\">Previous</a>\r\n        </li>);\r\n        for (let i = 1; i <= this.state.totalPages; i++) {\r\n            let activeClassName = this.state.currentPage === i ? \"active\" : \"\";\r\n            pageBar.push(<li key={\"page-link\" + i}>\r\n                <a\r\n                    className={activeClassName}\r\n                    onClick={() => this.handleLinkClick(i)} href=\"#\">{i}</a>\r\n            </li>)\r\n        }\r\n        pageBar.push(<li\r\n            className={this.state.currentPage === this.state.totalPages ? \"disabled\" : \"\"}\r\n            key={\"next-page\"}>\r\n            <a onClick={() => this.nextPage()} href=\"#\">Next</a>\r\n        </li>);\r\n        return pageBar;\r\n    }\r\n\r\n    handleLinkClick(pageNumber) {\r\n        this.setState({currentPage:pageNumber});\r\n        this.props.handlePageChange(pageNumber);\r\n    }\r\n\r\n    prevPage() {\r\n        return this.handleLinkClick(this.state.currentPage - 1);\r\n    }\r\n    nextPage() {\r\n        return this.handleLinkClick(this.state.currentPage + 1);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"my-days-pagination\">\r\n                <ul className=\"page-bar\">\r\n                    {this.renderPageLinks()}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyDaysPagination;","import React from 'react';\r\nimport CalendarDay from \"./CalendarDay\";\r\nimport '../../component-styles/my-days/MyDaysContainer.css';\r\nimport Loading from \"../utils/util-components/Loading\";\r\nimport UtilFunctions from \"../utils/UtilFunctions\";\r\nimport MyDaysPagination from \"./MyDaysPagination\";\r\n\r\nclass MyDaysContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentUser: {},\r\n            totalItems: 0,\r\n            pageSize: 3,\r\n            currentPage: 1,\r\n            currentPageItems: [],\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.isLoggedIn) {\r\n            this.props.authenticationService.getCurrentUser()\r\n                .then((user) => {\r\n                    this.setState({currentUser: user});\r\n                });\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        //IF USER IS LOGGED IN\r\n        if (nextProps.isLoggedIn && nextState.currentUser.id) {\r\n            if (nextState.currentPage !== this.state.currentPage) {\r\n                this.setState({isLoading: true});\r\n                this.props.myDaysService.getDaysPaged(this.state.pageSize, nextState.currentPage, nextState.currentUser)\r\n                    .then((pageOfItems) => {\r\n                        this.setState({currentPageItems: pageOfItems, isLoading: false});\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.isLoggedIn &&\r\n            !UtilFunctions.areUsersSame(prevState.currentUser, this.state.currentUser)) {\r\n            this.setState({isLoading: true});\r\n            this.props.myDaysService.getDaysCount(this.state.currentUser).then((resp) => {\r\n                this.props.myDaysService.getDaysPaged(this.state.pageSize, this.state.currentPage, this.state.currentUser)\r\n                    .then((resp) => {\r\n                        this.setState({\r\n                            currentPageItems: resp,\r\n                            isLoading: false\r\n                        });\r\n                    });\r\n                this.setState({totalItems: resp.count});\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        this.setState({currentPage: pageNumber});\r\n    }\r\n\r\n    renderDays() {\r\n        let output = [];\r\n        this.state.currentPageItems.map((item) => {\r\n            output.push(<CalendarDay\r\n                key={item._id}\r\n                date={item.date}/>)\r\n        });\r\n\r\n        return output\r\n\r\n    }\r\n\r\n    render() {\r\n        let loading = this.state.isLoading ? <Loading/> : \"\";\r\n        return (\r\n            <div>\r\n                <div className=\"top-div\">\r\n                    <MyDaysPagination\r\n                        totalItems={this.state.totalItems}\r\n                        itemsPerPage={this.state.pageSize}\r\n                        currentPage={this.state.currentPage}\r\n                        handlePageChange={this.handlePageChange.bind(this)}/>\r\n                </div>\r\n                <div className=\"my-days-container\">\r\n                    {loading}\r\n                    {this.renderDays()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyDaysContainer;","import React, {Component} from 'react';\r\nimport CalendarNavigationBar from \"./calendar/main-view/CalendarNavigationBar\";\r\nimport Calendar from \"./calendar/main-view/Calendar\";\r\nimport '../component-styles/App.css';\r\nimport {library} from '@fortawesome/fontawesome-svg-core';\r\nimport {faCheck, faCheckCircle, faTimes, faTimesCircle} from '@fortawesome/free-solid-svg-icons';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport NotesView from \"./calendar/main-view/NotesView\";\r\nimport MyDaysContainer from \"./my-days/MyDaysContainer\";\r\n\r\nlibrary.add(faCheck, faTimes, faCheckCircle, faTimesCircle);\r\n\r\nclass CalendarApp extends Component {\r\n\r\n    componentWillMount() {\r\n        this.bindCustomArrayEqualsMethod();\r\n    }\r\n\r\n    bindCustomArrayEqualsMethod() {\r\n        Array.prototype.equals = function (array) {\r\n            // if the other array is a falsy value, return\r\n            if (!array) {\r\n                return false;\r\n            }\r\n\r\n\r\n            // compare lengths - can save a lot of time\r\n            if (this.length !== array.length) {\r\n                return false;\r\n            }\r\n\r\n\r\n            for (var i = 0, l = this.length; i < l; i++) {\r\n                // Check if we have nested arrays\r\n                if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                    // recurse into the nested arrays\r\n                    if (!this[i].equals(array[i])) {\r\n\r\n                        return false;\r\n                    }\r\n                }\r\n                else if (this[i] === array[i]) {\r\n                    // Warning - two different object instances will never be equal: {x:20} != {x:20}\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        // Hide method from for-in loops\r\n        Object.defineProperty(Array.prototype, \"equals\", {enumerable: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calendar-app-container\">\r\n\r\n                <CalendarNavigationBar/>\r\n                <Route exact path=\"/\"\r\n                       render={(props) => <Calendar openMessageBox={this.props.openMessageBox}\r\n                                                    isLoggedIn={this.props.isLoggedIn}\r\n                                                    authenticationService={this.props.authenticationService}\r\n                                                    notesService={this.props.notesService}\r\n                                                    myDaysService={this.props.myDaysService}/>}\r\n                />\r\n                <Route\r\n                    path={\"/my_notes\"}\r\n                    render={(props) => <NotesView\r\n                        openMessageBox={this.props.openMessageBox}\r\n                        isLoggedIn={this.props.isLoggedIn}\r\n                        authenticationService={this.props.authenticationService}\r\n                        notesService={this.props.notesService}\r\n                        activeDate={new Date()}/>}\r\n                />\r\n                <Route\r\n                    path={\"/my_days\"}\r\n                    render={(props) => <MyDaysContainer\r\n                        isLoggedIn={this.props.isLoggedIn}\r\n                        authenticationService={this.props.authenticationService}\r\n                        myDaysService={this.props.myDaysService}/>}\r\n                />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarApp;\r\n","export default {\r\n    animateElement: function (node, animationClass, animationDuration) {\r\n        node.classList.add(animationClass);\r\n        setTimeout(() => {\r\n            node.classList.remove(\"shake-animate\");\r\n        }, animationDuration);\r\n    }\r\n};\r\n","import React from 'react';\r\nimport Loading from \"../../utils/util-components/Loading\";\r\nimport '../../../component-styles/AuthenticationFormsStyle.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport AnimationUtils from \"../../utils/AnimationUtils\";\r\n\r\nclass RegisterForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            registerUsername: \"\",\r\n            registerEmail: \"\",\r\n            registerPassword: \"\",\r\n            registerConfirmPassword: \"\",\r\n            isUsernameValid: false,\r\n            isEmailValid: false,\r\n            isPasswordValid: false,\r\n            isConfirmPasswordValid: false,\r\n            warningDivClass: \"text-warning\",\r\n            checkingUser: false,\r\n            registerLoading: false,\r\n            usernameExists: true,\r\n            showUsernameTooltip: false\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.registerUser = this.registerUser.bind(this);\r\n        this.checkIfUsernameExists = this.checkIfUsernameExists.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({warningDivClass: \"text-warning\"});\r\n    }\r\n\r\n    closeForm() {\r\n        this.setState({warningDivClass: \"text-warning\"});\r\n        this.props.closeModal();\r\n    }\r\n\r\n    checkIfUsernameExists() {\r\n        if (!this.isUsernameValid(this.state.registerUsername))\r\n            return;\r\n        this.setState({checkingUser: true});\r\n        this.props.registrationService.isUsernameAlreadyTaken(this.state.registerUsername)\r\n            .then((response) => {\r\n                if (response.usernameExists) {\r\n                    this.setState({\r\n                        usernameExists: true,\r\n                        showUsernameTooltip: true\r\n                    });\r\n                }\r\n                else\r\n                    this.setState({\r\n                        usernameExists: false,\r\n                        showUsernameTooltip: false\r\n                    });\r\n                this.setState({checkingUser: false});\r\n            })\r\n    }\r\n\r\n    areInputsValid() {\r\n        return this.state.isUsernameValid && this.state.isEmailValid && this.state.isPasswordValid && this.state.isConfirmPasswordValid;\r\n    }\r\n    registerUser(eventFirer) {\r\n\r\n        if (this.areInputsValid() && !this.state.usernameExists) {\r\n            let registerUserObject = {\r\n                username: this.state.registerUsername,\r\n                password: this.state.registerPassword,\r\n                email: this.state.registerEmail\r\n            };\r\n            this.setState({registerLoading:true});\r\n            let closeModal = this.props.closeModal;\r\n            this.props.registrationService.registerUser(registerUserObject).then((resolveResponse) => {\r\n                this.setState({registerLoading:false});\r\n                this.props.openMessageBox(\"success\", \"Registered successfully\");\r\n                closeModal();\r\n            }, (rejectResponse) => {\r\n                this.props.openMessageBox(\"error\", \"Failed to register\");\r\n            })\r\n        }//If not valid change the little text to red color\r\n        else {\r\n            //Its some kind of magic\r\n            let modal = eventFirer.target.parentNode.parentNode.parentNode;\r\n            AnimationUtils.animateElement(modal, \"shake-animate\", 700);\r\n            this.setState({warningDivClass: \"text-danger\"})\r\n        }\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        let value = event.target.value;\r\n        let name = event.target.name;\r\n        if (name.toLowerCase().includes(\"password\"))\r\n            value = btoa(value);\r\n        this.setState({\r\n            [\"register\" + name]: value\r\n        });\r\n        let isValid;\r\n        switch (name) {\r\n            case \"Username\" : {\r\n                isValid = this.isUsernameValid(value);\r\n                this.setState({isUsernameValid: isValid});\r\n            }\r\n                break;\r\n            case \"Email\" : {\r\n                isValid = this.isEmailValid(value);\r\n                this.setState({isEmailValid: isValid});\r\n            }\r\n                break;\r\n            case \"Password\" : {\r\n                isValid = this.isPasswordValid(value);\r\n                this.setState({isPasswordValid: isValid});\r\n            }\r\n                break;\r\n            case \"ConfirmPassword\" : {\r\n                isValid = this.isConfirmPasswordValid(value);\r\n                this.setState({isConfirmPasswordValid: isValid});\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    isUsernameValid(username) {\r\n        return username.length >= 3 && username.length <= 16;\r\n    }\r\n\r\n    isPasswordValid(password) {\r\n        return atob(password).length >= 3;\r\n    }\r\n\r\n    isEmailValid(email) {\r\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    isConfirmPasswordValid(confirmPassword) {\r\n        return atob(this.state.registerPassword) === atob(confirmPassword);\r\n    }\r\n\r\n    render() {\r\n        let usernameLoading = this.state.checkingUser ? <Loading/> : \"\";\r\n        let registerLoading = this.state.registerLoading ? <Loading/> : \"\";\r\n        return (\r\n            <form method=\"GET\" className=\"user-form user-register-form\">\r\n                {registerLoading}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"register-username\">Username:</label>\r\n                    <div\r\n                        className={`${this.state.warningDivClass} ${this.state.isUsernameValid ? \"hide\" : \" \"}`}>Username\r\n                        can be between 3 and 16 letters long\r\n                    </div>\r\n                    <div className=\"position-relative\">\r\n                        <input\r\n                            name={\"Username\"}\r\n                            className=\"form-control\"\r\n                            id=\"register-username\"\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                            onChange={this.handleInputChange}\r\n                            onBlur={this.checkIfUsernameExists}/>\r\n                        <span className={this.state.usernameExists ? \"hide\" : \"show\"}><FontAwesomeIcon\r\n                            icon=\"check-circle\"/></span>\r\n                        <span className={this.state.usernameExists ? \"show\" : \"hide\"}>\r\n                            <span id=\"username-taken-tooltip\" className={(this.state.showUsernameTooltip) ? \"show\" : \"hide\"}>\r\n                            username taken\r\n                            </span><FontAwesomeIcon\r\n                            icon=\"times-circle\"/></span>\r\n                        {usernameLoading}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"register-password\">Email:</label>\r\n                    <div className={`${this.state.warningDivClass} ${this.state.isEmailValid ? \"hide\" : \" \"}`}>Email\r\n                        should\r\n                        be \"example@mailService.domain\"\r\n                    </div>\r\n                    <div className=\"position-relative\">\r\n                        <input\r\n                            name={\"Email\"}\r\n                            className=\"form-control\"\r\n                            id=\"register-email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={this.handleInputChange}/>\r\n                        <span className={this.state.isEmailValid ? \"show\" : \"hide\"}><FontAwesomeIcon\r\n                            icon=\"check-circle\"/></span>\r\n                        <span className={this.state.isEmailValid ? \"hide\" : \"show\"}><FontAwesomeIcon\r\n                            icon=\"times-circle\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"register-password\">Password:</label>\r\n                    <div\r\n                        className={`${this.state.warningDivClass} ${this.state.isPasswordValid ? \"hide\" : \" \"}`}>Password\r\n                        must be atleast 3 symbols\r\n                    </div>\r\n                    <div className=\"position-relative\">\r\n                        <input\r\n                            name={\"Password\"}\r\n                            className=\"form-control\"\r\n                            id=\"register-password\"\r\n                            type=\"password\"\r\n                            placeholder=\"password\"\r\n                            onChange={this.handleInputChange}/>\r\n                        <span className={this.state.isPasswordValid ? \"show\" : \"hide\"}><FontAwesomeIcon\r\n                            icon=\"check-circle\"/></span>\r\n                        <span className={this.state.isPasswordValid ? \"hide\" : \"show\"}><FontAwesomeIcon\r\n                            icon=\"times-circle\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"register-password\">Confirm Password:</label>\r\n                    <div\r\n                        className={`${this.state.warningDivClass} ${this.state.isConfirmPasswordValid ? \"hide\" : \" \"}`}>Passwords\r\n                        don't match\r\n                    </div>\r\n                    <div className=\"position-relative\">\r\n                        <input\r\n                            name={\"ConfirmPassword\"}\r\n                            className=\"form-control\"\r\n                            id=\"register-confirm-password\"\r\n                            type=\"password\"\r\n                            placeholder=\"confirm password\"\r\n                            onChange={this.handleInputChange}/>\r\n                        <span className={this.state.isConfirmPasswordValid ? \"show\" : \"hide\"}><FontAwesomeIcon\r\n                            icon=\"check-circle\"/></span>\r\n                        <span className={this.state.isConfirmPasswordValid ? \"hide\" : \"show\"}><FontAwesomeIcon\r\n                            icon=\"times-circle\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group pl-1\">\r\n                    <button type=\"button\" onClick={this.registerUser} className=\"btn btn-primary\">Register</button>\r\n                    <button type=\"button\" onClick={() => this.closeForm()} className=\"btn btn-primary\">Cancel\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterForm;","import React from 'react';\r\nimport '../../../component-styles/DayBlockStyle.css';\r\nimport Loading from \"../../utils/util-components/Loading\";\r\nimport AnimationUtils from \"../../utils/AnimationUtils\";\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startLoading:false,\r\n            loginUsername: \"\",\r\n            loginPassword: \"\"\r\n        };\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.loginUser = this.loginUser.bind(this);\r\n\r\n    }\r\n    stopLoading() {\r\n        this.setState({startLoading:false});\r\n    }\r\n    loginUser(e) {\r\n        //get the modal to animate it\r\n        let modal = e.target.parentNode.parentNode.parentNode;\r\n\r\n        let loginUserObject = {\r\n            username: this.state.loginUsername,\r\n            password: this.state.loginPassword,\r\n        };\r\n        let closeModalFunc = this.props.closeModal;\r\n        let stopLoading = this.stopLoading.bind(this);\r\n        //This is so global object AppContainer knows when user changes\r\n        let userChangeHandler = this.props.loginHandler;\r\n        this.setState({startLoading:true});\r\n        this.props.authenticationService.loginUser(loginUserObject).then((authToken) => {\r\n            stopLoading();\r\n            closeModalFunc();\r\n            userChangeHandler();\r\n            this.props.openMessageBox(\"success\", \"Logged in\");\r\n        }, (errResp) => {\r\n            stopLoading();\r\n            this.props.openMessageBox(\"error\", \"Wrong account or password\");\r\n            AnimationUtils.animateElement(modal, \"shake-animate\", 700);\r\n        });\r\n    }\r\n\r\n\r\n    handleUsernameChange(event) {\r\n        let username = event.target.value;\r\n        this.setState({loginUsername: username})\r\n    }\r\n\r\n    handlePasswordChange(event) {\r\n        let password = btoa(event.target.value);\r\n        this.setState({loginPassword: password})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"user-form user-login-form\">\r\n                {!this.state.startLoading ? \"\" : <Loading/>}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"login-username\">Username:</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"login-username\"\r\n                        type=\"text\"\r\n                        placeholder=\"username\"\r\n                        onChange={this.handleUsernameChange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"login-password\">Password:</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"login-password\"\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        onChange={this.handlePasswordChange}/>\r\n                </div>\r\n                <div className=\"form-group pl-1\">\r\n                    <button type=\"button\" onClick={this.loginUser} className=\"btn btn-primary\">Login</button>\r\n                    <button type=\"button\" onClick={() => this.props.closeModal()} className=\"btn btn-primary\">Cancel</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React, {Component} from 'react';\r\nimport '../../component-styles/UserNavigation.css';\r\nimport ModalBox from \".././utils/util-components/ModalBox\";\r\nimport RegisterForm from \"../calendar/forms/RegisterForm\";\r\nimport LoginForm from \"../calendar/forms/LoginForm\";\r\n\r\nclass UserNavigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoggedIn: false,\r\n            isLoginModalOpen: false,\r\n            isRegisterModalOpen: false,\r\n            mouseOver:false\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        this.setState({isLoggedIn: this.props.isLoggedIn});\r\n    }\r\n    componentWillUpdate(nextProps) {\r\n        if (this.state.isLoggedIn !== nextProps.isLoggedIn)\r\n            this.setState({isLoggedIn: nextProps.isLoggedIn})\r\n\r\n    }\r\n\r\n    closeModal(modalToClose) {\r\n        switch (modalToClose.toLowerCase()) {\r\n            case \"login\" : {\r\n                if (this.state.isLoginModalOpen)\r\n                    this.setState({isLoginModalOpen: false})\r\n            }\r\n                break;\r\n            case \"register\" : {\r\n                if (this.state.isRegisterModalOpen)\r\n                    this.setState({isRegisterModalOpen: false})\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    openModal(modalToClose) {\r\n        switch (modalToClose.toLowerCase()) {\r\n            case \"login\" : {\r\n                if (!this.state.isLoginModalOpen)\r\n                    this.setState({isLoginModalOpen: true})\r\n            }\r\n                break;\r\n            case \"register\" : {\r\n                if (!this.state.isRegisterModalOpen)\r\n                    this.setState({isRegisterModalOpen: true})\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        let logoutFunc = this.changeLogoutState.bind(this);\r\n        //This is for the global AppContainer object to know if someone logged in\r\n        let userChangeHandler = this.props.userChangeHandler;\r\n        this.props.authenticationService.logout().then(() => {\r\n            this.props.openMessageBox(\"success\", \"Logged out\");\r\n            logoutFunc();\r\n            userChangeHandler();\r\n        });\r\n    }\r\n\r\n    changeLogoutState() {\r\n        this.setState({isLoggedIn: false});\r\n    }\r\n\r\n    handleMouseOver() {\r\n        this.setState({mouseOver:true});\r\n    }\r\n    handleMouseLeave() {\r\n        this.setState({mouseOver:false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                onMouseEnter={() => this.handleMouseOver()}\r\n                onMouseLeave={() => this.handleMouseLeave()}\r\n                className={`user-navigation-container ${this.state.mouseOver ? \"show\" : \"hide\"}`}>\r\n                <ul className=\"user-nav\">\r\n                    <li className={`user-nav-link ${!this.state.isLoggedIn ? \"\" : \"hidden\"}`}>\r\n                        <a href=\"#\" onClick={() => this.openModal('login')}>\r\n                            Login\r\n                        </a>\r\n                    </li>\r\n                    <li className={`user-nav-link ${!this.state.isLoggedIn ? \"\" : \"hidden\"}`}>\r\n                        <a onClick={() => this.openModal('register')} href=\"#\">\r\n                            Register</a>\r\n                    </li>\r\n                    <li className={`user-nav-link ${!this.state.isLoggedIn ? \"hidden\" : \"\"}`}>\r\n                        <a onClick={() => this.logout()} href=\"#\">\r\n                            Logout\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n\r\n                {/*REGISTER MODAL*/}\r\n                <ModalBox\r\n                    customStyle = {{\"marginTop\":0, \"width\":\"40%\"}}\r\n                    isOpen={this.state.isRegisterModalOpen}\r\n                    closeFunction={() => this.closeModal('register')}>\r\n                    <RegisterForm\r\n                        openMessageBox={this.props.openMessageBox}\r\n                        closeModal={() => this.closeModal('register')}\r\n                        registrationService={this.props.registrationService}/>\r\n                </ModalBox>\r\n                {/*LOGIN MODAL*/}\r\n                <ModalBox\r\n                    customStyle = {{\"marginTop\":\"5%\"}}\r\n                    isOpen={this.state.isLoginModalOpen}\r\n                    closeFunction={() => this.closeModal('Login')}>\r\n                    <LoginForm\r\n                        openMessageBox={this.props.openMessageBox}\r\n                        loginHandler={this.props.userChangeHandler}\r\n                        closeModal={() => this.closeModal('login')}\r\n                        authenticationService={this.props.authenticationService}/>\r\n                </ModalBox>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserNavigation;\r\n","import $ from 'jquery';\r\nimport ApiConstants from \"./ApiConstants\";\r\nexport default {\r\n    login: function (data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: ApiConstants.API_BASE_URL + \"user/\" + ApiConstants.API_KEY + \"/login\",\r\n            headers: ApiConstants.BASIC_AUTH_HEADER,\r\n            data: data\r\n        });\r\n    },\r\n\r\n    register: function (data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: ApiConstants.API_BASE_URL + \"user/\" + ApiConstants.API_KEY,\r\n            headers: ApiConstants.BASIC_AUTH_HEADER,\r\n            data: data\r\n        });\r\n    },\r\n\r\n    logout: function (headers) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: ApiConstants.API_BASE_URL + \"user/\" + ApiConstants.API_KEY + \"/_logout\",\r\n            headers: headers\r\n        });\r\n    },\r\n\r\n    checkIfUsernameExists: function(data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url:`${ApiConstants.API_BASE_URL}rpc/${ApiConstants.API_KEY}/check-username-exists`,\r\n            headers:ApiConstants.BASIC_AUTH_HEADER,\r\n            data:data\r\n        });\r\n    },\r\n\r\n    getUser(authToken) {\r\n        let headers = {\"Authorization\": \"Kinvey \" + authToken};\r\n        return $.ajax({\r\n            method:\"GET\",\r\n            url: ApiConstants.API_BASE_URL + \"user/\" + ApiConstants.API_KEY + \"/_me\",\r\n            headers: headers\r\n        })\r\n    }\r\n\r\n}\r\n\r\n","import Requester from \"../repositories/AuthenticationRepository\";\r\n\r\nexport default class AuthenticationService {\r\n    constructor() {\r\n    }\r\n\r\n    loginUser(userObject) {\r\n        let setTokenFunction = this.setToken;\r\n        return new Promise(function (resolve, reject) {\r\n            Requester.login(userObject).then((succResp) => {\r\n                const authToken = succResp._kmd.authtoken;\r\n                setTokenFunction(authToken);\r\n                resolve(authToken);\r\n            }, (failResp) => {\r\n                reject(failResp);\r\n            });\r\n        })\r\n    }\r\n\r\n    isLoggedIn() {\r\n        return !!this.getToken();\r\n    }\r\n\r\n    logout() {\r\n        return new Promise((resolve, error) => {\r\n            let authorizationHeader = {Authorization: \"Kinvey \" + this.getToken()};\r\n            Requester.logout(authorizationHeader).then((success) => {\r\n                localStorage.removeItem('user_token');\r\n                resolve(success);\r\n            }, (errMsg) => {\r\n                error(errMsg);\r\n            })\r\n        })\r\n    }\r\n\r\n    setToken(userToken) {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('user_token', userToken)\r\n    }\r\n\r\n    getToken() {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem('user_token')\r\n    }\r\n\r\n    getCurrentUser() {\r\n        if(!this.isLoggedIn())\r\n            return;\r\n        return new Promise((resolve, reject) => {\r\n            Requester.getUser(this.getToken()).then((succ)=> {\r\n                let user = {};\r\n                user.id = succ._id;\r\n                user.authToken = succ._kmd.authtoken;\r\n                user.authToken = this.getToken();\r\n                resolve(user);\r\n            },(err) => {\r\n                console.error(err);\r\n                reject(err);\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n}","import AuthenticationRepository from \"../repositories/AuthenticationRepository\";\r\n\r\nexport default class RegisterService {\r\n    constructor() {\r\n    }\r\n\r\n    isUsernameAlreadyTaken(username) {\r\n        let data = {username: username};\r\n        return new Promise((resolve, reject) => {\r\n            AuthenticationRepository.checkIfUsernameExists(data).then((successResponse) => {\r\n                resolve(successResponse);\r\n            }, (errorResponse) => {\r\n                reject(errorResponse);\r\n            })\r\n        });\r\n    }\r\n\r\n    registerUser(userObject) {\r\n        return new Promise((resolve, reject) => {\r\n            AuthenticationRepository.register(userObject).then((successResponse) => {\r\n                resolve(successResponse);\r\n            }, (errorResponse) => {\r\n                reject(errorResponse);\r\n            })\r\n        })\r\n    }\r\n}","import $ from 'jquery';\r\nimport ApiConstants from \"./ApiConstants\";\r\n\r\nexport default {\r\n    getFromById(collectionName, headers, id) {\r\n        return $.ajax({\r\n            method: \"GET\",\r\n            url: ApiConstants.API_BASE_URL + \"appdata/\" + ApiConstants.API_KEY + \"/\" + collectionName + \"/\" + id,\r\n            headers: headers,\r\n        });\r\n    },\r\n    getFrom(collectionName, headers, query) {\r\n        let requestQuery = query ? query : \"\";\r\n        return $.ajax({\r\n            method: \"GET\",\r\n            url: ApiConstants.API_BASE_URL + \"appdata/\" + ApiConstants.API_KEY + \"/\" + collectionName + \"/\" + requestQuery,\r\n            headers: headers,\r\n        });\r\n    },\r\n    addTo(collectionName, headers, data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: ApiConstants.API_BASE_URL + \"appdata/\" + ApiConstants.API_KEY + \"/\" + collectionName,\r\n            headers: headers,\r\n            data: data\r\n        })\r\n    },\r\n    deleteFromById(dbCollectionName, id, headers) {\r\n        return $.ajax({\r\n            method: \"DELETE\",\r\n            url: ApiConstants.API_BASE_URL + \"appdata/\" + ApiConstants.API_KEY + \"/\" + dbCollectionName + \"/\" + id,\r\n            headers: headers\r\n        })\r\n    },\r\n    getCount(collectionName, headers, query) {\r\n        let requestQuery = query ? query : \"\";\r\n        return $.ajax({\r\n            method: \"GET\",\r\n            url: ApiConstants.API_BASE_URL + \"appdata/\" + ApiConstants.API_KEY + \"/\" + collectionName + \"/_count/\" + requestQuery,\r\n            headers: headers\r\n        })\r\n    }\r\n}","import $ from \"jquery\";\r\nimport ApiConstants from \"./ApiConstants\";\r\nimport BaseRepository from \"./BaseRepository\";\r\n\r\n\r\nexport default {\r\n    getNotesForUserByDay: function (userId, dayId, headers) {\r\n        let query = `?query={\"dayId\":\"${dayId}\", \"_acl.creator\":\"${userId}\"}`;\r\n        return BaseRepository.getFrom(\"notes\", headers, query);\r\n    },\r\n    addNote: function (data, headers) {\r\n        return BaseRepository.addTo(\"notes\", headers, data)\r\n    },\r\n    deleteNote(noteId, headers) {\r\n        return BaseRepository.deleteFromById(\"notes\", noteId, headers);\r\n    }\r\n}","import Requester from \"../repositories/AuthenticationRepository\";\r\nimport NotesRepository from \"../repositories/NotesRepository\";\r\n\r\nexport default class NotesService {\r\n    constructor() {\r\n    }\r\n    generateHeaders(authToken) {\r\n        return  {\"Authorization\": \"Kinvey \" + authToken};\r\n    }\r\n    addNote(noteData, user)  {\r\n        let headers = this.generateHeaders(user.authToken);\r\n        return new Promise((resolve, reject) => {\r\n            NotesRepository.addNote(noteData, headers).then((successResponse) => {\r\n                let data = {\r\n                    dayId: successResponse.dayId,\r\n                    noteId: successResponse._id\r\n                };\r\n                resolve();\r\n            },(failedResponse) => {\r\n                reject(failedResponse);\r\n                console.log(failedResponse)\r\n            });\r\n        });\r\n    }\r\n\r\n    getNotesForUserById(userId, dateId, authToken) {\r\n        let header =  this.generateHeaders(authToken);\r\n        return new Promise((resolve, reject) => {\r\n            NotesRepository.getNotesForUserByDay(userId, dateId, header).then((successMessage) => {\r\n                resolve(successMessage)\r\n            }, (errorMessage) => {\r\n                reject(errorMessage);\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    deleteNote(noteId, user) {\r\n        let headers = this.generateHeaders(user.authToken);\r\n        return new Promise((resolve, reject) => {\r\n           NotesRepository.deleteNote(noteId, headers).then((success) => {\r\n               resolve(success);\r\n           },(failResp) => {\r\n               reject(failResp)\r\n            })\r\n        });\r\n    }\r\n}","import BaseRepository from \"./BaseRepository\";\r\n\r\nconst COLLECTION_NAME = \"my-days\";\r\nexport default {\r\n    addDayToMyDays(data, headers) {\r\n        return BaseRepository.addTo(\"my-days\", headers, data);\r\n    },\r\n    getDayByUser(headers, query) {\r\n        return new Promise((resolve, reject) => {\r\n            BaseRepository.getFrom(COLLECTION_NAME, headers, query)\r\n                .then(\r\n                    (success) => {\r\n                        resolve(success);\r\n                    }, (error) => {\r\n                        reject(error);\r\n                    })\r\n        });\r\n    },\r\n    getDaysPaged(headers, query) {\r\n        return new Promise((resolve, reject) => {\r\n            BaseRepository.getFrom(COLLECTION_NAME, headers, query)\r\n                .then(\r\n                    (success) => resolve(success),\r\n                    (error) => reject(error)\r\n                )\r\n        });\r\n    },\r\n    getMyDaysCount(headers, query) {\r\n        return new Promise((resolve, reject) => {\r\n            BaseRepository.getCount(COLLECTION_NAME, headers, query)\r\n                .then(\r\n                    (successResponse) => resolve(successResponse),\r\n                    (errorResponse) => reject(errorResponse))\r\n        });\r\n    }\r\n}","import UtilFunctions from \"../components/utils/UtilFunctions\";\r\nimport Requester from \"../repositories/AuthenticationRepository\";\r\nimport MyDaysRepository from \"../repositories/MyDaysRepository\";\r\n\r\nexport default class MyDaysService {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    generateHeaders(authToken) {\r\n        return {\r\n            \"Authorization\": \"Kinvey \" + authToken\r\n        };\r\n    }\r\n\r\n    addDayToMyDays(date, user) {\r\n        let dateId = UtilFunctions.extractIdByDate(date);\r\n        let data = {\r\n            date: dateId\r\n        };\r\n        let headers = this.generateHeaders(user.authToken);\r\n        return new Promise((resolve, reject) => {\r\n            MyDaysRepository.addDayToMyDays(data, headers)\r\n                .then(\r\n                    (success) => {\r\n                        resolve(success)\r\n                    },\r\n                    (error) => {\r\n                        reject(error);\r\n                    })\r\n        });\r\n    }\r\n\r\n    getMyDayByUser(date, user) {\r\n        let dayId = UtilFunctions.extractIdByDate(date);\r\n        let query = `?query={\"date\":\"${dayId}\", \"_acl.creator\" : \"${user.id}\"}`;\r\n        let headers = this.generateHeaders(user.authToken);\r\n        return MyDaysRepository.getDayByUser(headers, query);\r\n    }\r\n\r\n    getDaysPaged(pageSize, pageNumber, user) {\r\n        let query = `?query={\"_acl.creator\" : \"${user.id}\"}&limit=${pageSize}&skip=${pageSize*(pageNumber-1)}`;\r\n        let headers = this.generateHeaders(user.authToken);\r\n        return MyDaysRepository.getDaysPaged(headers, query);\r\n    }\r\n\r\n    getDaysCount(user) {\r\n        let headers = this.generateHeaders(user.authToken);\r\n        let query = `?query={\"_acl.creator\":\"${user.id}\"}`;\r\n        return MyDaysRepository.getMyDaysCount(headers, query);\r\n\r\n    }\r\n\r\n}","import React, {Component} from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport CalendarApp from \"./components/CalendarApp\";\r\nimport UserNavigation from \"./components/navigation/UserNavigation\";\r\nimport AuthenticationService from \"./services/AuthenticationService\";\r\nimport RegisterService from \"./services/RegisterService\";\r\nimport NotesService from \"./services/NotesService\";\r\nimport MessageBox from \"./components/utils/util-components/MessageBox\";\r\nimport MyDaysService from \"./services/MyDaysService\";\r\n\r\nclass AppContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let authenticationService = new AuthenticationService();\r\n        let registrationService = new RegisterService();\r\n        let notesService = new NotesService();\r\n        let myDaysService = new MyDaysService();\r\n        this.state = {\r\n            isLoggedIn: false,\r\n            authenticationService: authenticationService,\r\n            registrationService: registrationService,\r\n            notesService: notesService,\r\n            myDaysService: myDaysService,\r\n            messageBox: {\r\n                type: \"\",\r\n                closeFunction: \"\",\r\n                message: \"\"\r\n            }\r\n        };\r\n\r\n        this.openMessageBox = this.openMessageBox.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({isLoggedIn: this.state.authenticationService.isLoggedIn()});\r\n    }\r\n\r\n    userChangeHandler(user) {\r\n        this.setState({isLoggedIn: this.state.authenticationService.isLoggedIn()});\r\n    }\r\n\r\n    openMessageBox(type, message) {\r\n        let msgBox = {\r\n            type: type,\r\n            message: message\r\n        };\r\n        this.setState({\r\n            messageBox: msgBox\r\n        });\r\n    }\r\n\r\n    resetMessageBox() {\r\n        this.setState({messageBox: {}})\r\n    }\r\n\r\n    render() {\r\n        let msgBox;\r\n        if (this.state.messageBox.type &&\r\n            this.state.messageBox.message) {\r\n            msgBox = <MessageBox\r\n                closeFunction={() => this.resetMessageBox()}\r\n                type={this.state.messageBox.type}\r\n                message={this.state.messageBox.message}/>;\r\n        }\r\n        return (\r\n            <div className=\"app-container\">\r\n                {msgBox}\r\n\r\n                <UserNavigation\r\n                    openMessageBox={this.openMessageBox}\r\n                    isLoggedIn={this.state.isLoggedIn}\r\n                    userChangeHandler={() => this.userChangeHandler()}\r\n                    authenticationService={this.state.authenticationService}\r\n                    registrationService={this.state.registrationService}/>\r\n                <BrowserRouter>\r\n                    <CalendarApp\r\n                        openMessageBox={this.openMessageBox}\r\n                        isLoggedIn={this.state.isLoggedIn}\r\n                        authenticationService={this.state.authenticationService}\r\n                        notesService={this.state.notesService}\r\n                        myDaysService={this.state.myDaysService}/>\r\n                </BrowserRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppContainer;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppContainer from \"./AppContainer\";\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}