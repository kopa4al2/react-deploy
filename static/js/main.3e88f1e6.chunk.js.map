{"version":3,"sources":["config/NavBarConfig.js","config/ModalConfig.js","serviceWorker.js","components/navigation/NavLink.js","components/navigation/NavigationBar.js","components/calendar/DayBlock.js","components/calendar/CalendarBody.js","components/utils/UtilFunctions.js","db/Requester.js","components/calendar/AddNotesForm.js","components/utils/Pagination.js","components/utils/ModalBox.js","components/calendar/NotesView.js","components/calendar/ImageBlock.js","components/calendar/CalendarStatusBar.js","components/calendar/Calendar.js","components/CalendarApp.js","index.js","components/utils/constants/CalendarConstants.js"],"names":["module","exports","items","heading","confirmationModalConfig","content","border-radius","padding","width","height","top","left","right","bottom","marginRight","transform","Boolean","window","location","hostname","match","NavLink","_this","this","react_default","a","createElement","className","props","isActive","onClick","click","name","Component","NavigationBar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","links","config","totalLinks","length","linksStatus","Array","fill","menuLink","setState","_this2","map","item","key","navigation_NavLink","handleLinkClick","bind","DayBlock","concat","clickHandler","value","React","CalendarBody","currentMonth","nextProps","JSON","stringify","blockValue","blockClass","blockKey","calendar_DayBlock","id","row","i","push","renderBlock","DAYS_MAP","renderHeader","day","iterCount","dayValue","dayClass","UtilFunctions","date","getFullYear","getMonth","getDate","date1","date2","API_BASE_URL","API_KEY","MASTER_AUTH_HEADER","btoa","Authorization","Requester","dayId","$","ajax","method","url","headers","data","noteId","AddNotesForm","note","e","preventDefault","Utils","activeDate","noteContent","then","successResponse","_id","failedResponse","console","log","evt","target","_this3","rows","onChange","updateNote","submitNote","library","add","faAngleLeft","faAngleRight","Pagination","pager","resetPage","prevProps","prevState","setPage","initialPage","page","_this$props","pageSize","totalPages","pageDirection","currentPage","getPager","pageOfItems","slice","startIndex","endIndex","onChangePage","totalItems","startPage","endPage","Math","ceil","min","pages","toConsumableArray","keys","href","react_fontawesome_index_es","icon","index","defaultProps","modalRoot","document","getElementById","ModalBox","isShown","animationClass","transitionEnded","modal","appendChild","isOpen","setTimeout","alert","ReactDOM","createPortal","children","Modal","setAppElement","NotesView","currentNotesPage","notesAnimation","modalData","idToDelete","animateClass","handlePageChange","assertThisInitialized","notes","div","utils_Pagination","animationDiv","openModal","closeModal","modalState","_this4","renderNotes","utils_ModalBox","closeFunction","deleteNote","text","ImageBlock","currentClass","MONTHS_MAP","getCurrentMonth","toString","substr","CalendarStatusBar","oldDate","Date","display","isFlipped","displayState","calendar_ImageBlock","switchView","calendar_NotesView","calendar_AddNotesForm","Calendar","daysInCurrentMonth","fetchNotes","year","month","animation","moveYear","moveMonth","createCurrentMonthObject","number","num","newMonth","newYear","monthObject","daysFromNextMonth","getDaysInMonth","getDay","daysInLastMonth","getFirstDayOfMonth","realTimeNow","calendarTimeNow","notesArr","dayBlock","startsWith","includes","updateYear","updateMonth","calendar_CalendarBody","handleDayBlockClicked","calendar_CalendarStatusBar","CalendarApp","navigation_NavigationBar","calendar_Calendar","render","components_CalendarApp","navigator","serviceWorker","ready","registration","unregister","0","1","2","3","4","5","6","7","8","9","10","11"],"mappings":"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","file":"static/js/main.3e88f1e6.chunk.js","sourcesContent":["let config = {\r\n        items: [\r\n            'Home', 'My days', 'Notes'\r\n        ],\r\n        heading: \"Calendar\"\r\n\r\n    };\r\n\r\nmodule.exports = config;","const confirmationModalConfig = {\r\n    content : {\r\n        'border-radius'       : '15px',\r\n        padding               : '10px 15px',\r\n        width                 : '30%',\r\n        height                : '25%',\r\n        top                   : '50%',\r\n        left                  : '50%',\r\n        right                 : 'auto',\r\n        bottom                : 'auto',\r\n        marginRight           : '-50%',\r\n        transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nmodule.exports = {confirmationModalConfig};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a currentNotesPage, after all the\n// existing tabs open on the currentNotesPage have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our currentNotesPage is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this currentNotesPage are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the currentNotesPage.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the currentNotesPage.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. NavigationBar is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\r\n\r\nclass NavLink extends Component {\r\n    render() {\r\n        return (\r\n            <li className={this.props.isActive} onClick={() => this.props.click(this)}>\r\n                {this.props.name}\r\n                </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavLink;\r\n","import React, {Component} from 'react';\nimport '../component-styles/Nav.css';\nimport NavLink from './NavLink';\n\n\nclass NavigationBar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            links:this.props.config.items,\n            totalLinks:this.props.config.items.length,\n            linksStatus:Array(this.props.config.items.length).fill(\"\")\n        };\n    }\n\n    handleLinkClick(menuLink) {\n        let links = Array(this.state.totalLinks).fill(\"\");\n        links[menuLink] = \"nav-link-active\";\n        this.setState({linksStatus:links});\n    }\n    render() {\n        return (\n            <nav className={\"navigation-bar\"}>\n                <div className={\"logo-container\"}>\n                    <h2>{this.props.config.heading}</h2>\n                </div>\n                <div className=\"url-container\">\n                    <ul>\n                        {this.props.config.items.map((item, key) => <NavLink key={key}\n                                                                             name={item}\n                                                                             click={this.handleLinkClick.bind(this, key)}\n                                                                             isActive={this.state.linksStatus[key]}/>)}\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default NavigationBar;\n","import React from 'react';\r\n\r\nclass DayBlock extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={`day-block ${this.props.className}`}\r\n                 onClick={() => this.props.clickHandler(this)}>\r\n                {this.props.value}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DayBlock;","import React from 'react';\r\nimport DayBlock from \"./DayBlock\";\r\nimport {DAYS_MAP} from \"../utils/constants/CalendarConstants\";\r\n\r\nclass CalendarBody extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: this.props.currentMonth\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        //We changed the year or month\r\n        if (JSON.stringify(this.props.currentMonth) !== JSON.stringify(nextProps.currentMonth)) {\r\n            this.setState({currentMonth: nextProps.currentMonth})\r\n        }\r\n    }\r\n\r\n\r\n    renderBlock(blockValue, blockClass, blockKey) {\r\n        return (<DayBlock key={blockKey}\r\n                          id={blockKey}\r\n                          value={blockValue}\r\n                          className={blockClass}\r\n                          clickHandler={this.props.clickHandler}\r\n        />)\r\n    }\r\n\r\n    renderHeader() {\r\n        let row = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            row.push(\r\n                this.renderBlock(DAYS_MAP[i], \"block-heading\", `h-${i}`)\r\n            )\r\n        }\r\n        return row;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"calendar-body\">\r\n                {this.renderHeader()}\r\n                {this.state.currentMonth.map((day, iterCount) => this.renderBlock(day.dayValue, day.dayClass, \"d-\" + iterCount))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default CalendarBody;","export default {\r\n    extractIdByDate: function (date) {\r\n        //Basicly the id is yyyy-mm-dd\r\n        //Example 21st october 2018 will have id=2018-10-21\r\n        let id = date.getFullYear() +\r\n            \"-\" + date.getMonth() +\r\n            \"-\" + date.getDate();\r\n        return id;\r\n    },\r\n    compareDates : function(date1, date2) {\r\n    return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\r\n}\r\n};","import $ from 'jquery';\r\n\r\nconst API_BASE_URL = \"https://baas.kinvey.com/\";\r\nconst API_KEY = \"kid_r1ynbbg6Q\";\r\nconst API_SECRET = \"33903aebaffd4a3b944250b832bd81f3\";\r\nconst BASIC_AUTH_HEADER = {\r\n    'Authorization': \"Basic \" + btoa(API_KEY + \":\" + API_SECRET)\r\n};\r\nconst MASTER_AUTH_HEADER = {\r\n    'Authorization': \"Basic \" + btoa(API_KEY + \":f55dd3810f61465c98c4fec7525a6ba9\")\r\n};\r\n\r\nexport default {\r\n    login: function (data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: API_BASE_URL + \"user/\" + API_KEY + \"/login\",\r\n            headers: BASIC_AUTH_HEADER,\r\n            data: data\r\n        });\r\n    },\r\n\r\n    register: function (data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: API_BASE_URL + \"user/\" + API_KEY,\r\n            headers: BASIC_AUTH_HEADER,\r\n            data: data\r\n        });\r\n    },\r\n\r\n    logout: function () {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: API_BASE_URL + \"user/\" + API_KEY + \"/_logout\",\r\n            headers: BASIC_AUTH_HEADER\r\n        });\r\n    },\r\n\r\n    getNotesByDay: function (dayId) {\r\n        return $.ajax({\r\n            method: \"GET\",\r\n            url: API_BASE_URL + \"appdata/\" + API_KEY + `/notes/?query={\"dayId\":\"${dayId}\"}`,\r\n            headers: MASTER_AUTH_HEADER,\r\n        });\r\n    },\r\n    addNote: function(data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: API_BASE_URL + \"appdata/\" + API_KEY + \"/notes\",\r\n            headers: MASTER_AUTH_HEADER,\r\n            data: data\r\n        });\r\n    },\r\n    addNoteDayRelation(dayId, noteId) {\r\n        let data = {\r\n            dayId: dayId,\r\n            noteId: noteId\r\n        };\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: API_BASE_URL + \"appdata/\" + API_KEY + \"/days-notes\",\r\n            headers: MASTER_AUTH_HEADER,\r\n            data: data\r\n        });\r\n    },\r\n    deleteFromById(dbCollectionName, id) {\r\n        return $.ajax({\r\n            method:\"DELETE\",\r\n            url:API_BASE_URL + \"appdata/\" + API_KEY + \"/\" + dbCollectionName + \"/\" + id + \"?query=\",\r\n            headers: MASTER_AUTH_HEADER\r\n        })\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport '../component-styles/AddNoteFormStyle.css';\r\nimport Utils from '../utils/UtilFunctions';\r\nimport Requester from '../../db/Requester';\r\n\r\nclass AddNotesForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            note: \"\"\r\n        }\r\n    }\r\n\r\n    submitNote(e) {\r\n        e.preventDefault();\r\n        //if its empty text ignore\r\n        if(this.state.note === \"\")\r\n            return;\r\n        let data = {};\r\n        let dayId = Utils.extractIdByDate(this.props.activeDate);\r\n        data.dayId = dayId;\r\n        data.noteContent = this.state.note;\r\n        Requester.addNote(data).then((successResponse) => {\r\n            //Since successResponse returns the object\r\n            Requester.addNoteDayRelation(dayId, successResponse._id);\r\n            this.setState({note:\"\"});\r\n        },(failedResponse) => {\r\n            console.log(\"Failed \" + failedResponse)\r\n        });\r\n    }\r\n\r\n    updateNote(evt) {\r\n        this.setState({note: evt.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"add-note-form\">\r\n                <div className=\"form-group\">\r\n                <textarea value={this.state.note} rows=\"3\" className=\"form-control\" onChange={(evt) => this.updateNote(evt)}>\r\n                </textarea>\r\n                </div>\r\n                <button onClick={(e) => this.submitNote(e)} className=\"btn btn-primary\">Add note</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddNotesForm;","//DISCLAIMER I did not make this, credits go to jasonwatmore\r\n//http://jasonwatmore.com/post/2017/03/14/react-pagination-example-with-logic-like-google\r\n//I made some custom functionality to fit my needs\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"../component-styles/PaginationStyle.css\";\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleLeft, faAngleRight} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faAngleLeft, faAngleRight);\r\n\r\nconst propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    initialPage: PropTypes.number,\r\n    pageSize: PropTypes.number\r\n};\r\n\r\nconst defaultProps = {\r\n    initialPage: 1,\r\n    pageSize: 10\r\n};\r\n\r\nclass Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {pager: {}};\r\n    }\r\n\r\n    componentWillMount() {\r\n        // set currentNotesPage if items array isn't empty\r\n        if (this.props.items && this.props.items.length) {\r\n            this.resetPage();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // reset currentNotesPage if items array has changed\r\n        if (this.props.items !== prevProps.items) {\r\n            this.resetPage();\r\n        }\r\n    }\r\n\r\n    resetPage() {\r\n        this.setPage(this.props.initialPage);\r\n    }\r\n\r\n    setPage(page) {\r\n        var {items, pageSize} = this.props;\r\n        var pager = this.state.pager;\r\n\r\n        if (page < 1 || page > pager.totalPages) {\r\n            return;\r\n        }\r\n        let pageDirection = this.state.pager.currentPage < page ? \"animate-left\" : \"animate-right\";\r\n        // get new pager object for specified currentNotesPage\r\n        pager = this.getPager(items.length, page, pageSize);\r\n        // get new currentNotesPage of items from items array\r\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n        // update state\r\n        this.setState({pager: pager});\r\n        // call change currentNotesPage function in parent component\r\n        this.props.onChangePage(pageOfItems, pageDirection);\r\n    }\r\n\r\n    getPager(totalItems, currentPage, pageSize) {\r\n        // default to first currentNotesPage\r\n        currentPage = currentPage || 1;\r\n\r\n        // default currentNotesPage size is 10\r\n        pageSize = pageSize || 10;\r\n\r\n        // calculate total pages\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        var startPage, endPage;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        var startIndex = (currentPage - 1) * pageSize;\r\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    render() {\r\n        var pager = this.state.pager;\r\n        if (!pager.pages || pager.pages.length <= 1) {\r\n            // don't display pager if there is only 1 currentNotesPage\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                <div className=\"pag-wrapper\">\r\n                    {/*<li className={pager.currentPage === 1 ? 'disabled' : ''}>*/}\r\n                    {/*<a onClick={() => this.setPage(1)}>First</a>*/}\r\n                    {/*</li>*/}\r\n                    <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                        <a href={\"#\"} onClick={() => this.setPage(pager.currentPage - 1)}><FontAwesomeIcon icon=\"angle-left\"/></a>\r\n                    </li>\r\n                    {pager.pages.map((page, index) =>\r\n                        <li key={index} className={pager.currentPage === page ? 'active' : ''}>\r\n                            <a href={\"#\"} onClick={() => this.setPage(page)}>{page}</a>\r\n                        </li>\r\n                    )}\r\n                    <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                        <a href={\"#\"} onClick={() => this.setPage(pager.currentPage + 1)}><FontAwesomeIcon icon=\"angle-right\"/></a>\r\n                    </li>\r\n                    {/*<li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>*/}\r\n                    {/*<a onClick={() => this.setPage(pager.totalPages)}>Last</a>*/}\r\n                    {/*</li>*/}\r\n                </div>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\nexport default Pagination;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../component-styles/modal-styles/MessageBox.css';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst modalRoot = document.getElementById('root');\r\n\r\nclass ModalBox extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShown:false,\r\n            animationClass: \"\",\r\n            transitionEnded: false\r\n        };\r\n        this.modal = document.createElement('div');\r\n    }\r\n\r\n    componentWillMount() {\r\n        modalRoot.appendChild(this.modal);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if(props.isOpen) {\r\n            this.setState({isShown: true});\r\n            setTimeout(() => {this.setState({animationClass:\"show\"})}, 10);\r\n        }\r\n        else {\r\n            this.setState({animationClass:\"hide\"});\r\n            setTimeout(() => {this.setState({isShown:false})}, 500);\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        alert('maam se');\r\n    }\r\n    onTransitionEnd() {\r\n        alert('dada')\r\n        // modalRoot.removeChild(this.modal);\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div className={`modal-box-background ${this.state.isShown ? \"shown\" : \"\"}`}>\r\n                <div className={`message-box-content ${this.state.animationClass}`}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n            , this.modal)\r\n    }\r\n}\r\n\r\nexport default ModalBox;\r\n","import React from 'react';\r\nimport '../component-styles/NotesView.css';\r\nimport '../component-styles/modal-styles/confirmation-modal.css';\r\nimport Modal from 'react-modal';\r\nimport {confirmationModalConfig} from '../../config/ModalConfig';\r\nimport Requester from \"../../db/Requester\";\r\nimport Pagination from \"../utils/Pagination\";\r\nimport ModalBox from \"../utils/ModalBox\";\r\n\r\nModal.setAppElement('#root');\r\n\r\nclass NotesView extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentNotesPage: [],\r\n            notesAnimation: \"\",\r\n            modalData: {\r\n                isOpen: false,\r\n                idToDelete: \"\",\r\n                animateClass:\"\"\r\n            }\r\n        };\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const animationDuration = 550;\r\n        if (this.state.notesAnimation !== \"\") {\r\n            setTimeout(() => this.setState({notesAnimation: \"\"}), animationDuration)\r\n        }\r\n    }\r\n\r\n    renderNotes() {\r\n        if (this.props.notes)\r\n            if (this.props.notes.length > 0) {\r\n                let div = [];\r\n                div.push(<Pagination\r\n                    items={this.props.notes}\r\n                    onChangePage={this.handlePageChange}\r\n                    pageSize={5}/>);\r\n                let animationDiv = [<div className={\"note-anim \" + this.state.notesAnimation}>\r\n                    {this.state.currentNotesPage.map((note) =>\r\n                        <li key={note._id}>{note.noteContent}\r\n                            <span onClick={() => this.openModal(note._id)}>\r\n                            <span className=\"tooltip\">Delete this note</span>\r\n                            <a>X</a>\r\n                        </span>\r\n                        </li>\r\n                    )}\r\n                </div>];\r\n\r\n                div.push(animationDiv);\r\n                return div;\r\n            }\r\n            else\r\n                return \"No notes for this day\"\r\n    }\r\n\r\n    deleteNote(id) {\r\n        alert(\"Successfully deleted \" + id)\r\n        this.closeModal();\r\n        //TODO: fix error\r\n        // Requester.deleteFromById(\"notes\", id);\r\n    }\r\n\r\n    openModal(id) {\r\n        let modalState = this.state.modalData;\r\n        modalState.isOpen = true;\r\n        modalState.idToDelete = id;\r\n        modalState.animateClass = \"show\";\r\n        this.setState({modalData: modalState});\r\n    }\r\n\r\n    closeModal() {\r\n        let modalState = this.state.modalData;\r\n        modalState.isOpen = false;\r\n        modalState.animateClass = \"hide\";\r\n        this.setState({modalData: modalState});\r\n    }\r\n\r\n\r\n    handlePageChange(currentPage, pageDirection) {\r\n        this.setState({\r\n            currentNotesPage: currentPage,\r\n            notesAnimation: pageDirection\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // const messageBox = this.state.modalData.isOpen ?\r\n        //\r\n        //     : null;\r\n        return (\r\n            <ul className=\"notes-list\">\r\n                {this.renderNotes()}\r\n                <ModalBox\r\n                    isOpen = {this.state.modalData.isOpen}\r\n                    closeFunction={() => this.closeModal()}\r\n                >\r\n                    <div>\r\n                        <span><a onClick={() => this.closeModal()} href=\"#\">X</a></span>\r\n                        <div className=\"message-box-header\">{\"Are you sure\"}</div>\r\n                        <hr/>\r\n                        <p>{\"This will delete the note\"}</p>\r\n                        <div className=\"message-box-footer\">\r\n                            <button onClick={() => this.deleteNote(this.state.modalData.idToDelete)}>Yes</button>\r\n                            <button onClick={() => this.closeModal()}>No</button>\r\n                        </div>;\r\n                        <div className=\"message-box-message\">{this.props.text}</div>\r\n                    </div>\r\n                </ModalBox>\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotesView;\r\n","import React from 'react';\r\nimport {MONTHS_MAP} from \"../utils/constants/CalendarConstants\";\r\n\r\nclass ImageBlock extends React.Component {\r\n\r\n    getCurrentMonth() {\r\n        return this.props.activeDate.getMonth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.currentClass}>\r\n                <h3>{MONTHS_MAP[this.getCurrentMonth()].toString().substr(0,3)}</h3>\r\n                <p className=\"day-paragraph\">{this.props.activeDate.getDate()}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageBlock;","import React from 'react';\r\nimport '../component-styles/CalendarStatusStyle.css';\r\nimport AddNotesForm from \"./AddNotesForm\";\r\nimport NotesView from \"./NotesView\";\r\nimport ImageBlock from \"./ImageBlock\";\r\n\r\nclass CalendarStatusBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animateClass: \"\",\r\n            oldDate: new Date(),\r\n            display: {\r\n                isFlipped: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(prevProps) {\r\n        //TODO: causes double call to every method from the child maybe fix?\r\n        if (prevProps.activeDate !== this.props.activeDate) {\r\n            //makes the top sheet animated, and switches blocks location\r\n\r\n            this.setState({animateClass: \"calendar-block-animate\"});\r\n            //Timeout is so floating animated calendar currentNotesPage can stay the same\r\n            const animationDuration = 950;\r\n            setTimeout(() => {\r\n                this.setState({animateClass: \"\"});\r\n                this.setState({oldDate: prevProps.activeDate})\r\n            }, animationDuration);\r\n        }\r\n    }\r\n\r\n    switchView() {\r\n        let displayState = this.state.display;\r\n\r\n        if (displayState.isFlipped === \"\") {\r\n            displayState.isFlipped = \"flipped\"\r\n        } else {\r\n            displayState.isFlipped = \"\"\r\n        }\r\n        this.setState({display: displayState});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"status-container\">\r\n                <div className=\"block-container\">\r\n\r\n                    <ImageBlock\r\n                        currentClass={\"calendar-block old-calendar-block\"}\r\n                        activeDate={this.props.activeDate}/>\r\n                    <ImageBlock\r\n                        currentClass={\"calendar-block \" + this.state.animateClass}\r\n                        activeDate={this.state.oldDate}/>\r\n\r\n                </div>\r\n                <div className=\"notes-container\">\r\n                    <button className=\"switch-view \" onClick={() => this.switchView()}> {\"Switch\"} </button>\r\n                    <div className={\"view-note-container \" + this.state.display.isFlipped}>\r\n                        <div className=\"notes-view\">\r\n                            <NotesView notes={this.props.notes}/>\r\n                        </div>\r\n                        <div className=\"save-note back\">\r\n                            <AddNotesForm activeDate={this.props.activeDate}/>\r\n                            <button className=\"btn btn-primary\">Save day to my days</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarStatusBar;\r\n","import React from 'react';\r\nimport '../component-styles/CalendarStyle.css';\r\nimport CalendarBody from './CalendarBody';\r\nimport CalendarStatusBar from \"./CalendarStatusBar\";\r\nimport {MONTHS_MAP} from \"../utils/constants/CalendarConstants\"\r\nimport Requester from \"../../db/Requester\";\r\nimport Utils from \"../utils/UtilFunctions\";\r\n\r\nclass Calendar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        /**INFO ABOUT STATE VARIABLES\r\n         *@params {Date}           activeDate         The date of the currently clicked day\r\n         *@params {object}         daysInCurrentMonth The information about every day's rendering (class, value etc)\r\n         *@params {Array[object]}  notes              Every note on that day\r\n         *@params {Number}         year               The current year\r\n         *@params {Number}         month              The current month\r\n         *@params {Object}         animation          Animation classes for this component\r\n         */\r\n        this.state = {\r\n            activeDate: new Date(),\r\n            daysInCurrentMonth: {},\r\n            notes: this.fetchNotes(new Date()),\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth(),\r\n            animation: {\r\n                moveYear: \"\",\r\n                moveMonth: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({\r\n            daysInCurrentMonth: this.createCurrentMonthObject()\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let animation = this.state.animation;\r\n        const animationDuration = 1000;\r\n        if (animation.moveYear !== \"\") {\r\n            setTimeout(() => {\r\n                    animation.moveYear = \"\";\r\n                    this.setState({animation: animation})\r\n                }\r\n                , animationDuration);\r\n        }\r\n        if(animation.moveMonth !== \"\") {\r\n            setTimeout(() => {\r\n                    animation.moveMonth = \"\";\r\n                    this.setState({animation: animation})\r\n                }\r\n                , animationDuration);\r\n        }\r\n    }\r\n\r\n    updateYear(number) {\r\n        let animation = this.state.animation;\r\n        if (number < 0) {\r\n            //Left move\r\n            animation.moveYear = \"year-left\";\r\n        } else {\r\n            //right move\r\n            animation.moveYear = \"year-right\";\r\n        }\r\n        this.setState({\r\n            year: this.state.year + number,\r\n            currentMonth: this.createCurrentMonthObject(),\r\n            animation: animation\r\n        })\r\n    }\r\n\r\n    updateMonth(num) {\r\n        let animation = this.state.animation;\r\n        if (num < 0) {\r\n            //Left move\r\n            animation.moveMonth = \"month-left\";\r\n        } else {\r\n            //right move\r\n            animation.moveMonth = \"month-right\";\r\n        }\r\n        let newYear = this.state.year, newMonth;\r\n        if (this.state.month === 0 && num === (-1)) {\r\n            newMonth = 11;\r\n            newYear = this.state.year - 1;\r\n        }\r\n        else if (this.state.month === 11 && num === 1) {\r\n            newMonth = 0;\r\n            newYear = this.state.year + 1;\r\n        }\r\n        else {\r\n            newMonth = this.state.month + num;\r\n        }\r\n        this.setState({month: newMonth, year: newYear});\r\n    }\r\n\r\n    createCurrentMonthObject() {\r\n        let monthObject = [];\r\n        //We subtract the dayValue of the week of the last dayValue of the current month from 6,\r\n        // because we start from 0\r\n        //example: Date(2018,11,1).getDay() = THU = 3 (since MON is 0)\r\n        let daysFromNextMonth = 6 - new Date(this.state.year,\r\n            this.state.month,\r\n            this.getDaysInMonth() - 1).getDay();\r\n\r\n        let daysInLastMonth = this.getDaysInMonth(this.state.month - 1);\r\n        let currentMonthFirstDay = this.getFirstDayOfMonth();\r\n        let startDateLastMonth = daysInLastMonth - currentMonthFirstDay;\r\n        for (let i = startDateLastMonth + 1; i <= daysInLastMonth; i++) {\r\n            monthObject.push({\r\n                dayValue: i,\r\n                dayClass: \"last-month\"\r\n            });\r\n        }\r\n        for (let i = 1; i <= this.getDaysInMonth(); i++) {\r\n            let realTimeNow = new Date();\r\n            let calendarTimeNow = new Date(this.state.year, this.state.month, i);\r\n            let dayClass = \"current-month\";\r\n            if (i === realTimeNow.getDate() && this.state.month === realTimeNow.getMonth() && this.state.year === realTimeNow.getFullYear()) {\r\n                dayClass += \" today\";\r\n            }\r\n            if (Utils.compareDates(this.state.activeDate, calendarTimeNow)) {\r\n                dayClass += \" active\";\r\n            }\r\n            monthObject.push({\r\n                dayValue: i,\r\n                dayClass: dayClass\r\n            });\r\n        }\r\n        for (let i = 1; i <= daysFromNextMonth; i++) {\r\n            monthObject.push({\r\n                dayValue: i,\r\n                dayClass: \"next-month\"\r\n            });\r\n        }\r\n        return monthObject;\r\n    }\r\n\r\n    getDaysInMonth(month) {\r\n        //IF we dont have a month as a function parameter, we return days in the current month\r\n        if (month != null) {\r\n            if (month === -1)\r\n                month = 11;\r\n            return new Date(this.state.year, month + 1, 0).getDate();\r\n        }\r\n        return new Date(this.state.year, this.state.month + 1, 0).getDate();\r\n    }\r\n\r\n    getFirstDayOfMonth() {\r\n        return new Date(this.state.year, this.state.month, 0).getDay();\r\n    }\r\n\r\n    fetchNotes(date) {\r\n        Requester.getNotesByDay(Utils.extractIdByDate(date)).then((notesArr) => {\r\n            this.setState({notes: notesArr})\r\n        }, (failedResponse) => {\r\n            console.log(\"Failed \" + failedResponse)\r\n        });\r\n    }\r\n\r\n    handleDayBlockClicked(dayBlock) {\r\n        //Check if its a valid dayblock\r\n        if (dayBlock.props.id.startsWith(\"d-\") && dayBlock.props.className.includes(\"current-month\")) {\r\n            let date = new Date(this.state.year, this.state.month, dayBlock.props.value);\r\n            this.setState({activeDate: date});\r\n            this.fetchNotes(date);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calendar-container\">\r\n                <div className=\"body-container\">\r\n                    <div className=\"calendar-header\">\r\n                        <div className=\"year\">\r\n                            <button onClick={() => this.updateYear(-1)}></button>\r\n                            <p className={this.state.animation.moveYear}>{this.state.year}</p>\r\n                            <button onClick={() => this.updateYear(1)}></button>\r\n                        </div>\r\n                        <div className=\"month\">\r\n                            <button onClick={() => this.updateMonth(-1)}></button>\r\n                            <p className={this.state.animation.moveMonth}>{MONTHS_MAP[this.state.month]}</p>\r\n                            <button onClick={() => this.updateMonth(1)}></button>\r\n                        </div>\r\n                    </div>\r\n                    <CalendarBody clickHandler={this.handleDayBlockClicked.bind(this)}\r\n                                  currentMonth={this.createCurrentMonthObject()}/>\r\n                </div>\r\n                <CalendarStatusBar activeDate={this.state.activeDate} notes={this.state.notes}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Calendar;","import React, {Component} from 'react';\r\nimport NavigationBar from \"./navigation/NavigationBar\";\r\nimport config from \"../config/NavBarConfig\";\r\nimport Calendar from \"./calendar/Calendar\";\r\nimport './component-styles/App.css';\r\nimport ModalBox from \"./utils/ModalBox\";\r\nclass CalendarApp extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app-container\">\r\n                <NavigationBar config={config}/>\r\n                <Calendar/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarApp;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport CalendarApp from \"./components/CalendarApp\";\n\nReactDOM.render(<CalendarApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const MONTHS_MAP = {\r\n    0: \"January\",\r\n    1: \"February\",\r\n    2: \"March\",\r\n    3: \"April\",\r\n    4: \"May\",\r\n    5: \"June\",\r\n    6: \"July\",\r\n    7: \"August\",\r\n    8: \"Semptember\",\r\n    9: \"October\",\r\n    10: \"November\",\r\n    11: \"December\",\r\n};\r\n\r\nconst DAYS_MAP = {\r\n    0: \"MON\",\r\n    1: \"TUE\",\r\n    2: \"WED\",\r\n    3: \"THU\",\r\n    4: \"FRI\",\r\n    5: \"SAT\",\r\n    6: \"SUN\",\r\n    7: \"SUN\"\r\n};\r\n\r\nmodule.exports = {MONTHS_MAP, DAYS_MAP};"],"sourceRoot":""}