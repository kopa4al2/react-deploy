{"version":3,"sources":["repositories/ApiConstants.js","components/utils/constants/CalendarConstants.js","serviceWorker.js","components/HOC/ContextToPropsHOC.js","components/ContextHolder.js","components/calendar/main-view/CalendarNavigationBar.js","components/calendar/main-view/DayBlock.js","components/calendar/main-view/CalendarBody.js","components/calendar/main-view/CalendarImage.js","components/utils/UtilFunctions.js","repositories/AuthenticationRepository.js","repositories/BaseRepository.js","repositories/MyDaysRepository.js","services/UtilService.js","repositories/ToDoListRepository.js","services/ToDoListService.js","components/utils/util-components/ModalBox.js","components/utils/util-components/Confirmation.js","components/utils/util-components/ToolTip.js","components/todo-list/ToDoItem.js","components/utils/util-components/Loading.js","components/todo-list/ToDoInput.js","components/todo-list/ToDoView.js","components/my-days/MyDaysPagination.js","controllers/ToDoListController.js","services/MyDaysService.js","components/my-days/MyDaysButton.js","controllers/MyDaysController.js","components/calendar/main-view/CalendarStatusBar.js","components/calendar/main-view/Calendar.js","components/utils/util-components/Pagination.js","repositories/NotesRepository.js","services/NotesService.js","controllers/NotesController.js","components/my-days/CalendarDayHeader.js","components/my-days/CalendarDayBodyNavigation.js","services/AuthenticationService.js","components/forms/AddNotesForm.js","components/utils/util-components/FlipSideButton.js","components/calendar/main-view/FlipCardContainer.js","components/my-days/CalendarDayBody.js","components/my-days/CalendarDay.js","components/my-days/MyDaysContainer.js","components/CalendarApp.js","components/utils/AnimationUtils.js","services/RegisterService.js","components/forms/RegisterForm.js","components/forms/LoginForm.js","components/navigation/UserNavigation.js","components/utils/util-components/MessageBox.js","components/AuthenticationContextProvider.js","AppContainer.js","index.js"],"names":["BASIC_AUTH_HEADER","Authorization","btoa","API_KEY","module","exports","API_BASE_URL","MONTHS_MAP","0","1","2","3","4","5","6","7","8","9","10","11","DAYS_MAP","Boolean","window","location","hostname","match","InnerComponent","AuthenticationContext","React","createContext","ContextToPropsHOC","props","react_default","a","createElement","Consumer","context","isLoggedIn","Object","assign","CalendarNavigationBar","state","activeLinks","home","_this","route","pathname","myNotes","myDays","e","_arr","entries","this","_i","length","_ref3","activeLink","slicedToArray","toLowerCase","includes","target","name","setState","className","Link","onClick","handleClick","bind","to","Component","RouteToContextHOC","Route","routeProps","DayBlock","concat","clickHandler","value","CalendarBody","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","currentMonth","nextProps","blockValue","blockClass","blockKey","main_view_DayBlock","key","id","row","i","push","renderBlock","substr","_this2","renderHeader","map","day","iterCount","dayValue","dayClass","CalendarImage","currentClass","activeDate","getMonth","toString","getDate","UtilFunctions","extractIdByDate","date","getFullYear","extractDateById","year","split","month","Date","compareDates","date1","date2","areUsersDtoSame","user1","user2","authToken","elementInViewport","el","top","offsetTop","left","offsetLeft","width","offsetWidth","height","offsetHeight","offsetParent","pageYOffset","innerHeight","pageXOffset","innerWidth","AuthenticationRepository","data","$","ajax","method","url","ApiConstants","headers","BaseRepository","collectionName","query","requestQuery","dbCollectionName","MyDaysRepository","Promise","resolve","reject","then","success","error","successResponse","errorResponse","dayId","UtilService","ToDoListRepository","todoItemId","ToDoListService","user","generateHeaders","item","isFinished","failure","pageSize","pageNumber","todoId","modalRoot","document","getElementById","ModalBox","isShown","animationClass","transitionEnded","customStyle","modal","handleBackgroundClick","assertThisInitialized","appendChild","isOpen","setTimeout","contains","removeChild","_this3","event","closest","classList","closeFunction","ReactDOM","createPortal","style","children","Confirmation","util_components_ModalBox","href","close","confirmationMessage","confirmFunction","ToolTip","position","tooltip","defaultProps","customToolTipStyle","marginTop","ToDoItem","onChange","finishItem","_id","checked","disabled","type","content","openConfirmation","util_components_ToolTip","Loading","render","portal","ToDoView","input","preventDefault","addTodoItem","onSubmit","submit","handleInput","items","isConfirmDialogOpen","idToDelete","isLoading","isLoadingFinish","itemId","itemsToDisplay","showCongratz","outerDiv","add","innerDiv","innerHTML","getElementsByTagName","removeToDoItem","closeConfirmation","addToDoItem","confirm","util_components_Confirmation","confirmDelete","loading","util_components_Loading","firstChild","Fragment","ToDoInput","renderToDoItems","todoItem","todo_list_ToDoItem","MyDaysPagination","PropTypes","number","isRequired","func","totalPages","currentPage","leftMostPage","rightMostPage","undefined","maxPages","pageBar","prevPage","_loop","activeClassName","handleLinkClick","nextPage","handlePageChange","renderPageLinks","thisState","totalItems","Math","ceil","itemsPerPage","numberOfPagesAroundCurrentPage","floor","ToDoListController","currentPageItems","currentDateId","initTodoItems","prevProps","prevState","getToDoListCount","loggedInUser","fetchToDoListPaged","count","currentDayId","getToDoListByDayPaged","fail","openMessageBox","finishToDoItem","newItems","_this4","currentPageWithoutElem","filter","newPageItems","getElementsByClassName","components_my_days_MyDaysPagination","todo_list_ToDoView","MyDaysService","dateId","response","marginLeft","MyDaysButton","isDaySaved","handleMyDaysButtonClick","MyDaysController","getCurrentDayId","checkIfDayIsSaved","removeDay","saveDay","handleClickFunction","getDayIdByDate","saveToMyDays","removeDaysFromMyDay","_this5","_this6","components_my_days_MyDaysButton","CalendarStatusBar","animateClass","oldDate","nextProp","main_view_CalendarImage","controllers_ToDoListController","controllers_MyDaysController","Calendar","daysInCurrentMonth","animation","moveYear","moveMonth","createCurrentMonthObject","num","newMonth","newYear","monthObject","daysFromNextMonth","getDaysInMonth","getDay","daysInLastMonth","getFirstDayOfMonth","realTimeNow","calendarTimeNow","Utils","dayBlockProps","startsWith","updateYear","updateMonth","main_view_CalendarBody","handleDayBlockClicked","main_view_CalendarStatusBar","library","faAngleLeft","faAngleRight","Pagination","pager","resetPage","setPage","initialPage","page","_this$props","pageDirection","getPager","pageOfItems","slice","startIndex","endIndex","onChangePage","startPage","endPage","min","pages","toConsumableArray","Array","keys","react_fontawesome_index_es","icon","index","NotesRepository","userId","noteId","NotesService","noteData","failedResponse","console","log","header","successMessage","errorMessage","failResp","NotesController","scrollPosition","notes","currentNotesPage","notesAnimation","modalData","updateNotes","findDOMNode","scrollY","isThisViewActive","fetchNotes","notesArr","equals","scrollTo","showMsgBoxHandler","showMessageBox","deleteNote","closeModal","failResponse","getNotesForUserById","message","modalState","div","util_components_Pagination","animationDiv","note","noteContent","openModal","_this7","confirmDialog","renderNotes","CalendarDayHeader","isStretched","CalendarDayBodyNavigation","isNotesActive","isOnThisDayActive","isTodoListActive","linkChangeHandler","AuthenticationService","userObject","setTokenFunction","setToken","Requester","succResp","_kmd","authtoken","getToken","authorizationHeader","localStorage","removeItem","errMsg","succ","err","userToken","setItem","getItem","AddNotesForm","evt","emptyTextArea","stopLoading","openMsgBox","getCurrentUserDTO","addNote","failed","renderValue","rows","updateNote","submitNote","FlipSideButton","isFlipped","switchView","isActive","messagesArray","FlipCardContainer","savedDayId","util_components_FlipSideButton","controllers_NotesController","forms_AddNotesForm","CalendarDayBody","view","main_view_FlipCardContainer","my_days_CalendarDayBodyNavigation","renderView","modalCustomStyles","transform","background","text-shadow","box-shadow","border","CalendarDay","handleDayStretch","components_my_days_CalendarDayHeader","components_my_days_CalendarDayBody","renderModal","shouldCheckIfDaysAreChanged","MyDaysContainer","currentUser","fetchDays","getDaysCount","resp","getDaysPaged","output","components_my_days_CalendarDay","renderDays","faCheck","faTimes","faCheckCircle","faTimesCircle","faAngleDoubleUp","CalendarApp","bindCustomArrayEqualsMethod","prototype","array","l","defineProperty","enumerable","main_view_CalendarNavigationBar","exact","path","main_view_Calendar","components_my_days_MyDaysContainer","AnimationUtils","node","animationDuration","remove","RegisterService","username","RegisterForm","registerUsername","registerEmail","registerPassword","registerConfirmPassword","isUsernameValid","isEmailValid","isPasswordValid","isConfirmPasswordValid","warningDivClass","checkingUser","registerLoading","usernameExists","showUsernameTooltip","handleInputChange","registerUser","checkIfUsernameExists","RegistrationService","isUsernameAlreadyTaken","eventFirer","areInputsValid","registerUserObject","password","email","resolveResponse","rejectResponse","parentNode","isValid","atob","test","String","confirmPassword","usernameLoading","htmlFor","placeholder","onBlur","closeForm","LoginForm","startLoading","loginUsername","loginPassword","handleUsernameChange","handlePasswordChange","loginUser","loginUserObject","closeModalFunc","userChangeHandler","loginHandler","errResp","UserNavigation","isLoginModalOpen","isRegisterModalOpen","mouseOver","modalToClose","logout","contextNotifier","onMouseEnter","handleMouseOver","onMouseLeave","handleMouseLeave","handleUserChange","forms_RegisterForm","forms_LoginForm","messageBoxContainer","MessageBox","messageBox","closeMessageBox","handleContainerClassChange","change","handleBoxClick","charAt","toUpperCase","AuthenticationContextProvider","userDto","Provider","AppContainer","msgBox","util_components_MessageBox","resetMessageBox","components_AuthenticationContextProvider","navigation_UserNavigation","BrowserRouter","components_CalendarApp","src_AppContainer","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d58c77c2.chunk.js","sourcesContent":["const API_BASE_URL = \"https://baas.kinvey.com/\";\r\nconst API_KEY = \"kid_r1ynbbg6Q\";\r\nconst API_SECRET = \"33903aebaffd4a3b944250b832bd81f3\";\r\nconst BASIC_AUTH_HEADER = {\r\n    'Authorization': \"Basic \" + btoa(API_KEY + \":\" + API_SECRET)\r\n};\r\nconst MASTER_AUTH_HEADER = {\r\n    'Authorization': \"Basic \" + btoa(API_KEY + \":f55dd3810f61465c98c4fec7525a6ba9\")\r\n};\r\nmodule.exports = {API_BASE_URL, API_KEY, BASIC_AUTH_HEADER};","const MONTHS_MAP = {\r\n    0: \"January\",\r\n    1: \"February\",\r\n    2: \"March\",\r\n    3: \"April\",\r\n    4: \"May\",\r\n    5: \"June\",\r\n    6: \"July\",\r\n    7: \"August\",\r\n    8: \"September\",\r\n    9: \"October\",\r\n    10: \"November\",\r\n    11: \"December\",\r\n};\r\n\r\nconst DAYS_MAP = {\r\n    0: \"MONDAY\",\r\n    1: \"TUESDAY\",\r\n    2: \"WEDNESDAY\",\r\n    3: \"THURSDAY\",\r\n    4: \"FRIDAY\",\r\n    5: \"SATURDAY\",\r\n    6: \"SUNDAY\"\r\n};\r\n\r\nmodule.exports = {MONTHS_MAP, DAYS_MAP};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a currentNotesPage, after all the\n// existing tabs open on the currentNotesPage have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our currentNotesPage is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this currentNotesPage are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the currentNotesPage.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the currentNotesPage.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. CalendarNavigationBar is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport {AuthenticationContext} from \"../ContextHolder\";\r\nimport Route from \"react-router-dom/es/Route\";\r\n\r\nexport const ContextToPropsHOC = (InnerComponent) => (props) => {\r\n    return (<AuthenticationContext.Consumer>\r\n        {context =>\r\n            context.isLoggedIn === null ?\r\n                \"\"\r\n                :\r\n                <InnerComponent context={context} {...props}/>\r\n        }\r\n    </AuthenticationContext.Consumer>)\r\n};\r\n\r\nexport const RouteToContextHOC = (InnerComponent) => (props) => {\r\n    return (<Route>\r\n        {routeProps =>\r\n            <InnerComponent route={routeProps} {...props}/>\r\n        }\r\n    </Route>)\r\n};","import React from 'react';\r\nexport const AuthenticationContext = React.createContext(\"\");","import React from 'react';\nimport '../../../component-styles/Nav.css';\nimport {Link} from \"react-router-dom\";\nimport {RouteToContextHOC} from \"../../HOC/ContextToPropsHOC\";\n\nclass CalendarNavigationBar extends React.Component {\n    state = {\n        activeLinks: {\n            home: this.props.route.location.pathname === \"/\" || this.props.route.location.pathname === \"/calendar\" ,\n            myNotes: this.props.route.location.pathname === \"/my_notes\",\n            myDays: this.props.route.location.pathname === \"/my_days\"\n        }\n    };\n\n    static getDerivedStateFromProps(props) {\n        return {activeLinks: {\n                home: props.route.location.pathname === \"/\" || props.route.location.pathname === \"/calendar\",\n                myNotes: props.route.location.pathname === \"/my_notes\",\n                myDays: props.route.location.pathname === \"/my_days\"\n            }}\n    }\n\n    handleClick(e) {\n        let activeLinks = {};\n        for (let [activeLink] of Object.entries(this.state.activeLinks)) {\n            activeLinks[activeLink] = activeLink.toLowerCase().includes(e.target.name.toLowerCase());\n        }\n        this.setState({activeLinks: activeLinks})\n\n    }\n\n    render() {\n        return (\n            <nav className={\"navigation-bar\"}>\n                <div className={\"logo-container\"}>\n                    <h2>Calendar</h2>\n                </div>\n                <div className=\"url-container\">\n                    <ul>\n                        <li className={this.state.activeLinks.home ? \"active\" : \"\"}><Link\n                            onClick={this.handleClick.bind(this)}\n                            to={\"/calendar\"}\n                            name={\"home\"}>\n                            Home\n                        </Link></li>\n                        <li className={this.state.activeLinks.myNotes ? \"active\" : \"\"}><Link\n                            onClick={this.handleClick.bind(this)}\n                            to={\"/my_notes\"}\n                            name={\"myNotes\"}>\n                            My notes\n                        </Link></li>\n                        <li className={this.state.activeLinks.myDays ? \"active\" : \"\"}><Link\n                            onClick={this.handleClick.bind(this)}\n                            to={\"/my_days\"}\n                            name={\"myDays\"}>\n                            My Days\n                        </Link></li>\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n};\nexport default RouteToContextHOC(CalendarNavigationBar);\n","import React from 'react';\r\nimport '../../../component-styles/DayBlockStyle.css';\r\n\r\nconst DayBlock = (props) => {\r\n\r\n    return (\r\n        <div className={`day-block ${props.className}`}\r\n             onClick={() => props.clickHandler(props)}>\r\n            {props.value}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DayBlock;","import React from 'react';\r\nimport DayBlock from \"./DayBlock\";\r\nimport {DAYS_MAP} from \"../../utils/constants/CalendarConstants\";\r\n\r\nclass CalendarBody extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: this.props.currentMonth\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        //We changed the year or month\r\n        if (this.props.currentMonth !== nextProps.currentMonth) {\r\n            this.setState({currentMonth: nextProps.currentMonth})\r\n        }\r\n    }\r\n\r\n\r\n    renderBlock(blockValue, blockClass, blockKey) {\r\n        return (<DayBlock key={blockKey}\r\n                          id={blockKey}\r\n                          value={blockValue}\r\n                          className={blockClass}\r\n                          clickHandler={this.props.clickHandler}\r\n        />)\r\n    }\r\n\r\n    renderHeader() {\r\n        let row = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            row.push(\r\n                this.renderBlock(DAYS_MAP[i].substr(0,3), \"block-heading\", `h-${i}`)\r\n            )\r\n        }\r\n        return row;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"calendar-body\">\r\n                {this.renderHeader()}\r\n                {this.state.currentMonth.map((day, iterCount) => this.renderBlock(day.dayValue, day.dayClass, \"d-\" + iterCount))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default CalendarBody;","import React from 'react';\r\nimport {MONTHS_MAP} from \"../../utils/constants/CalendarConstants\";\r\n\r\nconst CalendarImage = (props) => {\r\n\r\n    function getCurrentMonth() {\r\n        return props.activeDate.getMonth();\r\n    }\r\n\r\n        return (\r\n            <div className={props.currentClass}>\r\n                <h3>{MONTHS_MAP[getCurrentMonth()].toString().substr(0,3)}</h3>\r\n                <p className=\"day-paragraph\">{props.activeDate.getDate()}</p>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default CalendarImage;","export default {\r\n    extractIdByDate: function (date) {\r\n        //Basicly the id is yyyy-mm-dd\r\n        //Example 21st october 2018 will have id=2018-10-21\r\n        let id = date.getFullYear() +\r\n            \"-\" + date.getMonth() +\r\n            \"-\" + date.getDate();\r\n        return id;\r\n    },\r\n    extractDateById: function (id) {\r\n        let year = id.split(\"-\")[0];\r\n        let month = id.split(\"-\")[1];\r\n        let day = id.split(\"-\")[2];\r\n        return new Date(year, month, day, 0, 0, 0);\r\n    },\r\n    compareDates: function (date1, date2) {\r\n        return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\r\n    },\r\n    areUsersDtoSame: function (user1, user2) {\r\n        if (!user1 || !user2)\r\n            return false;\r\n        return user1.id === user2.id && user1.authToken === user2.authToken;\r\n    },\r\n    elementInViewport: function (el) {\r\n        let top = el.offsetTop;\r\n        let left = el.offsetLeft;\r\n        let width = el.offsetWidth;\r\n        let height = el.offsetHeight;\r\n\r\n        while (el.offsetParent) {\r\n            el = el.offsetParent;\r\n            top += el.offsetTop;\r\n            left += el.offsetLeft;\r\n        }\r\n\r\n        return (\r\n            top < (window.pageYOffset + window.innerHeight) &&\r\n            left < (window.pageXOffset + window.innerWidth) &&\r\n            (top + height) > window.pageYOffset &&\r\n            (left + width) > window.pageXOffset\r\n        );\r\n    }\r\n};","import $ from 'jquery';\r\nimport ApiConstants from \"./ApiConstants\";\r\nexport default {\r\n    login: function (data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: ApiConstants.API_BASE_URL + \"user/\" + ApiConstants.API_KEY + \"/login\",\r\n            headers: ApiConstants.BASIC_AUTH_HEADER,\r\n            data: data\r\n        });\r\n    },\r\n\r\n    register: function (data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: ApiConstants.API_BASE_URL + \"user/\" + ApiConstants.API_KEY,\r\n            headers: ApiConstants.BASIC_AUTH_HEADER,\r\n            data: data\r\n        });\r\n    },\r\n\r\n    logout: function (headers) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: ApiConstants.API_BASE_URL + \"user/\" + ApiConstants.API_KEY + \"/_logout\",\r\n            headers: headers\r\n        });\r\n    },\r\n\r\n    checkIfUsernameExists: function(data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url:`${ApiConstants.API_BASE_URL}rpc/${ApiConstants.API_KEY}/check-username-exists`,\r\n            headers:ApiConstants.BASIC_AUTH_HEADER,\r\n            data:data\r\n        });\r\n    },\r\n\r\n    getUser(authToken) {\r\n        let headers = {\"Authorization\": \"Kinvey \" + authToken};\r\n        return $.ajax({\r\n            method:\"GET\",\r\n            url: ApiConstants.API_BASE_URL + \"user/\" + ApiConstants.API_KEY + \"/_me\",\r\n            headers: headers\r\n        })\r\n    }\r\n\r\n}\r\n\r\n","import $ from 'jquery';\r\nimport ApiConstants from \"./ApiConstants\";\r\n\r\nexport default {\r\n    getFromById(collectionName, headers, id) {\r\n        return $.ajax({\r\n            method: \"GET\",\r\n            url: ApiConstants.API_BASE_URL + \"appdata/\" + ApiConstants.API_KEY + \"/\" + collectionName + \"/\" + id,\r\n            headers: headers,\r\n        });\r\n    },\r\n    getFrom(collectionName, headers, query) {\r\n        let requestQuery = query ? query : \"\";\r\n        return $.ajax({\r\n            method: \"GET\",\r\n            url: ApiConstants.API_BASE_URL + \"appdata/\" + ApiConstants.API_KEY + \"/\" + collectionName + \"/\" + requestQuery,\r\n            headers: headers,\r\n        });\r\n    },\r\n    addTo(collectionName, headers, data) {\r\n        return $.ajax({\r\n            method: \"POST\",\r\n            url: ApiConstants.API_BASE_URL + \"appdata/\" + ApiConstants.API_KEY + \"/\" + collectionName,\r\n            headers: headers,\r\n            data: data\r\n        })\r\n    },\r\n    putTo(collectionName, headers, data, id) {\r\n        return $.ajax({\r\n            method: \"PUT\",\r\n            url: ApiConstants.API_BASE_URL + \"appdata/\" + ApiConstants.API_KEY + \"/\" + collectionName + \"/\" + id,\r\n            headers: headers,\r\n            data: data\r\n        })\r\n    },\r\n    deleteFromById(dbCollectionName, id, headers) {\r\n        return $.ajax({\r\n            method: \"DELETE\",\r\n            url: ApiConstants.API_BASE_URL + \"appdata/\" + ApiConstants.API_KEY + \"/\" + dbCollectionName + \"/\" + id,\r\n            headers: headers\r\n        })\r\n    },\r\n    getCount(collectionName, headers, query) {\r\n        let requestQuery = query ? query : \"\";\r\n        return $.ajax({\r\n            method: \"GET\",\r\n            url: ApiConstants.API_BASE_URL + \"appdata/\" + ApiConstants.API_KEY + \"/\" + collectionName + \"/_count/\" + requestQuery,\r\n            headers: headers\r\n        })\r\n    }\r\n}","import BaseRepository from \"./BaseRepository\";\r\n\r\nconst COLLECTION_NAME = \"my-days\";\r\nexport default {\r\n    addDayToMyDays(data, headers) {\r\n        return BaseRepository.addTo(\"my-days\", headers, data);\r\n    },\r\n    getDayByUser(headers, query) {\r\n        return new Promise((resolve, reject) => {\r\n            BaseRepository.getFrom(COLLECTION_NAME, headers, query)\r\n                .then(\r\n                    (success) => {\r\n                        resolve(success);\r\n                    }, (error) => {\r\n                        reject(error);\r\n                    })\r\n        });\r\n    },\r\n    getDaysPaged(headers, query) {\r\n        return new Promise((resolve, reject) => {\r\n            BaseRepository.getFrom(COLLECTION_NAME, headers, query)\r\n                .then(\r\n                    (success) => resolve(success),\r\n                    (error) => reject(error)\r\n                )\r\n        });\r\n    },\r\n    getMyDaysCount(headers, query) {\r\n        return new Promise((resolve, reject) => {\r\n            BaseRepository.getCount(COLLECTION_NAME, headers, query)\r\n                .then(\r\n                    (successResponse) => resolve(successResponse),\r\n                    (errorResponse) => reject(errorResponse))\r\n        });\r\n    },\r\n    removeDayFromMyDay(dayId, headers) {\r\n        return new Promise((resolve, reject) => {\r\n           BaseRepository.deleteFromById(COLLECTION_NAME, dayId, headers)\r\n               .then(\r\n                   (successResponse) => resolve(successResponse),\r\n                   (errorResponse) => reject(errorResponse)\r\n               );\r\n        });\r\n    }\r\n}","class UtilService {\r\n    static generateHeaders(authToken) {\r\n        return {\r\n            \"Authorization\": \"Kinvey \" + authToken\r\n        };\r\n    }\r\n}\r\nexport default UtilService;","import BaseRepository from \"./BaseRepository\";\r\n\r\nconst COLLECTION_NAME = \"todo-list\";\r\nexport default {\r\n    addToDoItem(data, headers) {\r\n        return BaseRepository.addTo(COLLECTION_NAME, headers, data);\r\n    },\r\n    updateToDoItem(data, headers, id) {\r\n      return BaseRepository.putTo(COLLECTION_NAME, headers, data, id);\r\n    },\r\n    getFromToDoList(headers, query) {\r\n        return new Promise((resolve, reject) => {\r\n            BaseRepository.getFrom(COLLECTION_NAME, headers, query)\r\n                .then(\r\n                    (success) => resolve(success),\r\n                    (error) => reject(error)\r\n                )\r\n        });\r\n    },\r\n    getSingleToDoItem(headers, id) {\r\n        return new Promise((resolve, reject) => {\r\n            BaseRepository.getFrom(COLLECTION_NAME, headers, id)\r\n                .then(\r\n                    (successResponse) => resolve(successResponse),\r\n                    (errorResponse) => reject(errorResponse)\r\n                )\r\n        });\r\n    },\r\n    getToDoListCount(headers, query) {\r\n        return new Promise((resolve, reject) => {\r\n            BaseRepository.getCount(COLLECTION_NAME, headers, query)\r\n                .then(\r\n                    (successResponse) => resolve(successResponse),\r\n                    (errorResponse) => reject(errorResponse))\r\n        });\r\n    },\r\n    removeToDoItem(todoItemId, headers) {\r\n        return new Promise((resolve, reject) => {\r\n            BaseRepository.deleteFromById(COLLECTION_NAME, todoItemId, headers)\r\n                .then(\r\n                    (successResponse) => resolve(successResponse),\r\n                    (errorResponse) => reject(errorResponse)\r\n                );\r\n        });\r\n    }\r\n}","import UtilFunctions from \"../components/utils/UtilFunctions\";\r\nimport Requester from \"../repositories/AuthenticationRepository\";\r\nimport MyDaysRepository from \"../repositories/MyDaysRepository\";\r\nimport UtilService from \"./UtilService\";\r\nimport ToDoListRepository from \"../repositories/ToDoListRepository\";\r\n\r\nexport default class ToDoListService {\r\n\r\n    static addToDoItem(data, user) {\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        return new Promise((resolve, reject) => {\r\n            ToDoListRepository.addToDoItem(data, headers)\r\n                .then(\r\n                    (success) => {\r\n                        resolve(success)\r\n                    },\r\n                    (error) => {\r\n                        reject(error);\r\n                    })\r\n        });\r\n    }\r\n\r\n    static async finishToDoItem(todoItemId, user) {\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        let item = await ToDoListRepository.getSingleToDoItem(headers, todoItemId);\r\n        item.isFinished = true;\r\n        return new Promise((resolve, reject) => {\r\n           ToDoListRepository.updateToDoItem(item, headers, todoItemId)\r\n               .then(\r\n                   (success) => resolve(success),\r\n                   (failure) => reject(failure)\r\n               );\r\n        });\r\n    }\r\n\r\n    static getToDoListByDayPaged(pageSize, pageNumber, user, dayId) {\r\n        let query = `?query={\"_acl.creator\" : \"${user.id}\", \"dayId\" : \"${dayId}\"}\r\n                            &limit=${pageSize}&skip=${pageSize * (pageNumber - 1)}\r\n                            &sort={\"_kmd.lmt\": -1 , \"isFinished\" : 1}`;\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        return ToDoListRepository.getFromToDoList(headers, query);\r\n    }\r\n\r\n    static getToDoListCount(user, dayId) {\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        let query = `?query={\"_acl.creator\":\"${user.id}\", \"dayId\" : \"${dayId}\"}`;\r\n        return ToDoListRepository.getToDoListCount(headers, query);\r\n\r\n    }\r\n\r\n    static removeToDoItem(todoId, user) {\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        return ToDoListRepository.removeToDoItem(todoId, headers);\r\n    }\r\n\r\n\r\n\r\n}","import React from 'react';\r\nimport './util-styles/ModalBox.css';\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.getElementById('root');\r\nconst propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    closeFunction: PropTypes.func.isRequired\r\n};\r\n\r\nclass ModalBox extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShown: false,\r\n            animationClass: \"hide\",\r\n            transitionEnded: false,\r\n            customStyle: {}\r\n        };\r\n        this.modal = document.createElement('div');\r\n        this.handleBackgroundClick = this.handleBackgroundClick.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.customStyle)\r\n            this.setState({customStyle: this.props.customStyle});\r\n        modalRoot.appendChild(this.modal);\r\n\r\n        if (this.props.isOpen) {\r\n            this.setState({isShown: true});\r\n            setTimeout(() => {\r\n                this.setState({animationClass: \"show\"})\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (modalRoot.contains(this.modal))\r\n            modalRoot.removeChild(this.modal);\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        if (props.isOpen) {\r\n            this.setState({isShown: true});\r\n            setTimeout(() => {\r\n                this.setState({animationClass: \"show\"})\r\n            }, 10);\r\n        }\r\n        else {\r\n            this.setState({animationClass: \"hide\"});\r\n            const animationDurationMs = 300;\r\n            setTimeout(() => {\r\n                this.setState({isShown: false});\r\n            }, animationDurationMs);\r\n        }\r\n    }\r\n\r\n    handleBackgroundClick(event) {\r\n        if (event.target.closest('div').classList.contains(\"modal-box-background\"))\r\n            this.props.closeFunction();\r\n\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div\r\n                onClick={this.handleBackgroundClick}\r\n                className={`modal-box-background ${this.state.isShown ? \"shown\" : \"\"}`}>\r\n                <div style={this.state.customStyle}\r\n                     className={`modal-box-content ${this.state.animationClass}`}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n            , this.modal)\r\n    }\r\n}\r\n\r\nModalBox.propTypes = propTypes;\r\nexport default ModalBox;\r\n\r\n\r\n","import React from 'react';\r\nimport './util-styles/ConfirmStyle.css';\r\nimport PropTypes from 'prop-types';\r\nimport ModalBox from \"./ModalBox\";\r\n\r\nconst modalRoot = document.getElementById('root');\r\nconst propTypes = {\r\n    isOpen: PropTypes.bool.isRequired,\r\n    closeFunction: PropTypes.func.isRequired,\r\n    confirmFunction: PropTypes.func.isRequired,\r\n    confirmationMessage: PropTypes.string.isRequired\r\n};\r\n\r\nclass Confirmation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpen: true\r\n        };\r\n    }\r\n\r\n    close() {\r\n        this.setState({isOpen: false});\r\n        this.props.closeFunction();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ModalBox\r\n                isOpen={this.state.isOpen}\r\n                closeFunction={this.props.closeFunction}>\r\n                <div className=\"confirmation-modal\">\r\n                    <div className=\"confirmation-modal-header\">\r\n                        <p>Are you sure?</p>\r\n                        <span><a href=\"#\" onClick={() => this.close()}>&times;</a></span>\r\n                    </div>\r\n                    <div className=\"confirmation-modal-message\">{this.props.confirmationMessage}</div>\r\n                    <div className=\"confirmation-modal-footer\">\r\n                        <button className=\"btn btn-danger\"\r\n                                onClick={() => this.props.confirmFunction()}>Yes\r\n                        </button>\r\n                        <button className=\"btn btn alert-primary\" onClick={() => this.close()}>No</button>\r\n                    </div>\r\n                </div>\r\n            </ModalBox>\r\n        )\r\n    }\r\n}\r\n\r\nConfirmation.propTypes = propTypes;\r\nexport default Confirmation;\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './util-styles/ToolTip.css';\r\n\r\nconst ToolTip = (props) => {\r\n\r\n        function getStyles() {\r\n            return props.customStyle ? props.customStyle : {};\r\n        }\r\n\r\n        return (\r\n            <span style={getStyles()} className={`tooltip ${props.position}`}>{props.tooltip}</span>\r\n        )\r\n    }\r\n;\r\nToolTip.propTypes = {\r\n    tooltip: PropTypes.string.Required,\r\n    customStyle: PropTypes.object,\r\n    position: PropTypes.oneOf(\"left\", \"right\", \"top\", \"bottom\")\r\n};\r\nToolTip.defaultProps = {\r\n    position:\"right\"\r\n};\r\nexport default ToolTip;\r\n","import React from 'react';\r\nimport ToolTip from \"../utils/util-components/ToolTip\";\r\nimport '../../component-styles/ToDoView.css';\r\nimport Confirmation from \"../utils/util-components/Confirmation\";\r\n\r\nconst customToolTipStyle = {\r\n    \"marginTop\": \"-35px\"\r\n};\r\n\r\nconst ToDoItem = (props) => {\r\n\r\n    function checkUncheckInput(e) {\r\n        props.finishItem(props.item._id, e.target.checked);\r\n    }\r\n\r\n    return (\r\n        <div className={\"todo-list-row\"} id={props.id}>\r\n            <div className=\"form-check\">\r\n                <input onChange={checkUncheckInput}\r\n                       disabled={props.item.isFinished === \"true\"}\r\n                       checked={props.item.isFinished === \"true\"}\r\n                       type=\"checkbox\"/>\r\n                <span className={props.item.isFinished === \"true\" ? \"checked\" : \"unchecked\"}>\r\n                    {props.item.content}\r\n                </span>\r\n            </div>\r\n            <span onClick={() => props.openConfirmation(props.item._id)}\r\n                  className={\"tooltip-activator\"}>\r\n                        <a href={\"#\"}>X</a>\r\n                        <ToolTip position={\"top\"} tooltip={\"Remove\"} customStyle={customToolTipStyle}/>\r\n                    </span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ToDoItem;","import React from 'react';\r\nimport './util-styles/Loading.css';\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nconst Loading = (props) => {\r\n    let render = <div className=\"loading-background\">\r\n        <div className=\"loading-wrapper\">\r\n            <div className=\"loading-inner\">\r\n            </div>\r\n        </div>\r\n    </div>;\r\n    if (props.portal)\r\n        return ReactDOM.createPortal(render, props.portal);\r\n    else\r\n        return (\r\n            render\r\n        )\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\nclass ToDoView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: \"\"\r\n        }\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        if (this.state.input === \"\")\r\n            return;\r\n        this.props.addTodoItem(this.state.input);\r\n        this.setState({input: \"\"});\r\n    }\r\n\r\n    handleInput(event) {\r\n        this.setState({input: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"todo-list-container\"}>\r\n                <form className={\"form-inline justify-content-end\"} onSubmit={this.submit.bind(this)}>\r\n                    <div className=\"form-group w-100\">\r\n                        <input className={\"form-control\"}\r\n                               onChange={this.handleInput.bind(this)}\r\n                               value={this.state.input}\r\n                               name=\"content\"\r\n                               type=\"text\"/>\r\n                        <input className={\"btn btn-primary\"} value={\"Add to my TODO list\"} type=\"submit\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoView;","import React from 'react';\r\nimport '../../component-styles/ToDoView.css';\r\nimport Confirmation from \"../utils/util-components/Confirmation\";\r\nimport ToDoItem from \"./ToDoItem\";\r\nimport Loading from \"../utils/util-components/Loading\";\r\nimport ToDoInput from \"./ToDoInput\";\r\n\r\n\r\nclass ToDoView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: null,\r\n            isConfirmDialogOpen: false,\r\n            idToDelete: null,\r\n            isLoading: false,\r\n            isLoadingFinish: false,\r\n            itemId: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({items: this.props.itemsToDisplay});\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.itemsToDisplay !== state.items)\r\n            return {items: props.itemsToDisplay};\r\n        return {};\r\n    }\r\n\r\n    async finishItem(itemId) {\r\n        this.setState({isLoadingFinish: true, itemId: itemId});\r\n        this.showCongratz();\r\n        await this.props.finishItem(itemId);\r\n        this.setState({isLoadingFinish: false, itemId: null});\r\n    };\r\n\r\n    showCongratz() {\r\n        let DELAY_AFTER_GRATZ_HIDES = 2000;\r\n        let outerDiv = document.createElement('div');\r\n        outerDiv.classList.add(\"congratz-outer\");\r\n        let innerDiv = document.createElement('div');\r\n        innerDiv.classList.add(\"congratz-inner\");\r\n        innerDiv.innerHTML = \"GOOD JOB\";\r\n        outerDiv.appendChild(innerDiv);\r\n        document.getElementsByTagName(\"BODY\")[0].appendChild(outerDiv);\r\n        setTimeout(() => {\r\n            document.getElementsByTagName(\"BODY\")[0].removeChild(outerDiv)\r\n        }, DELAY_AFTER_GRATZ_HIDES);\r\n    }\r\n\r\n    openConfirmation(idToDelete) {\r\n        this.setState({\r\n            isConfirmDialogOpen: true,\r\n            idToDelete: idToDelete\r\n        })\r\n    }\r\n\r\n    closeConfirmation() {\r\n        this.setState({\r\n            isConfirmDialogOpen: false,\r\n            idToDelete: null\r\n        })\r\n    }\r\n\r\n    async confirmDelete() {\r\n        this.setState({isLoading: true});\r\n        await this.props.removeToDoItem(this.state.idToDelete);\r\n        this.setState({isLoading: false});\r\n        this.closeConfirmation();\r\n    }\r\n\r\n    async addTodoItem(e) {\r\n        this.setState({isLoading: true});\r\n        await this.props.addToDoItem(e);\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    render() {\r\n        let confirm = this.state.isConfirmDialogOpen ?\r\n            <Confirmation isOpen={this.state.isConfirmDialogOpen}\r\n                          closeFunction={() => this.closeConfirmation()}\r\n                          confirmFunction={() => this.confirmDelete()}\r\n                          confirmationMessage={\"Remove TODO item from the list\"}/>\r\n            :\r\n            \"\";\r\n        let loading = this.state.isLoading ? <Loading/> :\r\n            this.state.isLoadingFinish ? <Loading portal={document.getElementById(this.state.itemId).firstChild}/> :\r\n                \"\";\r\n        return this.props.isLoggedIn ? (\r\n                <React.Fragment>\r\n                    {confirm}\r\n                    {loading}\r\n                    <ToDoInput\r\n                        addTodoItem={this.addTodoItem.bind(this)}/>\r\n                    <div className=\"todos\">\r\n                        {this.renderToDoItems()}\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n            :\r\n            (\r\n                <div className=\"todos\">\r\n                    <div className={\"pl-4\"}>Log in to add TODO items</div>\r\n                </div>\r\n            )\r\n    }\r\n\r\n    renderToDoItems() {\r\n        if (this.state.items === null)\r\n            return <Loading/>;\r\n        return this.state.items.length > 0 ?\r\n            this.state.items.map((todoItem) =>\r\n                <ToDoItem\r\n                    id={todoItem._id}\r\n                    key={todoItem._id}\r\n                    item={todoItem}\r\n                    finishItem={this.finishItem.bind(this)}\r\n                    openConfirmation={this.openConfirmation.bind(this)}/>)\r\n            :\r\n            <div className={\"pl-4\"}>No TODOs for today</div>\r\n    }\r\n}\r\n\r\nexport default ToDoView;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../component-styles/my-days/MyDaysPagination.css';\r\n\r\nconst propTypes = {\r\n    totalItems: PropTypes.number.isRequired,\r\n    itemsPerPage: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    handlePageChange: PropTypes.func.isRequired\r\n};\r\n\r\nclass MyDaysPagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //Must be ODD number or else BUG\r\n        const MAX_PAGES_VISIBLE_AT_ONCE = 5;\r\n        this.state = {\r\n            totalPages: null,\r\n            currentPage: null,\r\n            leftMostPage: 1,\r\n            rightMostPage: undefined,\r\n            maxPages: MAX_PAGES_VISIBLE_AT_ONCE\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, thisState) {\r\n        if (props.totalItems !== thisState.totalItems\r\n            || props.currentPage !== thisState.currentPage) {\r\n            let totalPages = Math.ceil(props.totalItems / props.itemsPerPage);\r\n            if (totalPages > thisState.maxPages) {\r\n                let numberOfPagesAroundCurrentPage = Math.floor(thisState.maxPages / 2);\r\n                let rightMostPage = thisState.maxPages;\r\n                let leftMostPage = 1;\r\n                if (props.currentPage > numberOfPagesAroundCurrentPage) {\r\n                    leftMostPage = props.currentPage - numberOfPagesAroundCurrentPage;\r\n                    if (props.currentPage + numberOfPagesAroundCurrentPage > props.totalItems)\r\n                        rightMostPage = props.totalItems;\r\n                    else\r\n                        rightMostPage = props.currentPage + numberOfPagesAroundCurrentPage;\r\n                }\r\n                return {\r\n                    leftMostPage: leftMostPage,\r\n                    rightMostPage: rightMostPage,\r\n                    totalPages: totalPages,\r\n                    currentPage: props.currentPage\r\n                };\r\n            }\r\n            return {\r\n                totalPages: totalPages,\r\n                currentPage: props.currentPage,\r\n                rightMostPage: totalPages\r\n            };\r\n        }\r\n        return {};\r\n    }\r\n\r\n    renderPageLinks() {\r\n        if (!this.state.totalPages || this.state.totalPages <= 1)\r\n            return;\r\n        let pageBar = [];\r\n        pageBar.push(<li\r\n            className={this.state.currentPage === 1 ? \"disabled\" : \"\"}\r\n            key={\"prev-page\"}>\r\n            <a onClick={() => this.prevPage()} href=\"#\">Previous</a>\r\n        </li>);\r\n        for (let i = this.state.leftMostPage; i <= this.state.rightMostPage; i++) {\r\n            let activeClassName = this.state.currentPage === i ? \"active\" : \"\";\r\n            pageBar.push(<li key={\"page-link\" + i}>\r\n                <a\r\n                    className={activeClassName}\r\n                    onClick={() => this.handleLinkClick(i)} href=\"#\">{i}</a>\r\n            </li>)\r\n        }\r\n        pageBar.push(<li\r\n            className={this.state.currentPage === this.state.totalPages ? \"disabled\" : \"\"}\r\n            key={\"next-page\"}>\r\n            <a onClick={() => this.nextPage()} href=\"#\">Next</a>\r\n        </li>);\r\n        return pageBar;\r\n    }\r\n\r\n    handleLinkClick(pageNumber) {\r\n        this.setState({currentPage: pageNumber});\r\n        this.props.handlePageChange(pageNumber);\r\n    }\r\n\r\n    prevPage() {\r\n        return this.handleLinkClick(this.state.currentPage - 1);\r\n    }\r\n\r\n    nextPage() {\r\n        return this.handleLinkClick(this.state.currentPage + 1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"my-days-pagination\">\r\n                <ul className=\"page-bar\">\r\n                    {this.renderPageLinks()}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyDaysPagination;","import React from 'react'\r\nimport ToDoListService from \"../services/ToDoListService\";\r\nimport ToDoView from \"../components/todo-list/ToDoView\";\r\nimport {ContextToPropsHOC} from \"../components/HOC/ContextToPropsHOC\";\r\nimport MyDaysPagination from \"../components/my-days/MyDaysPagination\";\r\nimport Loading from \"../components/utils/util-components/Loading\";\r\n\r\nclass ToDoListController extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            totalItems: 0,\r\n            pageSize: 5,\r\n            currentPage: 1,\r\n            currentPageItems: null,\r\n            currentDateId: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initTodoItems();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.currentDateId !== state.currentDateId && props.context.isLoggedIn) {\r\n            return {currentDateId: props.currentDateId};\r\n        }\r\n        return {}\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.currentDateId !== this.state.currentDateId)\r\n            this.initTodoItems();\r\n    }\r\n\r\n    async initTodoItems() {\r\n        if (!this.state.currentDateId)\r\n            return;\r\n        this.setState({isLoading: true});\r\n        let totalItems = await ToDoListService.getToDoListCount(this.props.context.loggedInUser, this.state.currentDateId);\r\n        let currentPageItems = await this.fetchToDoListPaged();\r\n        this.setState({\r\n            totalItems: totalItems.count,\r\n            currentPageItems: currentPageItems,\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    async fetchToDoListPaged(pageSize, currentPage, loggedInUser, currentDayId) {\r\n        return new Promise((resolve, reject) => {\r\n            ToDoListService.getToDoListByDayPaged(\r\n                pageSize || this.state.pageSize,\r\n                currentPage || this.state.currentPage,\r\n                loggedInUser || this.props.context.loggedInUser,\r\n                currentDayId || this.props.currentDateId\r\n            ).then(\r\n                (success) => resolve(success),\r\n                (fail) => reject(fail)\r\n            )\r\n        });\r\n    }\r\n\r\n    async addToDoItem(content) {\r\n        let data = {\r\n            isFinished: false,\r\n            dayId: this.props.currentDateId,\r\n            content: content\r\n        };\r\n        return new Promise((resolve, reject) => {\r\n            ToDoListService.addToDoItem(data, this.props.context.loggedInUser)\r\n                .then(\r\n                    (success) => {\r\n                        //Put the newly created item on top\r\n                        let currentPageItems = this.state.currentPageItems;\r\n                        this.setState({currentPageItems: currentPageItems, currentPage: 1});\r\n                        this.initTodoItems();\r\n                        this.props.openMessageBox('success', \"Added TODO item\")\r\n                        resolve();\r\n                    },\r\n                    (fail) => {\r\n                        this.props.openMessageBox('error', \"Could not add TODO item\");\r\n                        reject();\r\n                    }\r\n                )\r\n        });\r\n    }\r\n\r\n    async finishToDoItem(itemId) {\r\n        let todoItem = await ToDoListService.finishToDoItem(itemId, this.props.context.loggedInUser);\r\n        let newItems = this.state.currentPageItems;\r\n        newItems.map((item) => {\r\n            if (item._id === itemId)\r\n                item.isFinished = \"true\";\r\n        });\r\n        this.setState({currentPageItems: newItems});\r\n    }\r\n\r\n    async removeToDoItem(itemId) {\r\n        return new Promise((resolve, reject) => ToDoListService.removeToDoItem(itemId, this.props.context.loggedInUser)\r\n            .then(\r\n                (success) => {\r\n                    let currentPageItems = this.state.currentPageItems;\r\n                    let currentPageWithoutElem = currentPageItems.filter((item) => item._id !== itemId);\r\n                    if (this.state.totalItems > 0 && currentPageWithoutElem.length <= 0) {\r\n                        //    we have deleted all the items on this page, but we still have items to display\r\n                        this.setState({\r\n                            currentPage: this.state.currentPage - 1\r\n                        })\r\n                    } else {\r\n                        this.setState({currentPageItems: currentPageWithoutElem});\r\n                    }\r\n                    this.initTodoItems();\r\n                    this.props.openMessageBox(\"success\", \"Removed TODO item\");\r\n\r\n                    resolve();\r\n                },\r\n                (error) => this.props.openMessageBox(\"error\", \"Could not delete TODO item\")\r\n            )\r\n        )\r\n    }\r\n\r\n    async handlePageChange(pageNumber) {\r\n        this.setState({isLoading: true});\r\n        let newPageItems = await this.fetchToDoListPaged(this.state.pageSize, pageNumber);\r\n        this.setState({\r\n            currentPage: pageNumber,\r\n            currentPageItems: newPageItems,\r\n            isLoading: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let loading = this.state.isLoading ? (<Loading portal={document.getElementsByClassName(\"todos\")[0]}/>) : \"\";\r\n        return (\r\n            <div className={\"todo-list-container\"}>\r\n                {loading}\r\n                <MyDaysPagination\r\n                    totalItems={this.state.totalItems}\r\n                    itemsPerPage={this.state.pageSize}\r\n                    currentPage={this.state.currentPage}\r\n                    handlePageChange={this.handlePageChange.bind(this)}/>\r\n                <ToDoView\r\n                    isLoggedIn={this.props.context.isLoggedIn}\r\n                    itemsToDisplay={this.state.currentPageItems}\r\n                    addToDoItem={this.addToDoItem.bind(this)}\r\n                    finishItem={this.finishToDoItem.bind(this)}\r\n                    removeToDoItem={this.removeToDoItem.bind(this)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContextToPropsHOC(ToDoListController);","import UtilFunctions from \"../components/utils/UtilFunctions\";\r\nimport Requester from \"../repositories/AuthenticationRepository\";\r\nimport MyDaysRepository from \"../repositories/MyDaysRepository\";\r\nimport UtilService from \"./UtilService\";\r\n\r\nexport default class MyDaysService {\r\n\r\n    static getDayIdByDate(date, user) {\r\n        let dateId = UtilFunctions.extractIdByDate(date);\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        let query = `?query={\"dayId\":\"${dateId}\", \"_acl.creator\" : \"${user.id}\"}`;\r\n        return new Promise((resolve, reject) => {\r\n            MyDaysRepository.getDayByUser(headers, query)\r\n                .then(\r\n                    (success) => {\r\n                        if (success.length > 0)\r\n                            resolve(success[0]._id)\r\n                    },\r\n                    (errorResponse) => reject(errorResponse)\r\n                )\r\n        });\r\n    }\r\n\r\n    static saveToMyDays(date, user) {\r\n        let dateId = UtilFunctions.extractIdByDate(date);\r\n        let data = {\r\n            dayId: dateId\r\n        };\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        return new Promise((resolve, reject) => {\r\n            MyDaysRepository.addDayToMyDays(data, headers)\r\n                .then(\r\n                    (success) => {\r\n                        resolve(success)\r\n                    },\r\n                    (error) => {\r\n                        reject(error);\r\n                    })\r\n        });\r\n    }\r\n\r\n    static getSavedDays(date, user) {\r\n        let dayId = UtilFunctions.extractIdByDate(date);\r\n        let query = `?query={\"dayId\":\"${dayId}\", \"_acl.creator\" : \"${user.id}\"}`;\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        return MyDaysRepository.getDayByUser(headers, query);\r\n    }\r\n\r\n    static getDaysPaged(pageSize, pageNumber, user) {\r\n        let query = `?query={\"_acl.creator\" : \"${user.id}\"}&limit=${pageSize}&skip=${pageSize * (pageNumber - 1)}`;\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        return MyDaysRepository.getDaysPaged(headers, query);\r\n    }\r\n\r\n    static getDaysCount(user) {\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        let query = `?query={\"_acl.creator\":\"${user.id}\"}`;\r\n        return MyDaysRepository.getMyDaysCount(headers, query);\r\n\r\n    }\r\n\r\n    static removeDaysFromMyDay(dayId, user) {\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        return MyDaysRepository.removeDayFromMyDay(dayId, headers);\r\n    }\r\n\r\n    static checkIfDayIsSaved(dayId, user) {\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        let query = `?query={\"_acl.creator\":\"${user.id}\", \"dayId\" : \"${dayId}\"}`;\r\n        return new Promise((resolve, reject) => {\r\n            MyDaysRepository.getDayByUser(headers, query).then((response) => {\r\n                if (response.length > 0)\r\n                    resolve(true);\r\n                resolve(false)\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport '../../component-styles/my-days/MyDaysButton.css';\r\nimport ToolTip from \"../utils/util-components/ToolTip\";\r\nimport {ContextToPropsHOC} from \"../HOC/ContextToPropsHOC\";\r\n\r\nlet customToolTipStyle = {\r\n    marginTop: \"-15px\",\r\n    marginLeft: \"50px\",\r\n    width: \"100%\"\r\n};\r\n\r\nclass MyDaysButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isDaySaved: this.props.isDaySaved\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    //    TODO\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.isDaySaved !== state.isDaySaved)\r\n            return {isDaySaved: props.isDaySaved};\r\n        return {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`my-days-button ${!this.props.context.isLoggedIn === null ? \"d-none\" : \"\"}`}>\r\n                <button onClick={() => this.props.handleMyDaysButtonClick()}\r\n                        className=\"tooltip-activator w-100 btn btn-primary\">\r\n                    <ToolTip position={\"bottom\"}\r\n                             tooltip={this.state.isDaySaved ?\r\n                                 \"Notes and other changes will remain\"\r\n                                 :\r\n                                 \"Add to favorites to save notes and some extra features\"}\r\n                             customStyle={customToolTipStyle}/>\r\n                    {\r\n                        this.state.isDaySaved ?\r\n                            \"Remove day from favorites\"\r\n                            :\r\n                            \"Save day to my favorites\"\r\n                    }\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContextToPropsHOC(MyDaysButton);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MyDaysService from \"../services/MyDaysService\";\r\nimport UtilFunctions from \"../components/utils/UtilFunctions\";\r\nimport Loading from \"../components/utils/util-components/Loading\";\r\nimport {ContextToPropsHOC} from \"../components/HOC/ContextToPropsHOC\";\r\nimport MyDaysButton from \"../components/my-days/MyDaysButton\";\r\n\r\nconst propTypes = {\r\n    activeDate: PropTypes.instanceOf(Date).Required,\r\n    handleClickFunction:PropTypes.func\r\n};\r\n\r\nclass MyDaysController extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loggedInUser: this.props.context.loggedInUser,\r\n            isDaySaved: null ,\r\n            currentDayId: null\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.context.loggedInUser) {\r\n            this.getCurrentDayId(this.props.activeDate, this.props.context.loggedInUser);\r\n            this.checkIfDayIsSaved(this.props.activeDate, this.props.context.loggedInUser);\r\n        }\r\n    }\r\n\r\n    // static getDerivedStateFromProps(props, state) {\r\n    //          TODO: FIX SOME DAY :)\r\n    //     if(!UtilFunctions.areUsersDtoSame(props.loggedInUser, state.loggedInUser)){\r\n    //         return {loggedInUser: props.loggedInUser}\r\n    //     }\r\n    // }\r\n    componentWillUpdate(nextProps) {\r\n        if (this.state.loggedInUser && !nextProps.context.loggedInUser) {\r\n            this.setState({loggedInUser: null});\r\n            return;\r\n        }\r\n        if (!this.state.loggedInUser && nextProps.context.loggedInUser) {\r\n            this.setState({loggedInUser: nextProps.context.loggedInUser});\r\n            this.checkIfDayIsSaved(nextProps.activeDate, nextProps.context.loggedInUser);\r\n            this.getCurrentDayId(nextProps.activeDate, nextProps.context.loggedInUser)\r\n        }\r\n        if ((nextProps.activeDate !== this.props.activeDate) &&\r\n            nextProps.context.loggedInUser) {\r\n            this.checkIfDayIsSaved(nextProps.activeDate, nextProps.context.loggedInUser);\r\n            this.getCurrentDayId(nextProps.activeDate, nextProps.context.loggedInUser)\r\n        }\r\n    }\r\n\r\n    async handleMyDaysButtonClick() {\r\n        this.setState({isLoading: true});\r\n        if (this.state.isDaySaved)\r\n            await this.removeDay();\r\n        else\r\n            await this.saveDay();\r\n\r\n        if(this.props.handleClickFunction)\r\n            this.props.handleClickFunction();\r\n    }\r\n\r\n    async checkIfDayIsSaved(date, user) {\r\n        MyDaysService.checkIfDayIsSaved(\r\n            UtilFunctions.extractIdByDate(date),\r\n            user)\r\n            .then((isDaySaved) => {\r\n                this.setState({isDaySaved: isDaySaved});\r\n            });\r\n    }\r\n\r\n    async getCurrentDayId(date, user) {\r\n        await MyDaysService.getDayIdByDate(date, user).then(\r\n            (id) => {\r\n                if (id)\r\n                    this.setState({currentDayId: id});\r\n                else\r\n                    this.setState({\r\n                        currentDayId: null,\r\n                        isDaySaved: false\r\n                    })\r\n            },\r\n            (error) => {\r\n            })\r\n    }\r\n\r\n    async saveDay() {\r\n        MyDaysService.saveToMyDays(\r\n            this.props.activeDate,\r\n            this.state.loggedInUser)\r\n            .then((success) => {\r\n                this.setState({\r\n                    isDaySaved: true,\r\n                    currentDayId: success._id,\r\n                    isLoading: false\r\n                })\r\n            })\r\n    }\r\n\r\n    async removeDay() {\r\n        MyDaysService.removeDaysFromMyDay(\r\n            this.state.currentDayId,\r\n            this.state.loggedInUser)\r\n            .then((success) => {\r\n                this.setState({\r\n                    isDaySaved: false,\r\n                    currentDayId: null,\r\n                    isLoading: false\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return this.state.isDaySaved === null ?\r\n            (\r\n                <React.Fragment>\r\n\r\n                </React.Fragment>\r\n            )\r\n            :\r\n            (\r\n            <React.Fragment>\r\n                {this.state.isLoading ?\r\n                    <Loading/>\r\n                    :\r\n                    <MyDaysButton isDaySaved={this.state.isDaySaved}\r\n                                  handleMyDaysButtonClick={() => this.handleMyDaysButtonClick()}/>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nMyDaysController.propTypes = propTypes;\r\nexport default ContextToPropsHOC(MyDaysController);","import React from 'react';\r\nimport '../../../component-styles/CalendarStatusStyle.css';\r\nimport CalendarImage from \"./CalendarImage\";\r\nimport ToDoListController from \"../../../controllers/ToDoListController\";\r\nimport UtilFunctions from \"../../utils/UtilFunctions\";\r\nimport MyDaysController from \"../../../controllers/MyDaysController\";\r\n\r\nclass CalendarStatusBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animateClass: \"\",\r\n            oldDate: new Date(),\r\n            isLoading: false,\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProp) {\r\n\r\n        if (nextProp.activeDate !== this.props.activeDate) {\r\n            //makes the top sheet animated, and switches blocks location\r\n\r\n            this.setState({animateClass: \"calendar-block-animate\"});\r\n            //Timeout is so floating animated calendar currentNotesPage can stay the same\r\n            const animationDuration = 950;\r\n            setTimeout(() => {\r\n                this.setState({animateClass: \"\"});\r\n                this.setState({oldDate: nextProp.activeDate});\r\n            }, animationDuration);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"status-container\">\r\n                {/*The upper part (the calendar image)*/}\r\n                <div className=\"block-container\">\r\n                    <CalendarImage\r\n                        currentClass={\"calendar-block old-calendar-block\"}\r\n                        activeDate={this.props.activeDate}/>\r\n                    <CalendarImage\r\n                        currentClass={\"calendar-block \" + this.state.animateClass}\r\n                        activeDate={this.state.oldDate}/>\r\n                </div>\r\n                {/*The lower part*/}\r\n                <ToDoListController\r\n                    currentDateId={UtilFunctions.extractIdByDate(this.props.activeDate)}\r\n                    openMessageBox={this.props.openMessageBox}/>\r\n                <MyDaysController\r\n                    activeDate={this.props.activeDate}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarStatusBar;\r\n","import React from 'react';\r\nimport '../../../component-styles/CalendarStyle.css';\r\nimport '../../../component-styles/responsive-styles/CalendarBodyResponsive.css'\r\nimport CalendarBody from \"./CalendarBody\";\r\nimport CalendarStatusBar from \"./CalendarStatusBar\";\r\nimport Utils from \"../../utils/UtilFunctions\";\r\nimport {MONTHS_MAP} from \"../../utils/constants/CalendarConstants\";\r\n\r\nclass Calendar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        /**INFO ABOUT STATE VARIABLES\r\n         *@params {Date}           activeDate         The date of the currently clicked day\r\n         *@params {object}         daysInCurrentMonth The information about every day's rendering (class, value etc)\r\n         *@params {Number}         year               The current year\r\n         *@params {Number}         month              The current month\r\n         *@params {Object}         animation          Animation classes for this component\r\n         */\r\n        this.state = {\r\n            activeDate: new Date(),\r\n            daysInCurrentMonth: {},\r\n            year: new Date().getFullYear(),\r\n            month: new Date().getMonth(),\r\n            animation: {\r\n                moveYear: \"\",\r\n                moveMonth: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            daysInCurrentMonth: this.createCurrentMonthObject()\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        let animation = this.state.animation;\r\n        const animationDuration = 1000;\r\n        if (animation.moveYear !== \"\") {\r\n            setTimeout(() => {\r\n                    animation.moveYear = \"\";\r\n                    this.setState({animation: animation})\r\n                }\r\n                , animationDuration);\r\n        }\r\n        if(animation.moveMonth !== \"\") {\r\n            setTimeout(() => {\r\n                    animation.moveMonth = \"\";\r\n                    this.setState({animation: animation})\r\n                }\r\n                , animationDuration);\r\n        }\r\n    }\r\n\r\n    updateYear(number) {\r\n        let animation = this.state.animation;\r\n        if (number < 0) {\r\n            //Left move\r\n            animation.moveYear = \"year-left\";\r\n        } else {\r\n            //right move\r\n            animation.moveYear = \"year-right\";\r\n        }\r\n        this.setState({\r\n            year: this.state.year + number,\r\n            currentMonth: this.createCurrentMonthObject(),\r\n            animation: animation\r\n        })\r\n    }\r\n\r\n    updateMonth(num) {\r\n        let animation = this.state.animation;\r\n        if (num < 0) {\r\n            //Left move\r\n            animation.moveMonth = \"month-left\";\r\n        } else {\r\n            //right move\r\n            animation.moveMonth = \"month-right\";\r\n        }\r\n        let newYear = this.state.year, newMonth;\r\n        if (this.state.month === 0 && num === (-1)) {\r\n            newMonth = 11;\r\n            newYear = this.state.year - 1;\r\n        }\r\n        else if (this.state.month === 11 && num === 1) {\r\n            newMonth = 0;\r\n            newYear = this.state.year + 1;\r\n        }\r\n        else {\r\n            newMonth = this.state.month + num;\r\n        }\r\n        this.setState({month: newMonth, year: newYear});\r\n    }\r\n\r\n    createCurrentMonthObject() {\r\n        let monthObject = [];\r\n        //We subtract the dayValue of the week of the last dayValue of the current month from 6,\r\n        // because we start from 0\r\n        //example: Date(2018,11,1).getDay() = THU = 3 (since MON is 0)\r\n        let daysFromNextMonth = 6 - new Date(this.state.year,\r\n            this.state.month,\r\n            this.getDaysInMonth() - 1).getDay();\r\n\r\n        let daysInLastMonth = this.getDaysInMonth(this.state.month - 1);\r\n        let currentMonthFirstDay = this.getFirstDayOfMonth();\r\n        let startDateLastMonth = daysInLastMonth - currentMonthFirstDay;\r\n        for (let i = startDateLastMonth + 1; i <= daysInLastMonth; i++) {\r\n            monthObject.push({\r\n                dayValue: i,\r\n                dayClass: \"last-month\"\r\n            });\r\n        }\r\n        for (let i = 1; i <= this.getDaysInMonth(); i++) {\r\n            let realTimeNow = new Date();\r\n            let calendarTimeNow = new Date(this.state.year, this.state.month, i);\r\n            let dayClass = \"current-month\";\r\n            if (i === realTimeNow.getDate() && this.state.month === realTimeNow.getMonth() && this.state.year === realTimeNow.getFullYear()) {\r\n                dayClass += \" today\";\r\n            }\r\n            if (Utils.compareDates(this.state.activeDate, calendarTimeNow)) {\r\n                dayClass += \" active\";\r\n            }\r\n            monthObject.push({\r\n                dayValue: i,\r\n                dayClass: dayClass\r\n            });\r\n        }\r\n        for (let i = 1; i <= daysFromNextMonth; i++) {\r\n            monthObject.push({\r\n                dayValue: i,\r\n                dayClass: \"next-month\"\r\n            });\r\n        }\r\n        return monthObject;\r\n    }\r\n\r\n    getDaysInMonth(month) {\r\n        //IF we dont have a month as a function parameter, we return days in the current month\r\n        if (month != null) {\r\n            if (month === -1)\r\n                month = 11;\r\n            return new Date(this.state.year, month + 1, 0).getDate();\r\n        }\r\n        return new Date(this.state.year, this.state.month + 1, 0).getDate();\r\n    }\r\n\r\n    getFirstDayOfMonth() {\r\n        return new Date(this.state.year, this.state.month, 0).getDay();\r\n    }\r\n\r\n    handleDayBlockClicked(dayBlockProps) {\r\n        //Check if its a valid dayblock\r\n        if (dayBlockProps.id.startsWith(\"d-\") && dayBlockProps.className.includes(\"current-month\")) {\r\n            let date = new Date(this.state.year, this.state.month, dayBlockProps.value);\r\n            this.setState({activeDate: date});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calendar-container\">\r\n                {/*The left part (calendar itself)*/}\r\n                <div className=\"body-container\">\r\n                    <div className=\"calendar-header\">\r\n                        <div className=\"year\">\r\n                            <button onClick={() => this.updateYear(-1)}/>\r\n                            <p className={this.state.animation.moveYear}>{this.state.year}</p>\r\n                            <button onClick={() => this.updateYear(1)}/>\r\n                        </div>\r\n                        <div className=\"month\">\r\n                            <button onClick={() => this.updateMonth(-1)}/>\r\n                            <p className={this.state.animation.moveMonth}>{MONTHS_MAP[this.state.month]}</p>\r\n                            <button onClick={() => this.updateMonth(1)}/>\r\n                        </div>\r\n                    </div>\r\n                    <CalendarBody clickHandler={this.handleDayBlockClicked.bind(this)}\r\n                                  currentMonth={this.createCurrentMonthObject()}/>\r\n                </div>\r\n                {/*The right part of the calendar*/}\r\n                <CalendarStatusBar\r\n                    openMessageBox={this.props.openMessageBox}\r\n                    activeDate={this.state.activeDate}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Calendar;","//DISCLAIMER I did not make this, credits go to jasonwatmore\r\n//http://jasonwatmore.com/post/2017/03/14/react-pagination-example-with-logic-like-google\r\n//I made some custom functionality to fit my needs\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./util-styles/PaginationStyle.css\";\r\nimport {library} from '@fortawesome/fontawesome-svg-core'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faAngleLeft, faAngleRight} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faAngleLeft, faAngleRight);\r\n\r\nconst propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    initialPage: PropTypes.number,\r\n    pageSize: PropTypes.number\r\n};\r\n\r\nconst defaultProps = {\r\n    initialPage: 1,\r\n    pageSize: 10\r\n};\r\n\r\nclass Pagination extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {pager: {}};\r\n    }\r\n\r\n    componentWillMount() {\r\n        // set currentNotesPage if items array isn't empty\r\n        if (this.props.items && this.props.items.length) {\r\n            this.resetPage();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // reset currentNotesPage if items array has changed\r\n        if (this.props.items !== prevProps.items) {\r\n            this.resetPage();\r\n        }\r\n    }\r\n\r\n    resetPage() {\r\n        this.setPage(this.props.initialPage);\r\n    }\r\n\r\n    setPage(page) {\r\n        var {items, pageSize} = this.props;\r\n        var pager = this.state.pager;\r\n\r\n        if (page < 1 || page > pager.totalPages) {\r\n            return;\r\n        }\r\n        let pageDirection;\r\n        if(this.state.pager.currentPage < page){\r\n            pageDirection = \"animate-left\";\r\n        } else if(this.state.pager.currentPage > page) {\r\n            pageDirection = \"animate-right\";\r\n        } else {\r\n            pageDirection = \"\";\r\n        }\r\n        // get new pager object for specified currentNotesPage\r\n        pager = this.getPager(items.length, page, pageSize);\r\n        // get new currentNotesPage of items from items array\r\n        var pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\r\n\r\n        // update state\r\n        this.setState({pager: pager});\r\n        // call change currentNotesPage function in parent component\r\n        this.props.onChangePage(pageOfItems, pageDirection);\r\n    }\r\n\r\n    getPager(totalItems, currentPage, pageSize) {\r\n        // default to first currentNotesPage\r\n        currentPage = currentPage || 1;\r\n\r\n        // default currentNotesPage size is 10\r\n        pageSize = pageSize || 10;\r\n\r\n        // calculate total pages\r\n        var totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        var startPage, endPage;\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        var startIndex = (currentPage - 1) * pageSize;\r\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n\r\n    render() {\r\n        var pager = this.state.pager;\r\n        if (!pager.pages || pager.pages.length <= 1) {\r\n            // don't display pager if there is only 1 currentNotesPage\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"pagination\">\r\n                <div className=\"pag-wrapper\">\r\n                    {/*<li className={pager.currentPage === 1 ? 'disabled' : ''}>*/}\r\n                    {/*<a onClick={() => this.setPage(1)}>First</a>*/}\r\n                    {/*</li>*/}\r\n                    <li className={pager.currentPage === 1 ? 'disabled' : ''}>\r\n                        <a href={\"#\"} onClick={() => this.setPage(pager.currentPage - 1)}><FontAwesomeIcon icon=\"angle-left\"/></a>\r\n                    </li>\r\n                    {pager.pages.map((page, index) =>\r\n                        <li key={index} className={pager.currentPage === page ? 'active' : ''}>\r\n                            <a href={\"#\"} onClick={() => this.setPage(page)}>{page}</a>\r\n                        </li>\r\n                    )}\r\n                    <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\r\n                        <a href={\"#\"} onClick={() => this.setPage(pager.currentPage + 1)}><FontAwesomeIcon icon=\"angle-right\"/></a>\r\n                    </li>\r\n                    {/*<li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>*/}\r\n                    {/*<a onClick={() => this.setPage(pager.totalPages)}>Last</a>*/}\r\n                    {/*</li>*/}\r\n                </div>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nPagination.propTypes = propTypes;\r\nPagination.defaultProps = defaultProps;\r\nexport default Pagination;","import BaseRepository from \"./BaseRepository\";\r\n\r\n\r\nexport default {\r\n    getNotesForUserByDay: function (userId, dayId, headers) {\r\n        let query = `?query={\"dayId\":\"${dayId}\", \"_acl.creator\":\"${userId}\"}`;\r\n        return BaseRepository.getFrom(\"notes\", headers, query);\r\n    },\r\n    addNote: function (data, headers) {\r\n        return BaseRepository.addTo(\"notes\", headers, data)\r\n    },\r\n    deleteNote(noteId, headers) {\r\n        return BaseRepository.deleteFromById(\"notes\", noteId, headers);\r\n    }\r\n}","import NotesRepository from \"../repositories/NotesRepository\";\r\nimport UtilService from \"./UtilService\";\r\n\r\nexport default class NotesService {\r\n\r\n    static addNote(noteData, user)  {\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        return new Promise((resolve, reject) => {\r\n            NotesRepository.addNote(noteData, headers).then((successResponse) => {\r\n                let data = {\r\n                    dayId: successResponse.dayId,\r\n                    noteId: successResponse._id\r\n                };\r\n                resolve();\r\n            },(failedResponse) => {\r\n                reject(failedResponse);\r\n                console.log(failedResponse)\r\n            });\r\n        });\r\n    }\r\n\r\n    static getNotesForUserById(userId, dateId, authToken) {\r\n        let header =  UtilService.generateHeaders(authToken);\r\n        return new Promise((resolve, reject) => {\r\n            NotesRepository.getNotesForUserByDay(userId, dateId, header).then((successMessage) => {\r\n                resolve(successMessage)\r\n            }, (errorMessage) => {\r\n                reject(errorMessage);\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    static deleteNote(noteId, user) {\r\n        let headers = UtilService.generateHeaders(user.authToken);\r\n        return new Promise((resolve, reject) => {\r\n           NotesRepository.deleteNote(noteId, headers).then((success) => {\r\n               resolve(success);\r\n           },(failResp) => {\r\n               reject(failResp)\r\n            })\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from \"react-dom\";\r\nimport '../component-styles/NotesView.css';\r\nimport Pagination from \"../components/utils/util-components/Pagination\";\r\nimport Loading from \"../components/utils/util-components/Loading\";\r\nimport Utils from \"../components/utils/UtilFunctions\";\r\nimport NotesService from \"../services/NotesService\";\r\nimport ToolTip from \"../components/utils/util-components/ToolTip\";\r\nimport Confirmation from \"../components/utils/util-components/Confirmation\";\r\n\r\nconst propTypes = {\r\n    loggedInUser: PropTypes.object.Required /*null or undifined if not present*/,\r\n    isLoggedIn: PropTypes.bool.Required,\r\n    activeDate: PropTypes.instanceOf(Date).Required,\r\n    isThisViewActive: PropTypes.bool /*this is needed only when used in a FlipCardContainer component*/\r\n};\r\n\r\nclass  NotesController extends React.Component {\r\n\r\n    scrollPosition = 0;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loggedInUser: this.props.loggedInUser,\r\n            isLoggedIn: this.props.isLoggedIn,\r\n            notes: null,\r\n            currentNotesPage: [],\r\n            notesAnimation: \"\",\r\n            modalData: {\r\n                isOpen: false,\r\n                idToDelete: \"\",\r\n                animateClass: \"\"\r\n            }\r\n        };\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.isLoggedIn) {\r\n            this.updateNotes(this.props.loggedInUser, this.props.activeDate)\r\n        }\r\n    }\r\n\r\n    //For backend purpose\r\n    componentWillUpdate(nextProps) {\r\n        //For the scroll on top issue\r\n        const element = ReactDOM.findDOMNode(this);\r\n        if (element != null) {\r\n            this.scrollPosition = window.scrollY\r\n        }\r\n        if (!nextProps.isLoggedIn || !nextProps.activeDate)\r\n            return;\r\n\r\n        if (nextProps.isLoggedIn && !this.state.isLoggedIn) {\r\n            this.setState({\r\n                isLoggedIn: true,\r\n                loggedInUser: nextProps.loggedInUser\r\n            });\r\n            this.updateNotes(nextProps.loggedInUser, nextProps.activeDate)\r\n        }\r\n\r\n        if (!this.state.isLoggedIn &&\r\n            (nextProps.isLoggedIn && nextProps.loggedInUser)) {\r\n            this.updateNotes(nextProps.loggedInUser, nextProps.activeDate);\r\n        }\r\n        //IF WE HAVE CHANGED THE DAY\r\n        //fetch new notes\r\n        if (!Utils.compareDates(this.props.activeDate, nextProps.activeDate)) {\r\n            this.updateNotes(nextProps.loggedInUser, nextProps.activeDate)\r\n        }\r\n\r\n        //IF VIEW IS ABOUT TO BE ACTIVE\r\n        if (nextProps.isThisViewActive && !this.props.isThisViewActive) {\r\n            this.setState({isLoading: true});\r\n            this.fetchNotes(nextProps.loggedInUser, nextProps.activeDate).then((notesArr) => {\r\n                //if notes are the same return\r\n                this.setState({isLoading: false});\r\n                if (notesArr.equals(this.state.notes))\r\n                    return;\r\n                this.setState({\r\n                    notes: notesArr\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    //FOR ANIMATION PURPOSE ONLY\r\n    componentDidUpdate() {\r\n        //CURRENT INADEQUATE SOLUTION FOR SCROLL POSITION CHANGE ON PAGE CHANGE AND MODAL OPEN\r\n        const element = ReactDOM.findDOMNode(this);\r\n        if (element != null) {\r\n            setTimeout(() => {\r\n                window.scrollTo(0, this.scrollPosition)\r\n            }, 1);\r\n\r\n        }\r\n\r\n        const animationDuration = 550;\r\n        if (this.state.notesAnimation !== \"\") {\r\n            setTimeout(() => this.setState({notesAnimation: \"\"}), animationDuration)\r\n        }\r\n    }\r\n\r\n    //\r\n    //DATABASE METHODS\r\n    //\r\n\r\n    deleteNote() {\r\n        let id = this.state.modalData.idToDelete;\r\n        let showMsgBoxHandler = this.showMessageBox.bind(this);\r\n        this.setState({isLoading: true});\r\n        NotesService.deleteNote(id, this.state.loggedInUser).then((successResponse) => {\r\n            showMsgBoxHandler(\"success\", \"Deleted note\");\r\n            this.fetchNotes(this.props.loggedInUser, this.props.activeDate).then((notes) => this.setState({\r\n                notes: notes,\r\n                isLoading: false\r\n            }));\r\n            this.closeModal();\r\n        }, (failResponse) => {\r\n            showMsgBoxHandler(\"error\", \"Failed to delete note\");\r\n        });\r\n\r\n    }\r\n\r\n    fetchNotes(user, date) {\r\n        if (user)\r\n            return NotesService.getNotesForUserById(\r\n                user.id,\r\n                Utils.extractIdByDate(date),\r\n                user.authToken);\r\n    }\r\n\r\n    updateNotes(user, date) {\r\n        this.setState({isLoading: true});\r\n        this.fetchNotes(user, date).then((notes) => {\r\n            this.setState({\r\n                notes: notes,\r\n                isLoading: false\r\n            })\r\n        })\r\n    }\r\n\r\n    //\r\n    //UTIL METHODS\r\n    //\r\n\r\n    showMessageBox(type, message) {\r\n        this.props.openMessageBox(type, message);\r\n    }\r\n\r\n    openModal(id) {\r\n        let modalState = this.state.modalData;\r\n        modalState.isOpen = true;\r\n        modalState.idToDelete = id;\r\n        modalState.animateClass = \"show\";\r\n        this.setState({modalData: modalState});\r\n    }\r\n\r\n    closeModal() {\r\n        let modalState = this.state.modalData;\r\n        modalState.isOpen = false;\r\n        modalState.animateClass = \"hide\";\r\n        this.setState({modalData: modalState});\r\n    }\r\n\r\n    //PAGINATION PAGE CHANGE\r\n    handlePageChange(currentPage, pageDirection) {\r\n        this.setState({\r\n            currentNotesPage: currentPage,\r\n            notesAnimation: pageDirection\r\n        });\r\n    }\r\n\r\n\r\n    //\r\n    //RENDER METHODS\r\n    //\r\n\r\n    renderNotes() {\r\n        if (!this.state.isLoggedIn)\r\n            return \"Login to add some notes\";\r\n        if (this.state.notes !== null) {\r\n            if (this.state.notes.length === 0) {\r\n                return \"No notes for this day yet\";\r\n            }\r\n            else {\r\n                let div = [];\r\n\r\n                div.push(\r\n                    <Pagination\r\n                        key=\"pag-notes\"\r\n                        items={this.state.notes}\r\n                        onChangePage={this.handlePageChange}\r\n                        pageSize={5}/>\r\n                );\r\n\r\n                let animationDiv = [\r\n                    <div key=\"note-anim-div\"\r\n                         className={\"note-anim \" + this.state.notesAnimation}>\r\n                        {this.state.currentNotesPage.map((note) =>\r\n                            <li key={note._id}>{note.noteContent}\r\n                                <span key=\"dada\" className=\"delete-note-btn tooltip-activator\"\r\n                                      onClick={() => this.openModal(note._id)}>\r\n                                         <ToolTip tooltip={\"Delete this note\"}/>\r\n                                         <a href=\"#\">X</a>\r\n                                </span>\r\n                            </li>\r\n                        )}\r\n                    </div>];\r\n                div.push(animationDiv);\r\n                return div;\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let loading = this.state.isLoading ? <Loading/> : \"\";\r\n        let confirmDialog = this.state.modalData.isOpen ?  <Confirmation\r\n            isOpen={this.state.modalData.isOpen}\r\n            closeFunction={() => this.closeModal()}\r\n            confirmFunction={() => this.deleteNote()}\r\n            confirmationMessage={\"This will delete the note\"}\r\n        >\r\n        </Confirmation>\r\n            :\r\n            \"\";\r\n        return (\r\n            <ul className=\"notes-list\">\r\n                {loading}\r\n                {this.renderNotes()}\r\n                {confirmDialog}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nNotesController.propTypes = propTypes;\r\nexport default NotesController;\r\n","import React from 'react';\r\nimport '../../component-styles/my-days/CalendarDayHeader.css';\r\nimport UtilFunctions from \"../utils/UtilFunctions\";\r\nimport {MONTHS_MAP, DAYS_MAP} from \"../utils/constants/CalendarConstants\";\r\n\r\nconst CalendarDayHeader = (props) => {\r\n\r\n    function getDate() {\r\n        return UtilFunctions.extractDateById(props.currentDateId);\r\n    }\r\n\r\n    function getMonth() {\r\n        return props.isStretched ?\r\n            MONTHS_MAP[getDate().getMonth()]\r\n            :\r\n            MONTHS_MAP[getDate().getMonth()].toString().substr(0, 3);\r\n    }\r\n\r\n    function getDayOfWeek() {\r\n        return DAYS_MAP[getDate().getDay()];\r\n    }\r\n\r\n    function renderDayYear() {\r\n        let yearMonthContainer = props.isStretched ?\r\n            <React.Fragment>\r\n                <div className=\"calendar-day-month\">{getMonth()}</div>\r\n                <div className=\"calendar-day-year\">{getDate().getFullYear()}</div>\r\n            </React.Fragment>\r\n            :\r\n            <div className=\"calendar-day-year-month-container\">\r\n                <span className=\"calendar-day-month\">{getMonth()}</span>\r\n                <span className=\"calendar-day-year\">{getDate().getFullYear()}</span>\r\n            </div>\r\n\r\n        return yearMonthContainer;\r\n    }\r\n\r\n    return (\r\n        <div className={`calendar-header ${props.isStretched ? \"stretched\" : \"\"}`}>\r\n            {renderDayYear()}\r\n            <div className=\"calendar-day-number\">{getDate().getDate()}</div>\r\n            <div className=\"calendar-day-day-of-week\">{getDayOfWeek()}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarDayHeader;","import React from 'react';\r\nimport '../../component-styles/CalendarDayBodyNavigation.css';\r\n\r\nclass CalendarDayBodyNavigation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeLinks: {\r\n                isNotesActive: true,\r\n                isOnThisDayActive: false,\r\n                isTodoListActive: false\r\n            }\r\n        };\r\n        this.handleLinkClick = this.handleLinkClick.bind(this)\r\n    }\r\n\r\n    handleLinkClick(e) {\r\n        let activeLinks = {};\r\n        for (let [activeLink] of Object.entries(this.state.activeLinks)) {\r\n            activeLinks[activeLink] = activeLink.toLowerCase().includes(e.target.name.toLowerCase());\r\n        }\r\n        this.props.linkChangeHandler(activeLinks);\r\n        this.setState({activeLinks: activeLinks})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`calendar-day-body-navigation `}>\r\n                <ul>\r\n                    <li className={this.state.activeLinks.isNotesActive ? \"active\" : \"\"}>\r\n                        <a\r\n                           onClick={this.handleLinkClick}\r\n                           name=\"notes\"\r\n                           href=\"#\">\r\n                        Notes\r\n                    </a></li>\r\n                    <li className={this.state.activeLinks.isTodoListActive ? \"active\" : \"\"}>\r\n                        <a\r\n                           onClick={this.handleLinkClick}\r\n                           name=\"todolist\"\r\n                           href=\"#\">\r\n                        TODO List\r\n                    </a></li>\r\n                    <li className={this.state.activeLinks.isOnThisDayActive ? \"active\" : \"\"}>\r\n                        <a\r\n                           onClick={this.handleLinkClick}\r\n                           name=\"onthisday\"\r\n                           href=\"#\">\r\n                        On this day\r\n                    </a></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarDayBodyNavigation;","import Requester from \"../repositories/AuthenticationRepository\";\r\n\r\nexport default class AuthenticationService {\r\n\r\n    static loginUser(userObject) {\r\n        let setTokenFunction = AuthenticationService.setToken;\r\n        return new Promise(function (resolve, reject) {\r\n            Requester.login(userObject).then((succResp) => {\r\n                const authToken = succResp._kmd.authtoken;\r\n                setTokenFunction(authToken);\r\n                resolve(authToken);\r\n            }, (failResp) => {\r\n                reject(failResp);\r\n            });\r\n        })\r\n    }\r\n\r\n    static isLoggedIn() {\r\n        return !!AuthenticationService.getToken();\r\n    }\r\n\r\n    static logout() {\r\n        return new Promise((resolve, error) => {\r\n            let authorizationHeader = {Authorization: \"Kinvey \" + AuthenticationService.getToken()};\r\n            Requester.logout(authorizationHeader).then((success) => {\r\n                localStorage.removeItem('user_token');\r\n                resolve(success);\r\n            }, (errMsg) => {\r\n                error(errMsg);\r\n            })\r\n        })\r\n    }\r\n\r\n     static getCurrentUserDTO() {\r\n        if(!AuthenticationService.isLoggedIn())\r\n            return;\r\n        return new Promise((resolve, reject) => {\r\n            Requester.getUser(AuthenticationService.getToken()).then((succ)=> {\r\n                let user = {};\r\n                user.id = succ._id;\r\n                user.authToken = succ._kmd.authtoken;\r\n                user.authToken = AuthenticationService.getToken();\r\n                resolve(user);\r\n            },(err) => {\r\n                console.error(err);\r\n                reject(err);\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    static setToken(userToken) {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('user_token', userToken)\r\n    }\r\n\r\n    static getToken() {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem('user_token')\r\n    }\r\n\r\n}","import React from 'react';\r\nimport '../../component-styles/AddNoteFormStyle.css';\r\nimport Utils from '../utils/UtilFunctions';\r\nimport Loading from \"../utils/util-components/Loading\";\r\nimport NotesService from \"../../services/NotesService\";\r\nimport AuthenticationService from \"../../services/AuthenticationService\";\r\n\r\nclass AddNotesForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            note: \"\",\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    showMessageBox(type, message) {\r\n       this.props.openMessageBox(type, message);\r\n    }\r\n\r\n\r\n    emptyTextArea() {\r\n        this.setState({note: \"\"});\r\n    }\r\n\r\n    stopLoading() {\r\n        this.setState({isLoading: false});\r\n    }\r\n\r\n    updateNote(evt) {\r\n        this.setState({note: evt.target.value})\r\n    }\r\n\r\n    submitNote(e) {\r\n        e.preventDefault();\r\n        //if its empty text ignore\r\n        if (this.state.note === \"\")\r\n            return;\r\n\r\n        let data = {};\r\n        data.dayId = Utils.extractIdByDate(this.props.activeDate);\r\n        data.noteContent = this.state.note;\r\n        let emptyTextArea = this.emptyTextArea.bind(this);\r\n        let stopLoading = this.stopLoading.bind(this);\r\n        let openMsgBox = this.showMessageBox.bind(this);\r\n        this.setState({isLoading: true});\r\n        let loggedInUser;\r\n        AuthenticationService.getCurrentUserDTO().then((user) => {\r\n            loggedInUser = user;\r\n            NotesService.addNote(data, loggedInUser).then((successResponse) => {\r\n                openMsgBox(\"success\", \"Added a note\");\r\n                emptyTextArea();\r\n                stopLoading();\r\n            }, (failResponse) => {\r\n                openMsgBox(\"error\", \"Could not add note\");\r\n                stopLoading();\r\n            });\r\n        }, (failed) => {\r\n            openMsgBox(\"error\", \"You are not logged in\");\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        let renderValue;\r\n        if (this.state.isLoading) {\r\n            renderValue = <Loading/>\r\n        } else {\r\n            renderValue = <div className=\"form-group\">\r\n                <textarea value={this.state.note} rows=\"3\" className=\"form-control\"\r\n                          onChange={(evt) => this.updateNote(evt)}>\r\n                </textarea>\r\n            </div>\r\n        }\r\n        return (\r\n            <form className=\"add-note-form\">\r\n                {renderValue}\r\n                <button onClick={(e) => this.submitNote(e)} className=\"btn btn-primary\">Add note</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddNotesForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../../component-styles/DayBlockStyle.css';\r\n\r\nconst propTypes = {\r\n    isActive: PropTypes.bool.Required,\r\n    switchView: PropTypes.func.Required,\r\n    messagesArray: PropTypes.array.Required\r\n};\r\nclass FlipSideButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFlipped: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    switchView() {\r\n        this.setState({isFlipped: !this.state.isFlipped});\r\n        this.props.switchView();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <button\r\n                className={`switch-view ${this.props.isActive ? \" enabled\" : \" disabled\"}`}\r\n                onClick={() => this.switchView()}>\r\n                {this.state.isFlipped ? this.props.messagesArray[0] : this.props.messagesArray[1]}\r\n            </button>\r\n\r\n        )\r\n    }\r\n}\r\nFlipSideButton.propTypes = propTypes;\r\nexport default FlipSideButton;","import React from 'react';\r\nimport '../../../component-styles/DayBlockStyle.css';\r\nimport NotesController from \"../../../controllers/NotesController\";\r\nimport AddNotesForm from \"../../forms/AddNotesForm\";\r\nimport Loading from \"../../utils/util-components/Loading\";\r\nimport {AuthenticationContext} from \"../../ContextHolder\";\r\nimport FlipSideButton from \"../../utils/util-components/FlipSideButton\";\r\nimport MyDaysController from \"../../../controllers/MyDaysController\";\r\n\r\nclass FlipCardContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            savedDayId: null,\r\n            isFlipped: false,\r\n            isLoading: false,\r\n            isDaySaved: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    switchView() {\r\n        this.setState({isFlipped: !this.state.isFlipped});\r\n    }\r\n\r\n    render() {\r\n        let loading = this.state.isLoading ? <Loading/> : \"\";\r\n        return (\r\n            <AuthenticationContext.Consumer>\r\n                {(context) =>\r\n                    <div className=\"notes-container\">\r\n                        {loading}\r\n                        <FlipSideButton\r\n                            isActive={context.isLoggedIn}\r\n                            switchView={() => this.switchView()}\r\n                            messagesArray={[\"Go back to notes\", \"Add notes for this day\"]}\r\n                        />\r\n                        <div\r\n                            className={`view-note-container\r\n                        ${this.state.isFlipped ? \"flipped\" : \"\"}`}>\r\n                            <div className=\"notes-view\">\r\n                                <NotesController\r\n                                    isLoggedIn={context.isLoggedIn}\r\n                                    loggedInUser={context.loggedInUser}\r\n                                    openMessageBox={this.props.openMessageBox}\r\n                                    activeDate={this.props.activeDate}\r\n                                    isThisViewActive={!this.state.isFlipped}/>\r\n                            </div>\r\n                            <div className=\"save-note back\">\r\n                                <AddNotesForm\r\n                                    openMessageBox={this.props.openMessageBox}\r\n                                    activeDate={this.props.activeDate}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </AuthenticationContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FlipCardContainer;","import React from 'react';\r\nimport '../../component-styles/my-days/CalendarDayBody.css';\r\nimport CalendarDayBodyNavigation from \"./CalendarDayBodyNavigation\";\r\nimport UtilFunctions from \"../utils/UtilFunctions\";\r\nimport FlipCardContainer from \"../calendar/main-view/FlipCardContainer\";\r\nimport ToDoListController from \"../../controllers/ToDoListController\";\r\n\r\n\r\nclass CalendarDayBody extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeLinks: {\r\n                isNotesActive: true,\r\n                isOnThisDayActive: false,\r\n                isTodoListActive: false\r\n            }\r\n        };\r\n        this.linkChangeHandler = this.linkChangeHandler.bind(this);\r\n    }\r\n\r\n    linkChangeHandler(activeLinks) {\r\n        this.setState({activeLinks: activeLinks});\r\n    }\r\n\r\n    renderView() {\r\n        let view = [];\r\n        if (this.state.activeLinks.isNotesActive) {\r\n            view = <FlipCardContainer openMessageBox={this.props.openMessageBox}\r\n                                      activeDate={UtilFunctions.extractDateById(this.props.currentDateId)}\r\n            />\r\n        } else if (this.state.activeLinks.isOnThisDayActive) {\r\n            // TODO:\r\n        } else if (this.state.activeLinks.isTodoListActive) {\r\n            view = <ToDoListController\r\n                currentDateId={this.props.currentDateId}\r\n                openMessageBox={this.props.openMessageBox}/>\r\n        }\r\n        return view;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`calendar-day-body`}>\r\n                <CalendarDayBodyNavigation\r\n                    linkChangeHandler={this.linkChangeHandler}/>\r\n                <div className=\"view-container\">\r\n                    {this.renderView()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarDayBody;","import React from 'react';\r\nimport '../../component-styles/my-days/CalendarDay.css';\r\nimport CalendarDayHeader from \"./CalendarDayHeader\";\r\nimport CalendarDayBody from \"./CalendarDayBody\";\r\nimport ModalBox from \"../utils/util-components/ModalBox\";\r\nimport MyDaysController from \"../../controllers/MyDaysController\";\r\nimport UtilFunctions from \"../utils/UtilFunctions\";\r\n\r\nconst modalCustomStyles = {\r\n    width: \"80%\",\r\n    transform: \"none\",\r\n    background: \"#EEE\",\r\n    \"text-shadow\": \"none\",\r\n    \"box-shadow\": \"none\",\r\n    border: \"3px solid black\"\r\n};\r\n\r\nclass CalendarDay extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isStretched: false\r\n        }\r\n    }\r\n\r\n    handleDayStretch() {\r\n        this.setState({isStretched: !this.state.isStretched});\r\n    }\r\n\r\n    renderModal() {\r\n        let div = [];\r\n        if (this.state.isStretched)\r\n            div.push(\r\n                <ModalBox\r\n                    customStyle={modalCustomStyles}\r\n                    isOpen={this.state.isStretched}\r\n                    closeFunction={() => this.handleDayStretch()}>\r\n                    <div className={`calendar-day stretched`}>\r\n                        <CalendarDayHeader\r\n                            isStretched={true}\r\n                            currentDateId={this.props.currentDateId}/>\r\n                        <CalendarDayBody\r\n                            openMessageBox={this.props.openMessageBox}\r\n                            currentDateId={this.props.currentDateId}\r\n                        />\r\n                    </div>\r\n                </ModalBox>\r\n            );\r\n        return div\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"outer-wrapper\">\r\n                {this.renderModal()}\r\n                <div className={`calendar-day`}>\r\n                    <div onClick={() => this.handleDayStretch()}>\r\n                        <CalendarDayHeader\r\n                            currentDateId={this.props.currentDateId}/>\r\n                    </div>\r\n                    <MyDaysController\r\n                        handleClickFunction={this.props.shouldCheckIfDaysAreChanged}\r\n                        activeDate={UtilFunctions.extractDateById(this.props.currentDateId)}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarDay;","import React from 'react';\r\nimport CalendarDay from \"./CalendarDay\";\r\nimport '../../component-styles/my-days/MyDaysContainer.css';\r\nimport Loading from \"../utils/util-components/Loading\";\r\nimport MyDaysPagination from \"./MyDaysPagination\";\r\nimport MyDaysService from \"../../services/MyDaysService\";\r\n\r\n\r\nclass MyDaysContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentUser: this.props.loggedInUser,\r\n            totalItems: 0,\r\n            pageSize: 3,\r\n            currentPage: 1,\r\n            currentPageItems: [],\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.isLoggedIn && props.currentUser) {\r\n            return {currentUser: props.currentUser}\r\n        }\r\n        return {\r\n            currentUser: undefined,\r\n            totalItems: 0,\r\n            currentPageItems: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.currentPageItems.length === 0 && this.state.currentUser)\r\n            this.fetchDays();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.isLoading)\r\n            return;\r\n        if (!this.props.isLoggedIn || !this.state.currentUser)\r\n            return;\r\n\r\n        if (this.state.totalItems === 0 || this.state.currentPageItems.length === 0)\r\n            this.fetchDays();\r\n    }\r\n\r\n    fetchDays() {\r\n        this.setState({isLoading: true});\r\n        MyDaysService.getDaysCount(this.state.currentUser).then((resp) => {\r\n            MyDaysService.getDaysPaged(this.state.pageSize, this.state.currentPage, this.state.currentUser)\r\n                .then((resp) => {\r\n                    this.setState({\r\n                        currentPageItems: resp,\r\n                        isLoading: false\r\n                    });\r\n                });\r\n            this.setState({totalItems: resp.count});\r\n        });\r\n    }\r\n\r\n    handlePageChange(pageNumber) {\r\n        this.setState({isLoading: true});\r\n        MyDaysService.getDaysPaged(this.state.pageSize, pageNumber, this.state.currentUser)\r\n            .then((pageOfItems) => {\r\n                this.setState({\r\n                    currentPageItems: pageOfItems,\r\n                    isLoading: false,\r\n                    currentPage: pageNumber\r\n                });\r\n            });\r\n    }\r\n\r\n    renderDays() {\r\n        if (!this.state.currentUser)\r\n            return <div>\"Please log in to view favorite days\"</div>;\r\n        let output = [];\r\n        this.state.currentPageItems.map((item) => {\r\n            output.push(<CalendarDay\r\n                key={item._id}\r\n                openMessageBox={this.props.openMessageBox}\r\n                currentDateId={item.dayId}\r\n                shouldCheckIfDaysAreChanged={() => this.fetchDays()}/>)\r\n        });\r\n\r\n        return output\r\n\r\n    }\r\n\r\n    render() {\r\n        let loading = this.state.isLoading ? <Loading/> : \"\";\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"top-div\">\r\n                    <MyDaysPagination\r\n                        totalItems={this.state.totalItems}\r\n                        itemsPerPage={this.state.pageSize}\r\n                        currentPage={this.state.currentPage}\r\n                        handlePageChange={this.handlePageChange.bind(this)}/>\r\n                </div>\r\n                <div className=\"my-days-container\">\r\n                    {loading}\r\n                    {this.renderDays()}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyDaysContainer;\r\n","import React, {Component} from 'react';\r\nimport CalendarNavigationBar from \"./calendar/main-view/CalendarNavigationBar\";\r\nimport Calendar from \"./calendar/main-view/Calendar\";\r\nimport '../component-styles/App.css';\r\nimport {library} from '@fortawesome/fontawesome-svg-core';\r\nimport {faAngleDoubleUp, faCheck, faCheckCircle, faTimes, faTimesCircle} from '@fortawesome/free-solid-svg-icons';\r\nimport {Route} from \"react-router-dom\";\r\nimport NotesController from \"../controllers/NotesController\";\r\nimport MyDaysContainer from \"./my-days/MyDaysContainer\";\r\nimport {AuthenticationContext} from \"./ContextHolder\";\r\n\r\nlibrary.add(faCheck, faTimes, faCheckCircle, faTimesCircle, faAngleDoubleUp);\r\n\r\nclass CalendarApp extends Component {\r\n\r\n    componentWillMount() {\r\n        this.bindCustomArrayEqualsMethod();\r\n    }\r\n\r\n    bindCustomArrayEqualsMethod() {\r\n        Array.prototype.equals = function (array) {\r\n            // if the other array is a falsy value, return\r\n            if (!array) {\r\n                return false;\r\n            }\r\n\r\n\r\n            // compare lengths - can save a lot of time\r\n            if (this.length !== array.length) {\r\n                return false;\r\n            }\r\n\r\n\r\n            for (var i = 0, l = this.length; i < l; i++) {\r\n                // Check if we have nested arrays\r\n                if (this[i] instanceof Array && array[i] instanceof Array) {\r\n                    // recurse into the nested arrays\r\n                    if (!this[i].equals(array[i])) {\r\n\r\n                        return false;\r\n                    }\r\n                }\r\n                else if (this[i] === array[i]) {\r\n                    // Warning - two different object instances will never be equal: {x:20} != {x:20}\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        // Hide method from for-in loops\r\n        Object.defineProperty(Array.prototype, \"equals\", {enumerable: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"calendar-app-container\">\r\n\r\n                <AuthenticationContext.Consumer>\r\n                    {(context) =>\r\n                        <CalendarNavigationBar\r\n                            isLoggedIn={context.isLoggedIn}/>\r\n                    }\r\n                </AuthenticationContext.Consumer>\r\n                <Route exact path={\"/\"}\r\n                       render={(props) =>\r\n                           <Calendar\r\n                               openMessageBox={this.props.openMessageBox}/>\r\n                       }\r\n                />\r\n                <Route path={\"/calendar\"}\r\n                       render={(props) =>\r\n                           <Calendar\r\n                               openMessageBox={this.props.openMessageBox}/>\r\n                       }\r\n                />\r\n                <Route\r\n                    exact path={\"/my_notes\"}\r\n                    render={(props) =>\r\n                        <AuthenticationContext.Consumer>\r\n                            {(context) =>\r\n                                <NotesController\r\n                                    openMessageBox={this.props.openMessageBox}\r\n                                    loggedInUser={context.loggedInUser}\r\n                                    isLoggedIn={context.isLoggedIn}\r\n                                    activeDate={new Date()}/>}\r\n                        </AuthenticationContext.Consumer>\r\n                    }/>\r\n                <Route\r\n                    exact path={\"/my_days\"}\r\n                    render={(props) =>\r\n                        <AuthenticationContext.Consumer>\r\n                            {(context) =>\r\n                                <MyDaysContainer\r\n                                    isLoggedIn={context.isLoggedIn}\r\n                                    currentUser={context.loggedInUser}\r\n                                    openMessageBox={this.props.openMessageBox}/>\r\n                            }\r\n                        </AuthenticationContext.Consumer>\r\n                    }\r\n                />\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalendarApp;\r\n","export default {\r\n    animateElement: function (node, animationClass, animationDuration) {\r\n        node.classList.add(animationClass);\r\n        setTimeout(() => {\r\n            node.classList.remove(\"shake-animate\");\r\n        }, animationDuration);\r\n    }\r\n};\r\n","import AuthenticationRepository from \"../repositories/AuthenticationRepository\";\r\n\r\nexport default class RegisterService {\r\n\r\n    static isUsernameAlreadyTaken(username) {\r\n        let data = {username: username};\r\n        return new Promise((resolve, reject) => {\r\n            AuthenticationRepository.checkIfUsernameExists(data).then((successResponse) => {\r\n                resolve(successResponse);\r\n            }, (errorResponse) => {\r\n                reject(errorResponse);\r\n            })\r\n        });\r\n    }\r\n\r\n    static registerUser(userObject) {\r\n        return new Promise((resolve, reject) => {\r\n            AuthenticationRepository.register(userObject).then((successResponse) => {\r\n                resolve(successResponse);\r\n            }, (errorResponse) => {\r\n                reject(errorResponse);\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport Loading from \"../utils/util-components/Loading\";\r\nimport '../../component-styles/AuthenticationFormsStyle.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport AnimationUtils from \"../utils/AnimationUtils\";\r\nimport RegistrationService from \"../../services/RegisterService\";\r\n\r\nclass RegisterForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            registerUsername: \"\",\r\n            registerEmail: \"\",\r\n            registerPassword: \"\",\r\n            registerConfirmPassword: \"\",\r\n            isUsernameValid: false,\r\n            isEmailValid: false,\r\n            isPasswordValid: false,\r\n            isConfirmPasswordValid: false,\r\n            warningDivClass: \"text-warning\",\r\n            checkingUser: false,\r\n            registerLoading: false,\r\n            usernameExists: true,\r\n            showUsernameTooltip: false\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.registerUser = this.registerUser.bind(this);\r\n        this.checkIfUsernameExists = this.checkIfUsernameExists.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({warningDivClass: \"text-warning\"});\r\n    }\r\n\r\n    closeForm() {\r\n        this.setState({warningDivClass: \"text-warning\"});\r\n        this.props.closeModal();\r\n    }\r\n\r\n    checkIfUsernameExists() {\r\n        if (!this.isUsernameValid(this.state.registerUsername))\r\n            return;\r\n        this.setState({checkingUser: true});\r\n        RegistrationService.isUsernameAlreadyTaken(this.state.registerUsername)\r\n            .then((response) => {\r\n                if (response.usernameExists) {\r\n                    this.setState({\r\n                        usernameExists: true,\r\n                        showUsernameTooltip: true\r\n                    });\r\n                }\r\n                else\r\n                    this.setState({\r\n                        usernameExists: false,\r\n                        showUsernameTooltip: false\r\n                    });\r\n                this.setState({checkingUser: false});\r\n            })\r\n    }\r\n\r\n    areInputsValid() {\r\n        return this.state.isUsernameValid && this.state.isEmailValid && this.state.isPasswordValid && this.state.isConfirmPasswordValid;\r\n    }\r\n    registerUser(eventFirer) {\r\n\r\n        if (this.areInputsValid() && !this.state.usernameExists) {\r\n            let registerUserObject = {\r\n                username: this.state.registerUsername,\r\n                password: this.state.registerPassword,\r\n                email: this.state.registerEmail\r\n            };\r\n            this.setState({registerLoading:true});\r\n            let closeModal = this.props.closeModal;\r\n            RegistrationService.registerUser(registerUserObject).then((resolveResponse) => {\r\n                this.setState({registerLoading:false});\r\n                this.props.openMessageBox(\"success\", \"Registered successfully\");\r\n                closeModal();\r\n            }, (rejectResponse) => {\r\n                this.props.openMessageBox(\"error\", \"Failed to register\");\r\n            })\r\n        }//If not valid change the little text to red color\r\n        else {\r\n            //Its some kind of magic\r\n            let modal = eventFirer.target.parentNode.parentNode.parentNode;\r\n            AnimationUtils.animateElement(modal, \"shake-animate\", 700);\r\n            this.setState({warningDivClass: \"text-danger\"})\r\n        }\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        let value = event.target.value;\r\n        let name = event.target.name;\r\n        if (name.toLowerCase().includes(\"password\"))\r\n            value = btoa(value);\r\n        this.setState({\r\n            [\"register\" + name]: value\r\n        });\r\n        let isValid;\r\n        switch (name) {\r\n            case \"Username\" : {\r\n                isValid = this.isUsernameValid(value);\r\n                this.setState({isUsernameValid: isValid});\r\n            }\r\n                break;\r\n            case \"Email\" : {\r\n                isValid = this.isEmailValid(value);\r\n                this.setState({isEmailValid: isValid});\r\n            }\r\n                break;\r\n            case \"Password\" : {\r\n                isValid = this.isPasswordValid(value);\r\n                this.setState({isPasswordValid: isValid});\r\n            }\r\n                break;\r\n            case \"ConfirmPassword\" : {\r\n                isValid = this.isConfirmPasswordValid(value);\r\n                this.setState({isConfirmPasswordValid: isValid});\r\n            }\r\n                break;\r\n            default : break;\r\n        }\r\n    }\r\n\r\n    isUsernameValid(username) {\r\n        return username.length >= 3 && username.length <= 16;\r\n    }\r\n\r\n    isPasswordValid(password) {\r\n        return atob(password).length >= 3;\r\n    }\r\n\r\n    isEmailValid(email) {\r\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    isConfirmPasswordValid(confirmPassword) {\r\n        return atob(this.state.registerPassword) === atob(confirmPassword);\r\n    }\r\n\r\n    render() {\r\n        let usernameLoading = this.state.checkingUser ? <Loading/> : \"\";\r\n        let registerLoading = this.state.registerLoading ? <Loading/> : \"\";\r\n        return (\r\n            <form method=\"GET\" className=\"user-form user-register-form\">\r\n                {registerLoading}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"register-username\">Username:</label>\r\n                    <div\r\n                        className={`${this.state.warningDivClass} ${this.state.isUsernameValid ? \"hide\" : \" \"}`}>Username\r\n                        can be between 3 and 16 letters long\r\n                    </div>\r\n                    <div className=\"position-relative\">\r\n                        <input\r\n                            name={\"Username\"}\r\n                            className=\"form-control\"\r\n                            id=\"register-username\"\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                            onChange={this.handleInputChange}\r\n                            onBlur={this.checkIfUsernameExists}/>\r\n                        <span className={this.state.usernameExists ? \"hide\" : \"show\"}><FontAwesomeIcon\r\n                            icon=\"check-circle\"/></span>\r\n                        <span className={this.state.usernameExists ? \"show\" : \"hide\"}>\r\n                            <span id=\"username-taken-tooltip\" className={(this.state.showUsernameTooltip) ? \"show\" : \"hide\"}>\r\n                            username taken\r\n                            </span><FontAwesomeIcon\r\n                            icon=\"times-circle\"/></span>\r\n                        {usernameLoading}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"register-password\">Email:</label>\r\n                    <div className={`${this.state.warningDivClass} ${this.state.isEmailValid ? \"hide\" : \" \"}`}>Email\r\n                        should\r\n                        be \"example@mailService.domain\"\r\n                    </div>\r\n                    <div className=\"position-relative\">\r\n                        <input\r\n                            name={\"Email\"}\r\n                            className=\"form-control\"\r\n                            id=\"register-email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            onChange={this.handleInputChange}/>\r\n                        <span className={this.state.isEmailValid ? \"show\" : \"hide\"}><FontAwesomeIcon\r\n                            icon=\"check-circle\"/></span>\r\n                        <span className={this.state.isEmailValid ? \"hide\" : \"show\"}><FontAwesomeIcon\r\n                            icon=\"times-circle\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"register-password\">Password:</label>\r\n                    <div\r\n                        className={`${this.state.warningDivClass} ${this.state.isPasswordValid ? \"hide\" : \" \"}`}>Password\r\n                        must be atleast 3 symbols\r\n                    </div>\r\n                    <div className=\"position-relative\">\r\n                        <input\r\n                            name={\"Password\"}\r\n                            className=\"form-control\"\r\n                            id=\"register-password\"\r\n                            type=\"password\"\r\n                            placeholder=\"password\"\r\n                            onChange={this.handleInputChange}/>\r\n                        <span className={this.state.isPasswordValid ? \"show\" : \"hide\"}><FontAwesomeIcon\r\n                            icon=\"check-circle\"/></span>\r\n                        <span className={this.state.isPasswordValid ? \"hide\" : \"show\"}><FontAwesomeIcon\r\n                            icon=\"times-circle\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"register-password\">Confirm Password:</label>\r\n                    <div\r\n                        className={`${this.state.warningDivClass} ${this.state.isConfirmPasswordValid ? \"hide\" : \" \"}`}>Passwords\r\n                        don't match\r\n                    </div>\r\n                    <div className=\"position-relative\">\r\n                        <input\r\n                            name={\"ConfirmPassword\"}\r\n                            className=\"form-control\"\r\n                            id=\"register-confirm-password\"\r\n                            type=\"password\"\r\n                            placeholder=\"confirm password\"\r\n                            onChange={this.handleInputChange}/>\r\n                        <span className={this.state.isConfirmPasswordValid ? \"show\" : \"hide\"}><FontAwesomeIcon\r\n                            icon=\"check-circle\"/></span>\r\n                        <span className={this.state.isConfirmPasswordValid ? \"hide\" : \"show\"}><FontAwesomeIcon\r\n                            icon=\"times-circle\"/></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group pl-1\">\r\n                    <button type=\"button\" onClick={this.registerUser} className=\"btn btn-primary\">Register</button>\r\n                    <button type=\"button\" onClick={() => this.closeForm()} className=\"btn btn-primary\">Cancel\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterForm;","import React from 'react';\r\nimport '../../component-styles/DayBlockStyle.css';\r\nimport Loading from \"../utils/util-components/Loading\";\r\nimport AnimationUtils from \"../utils/AnimationUtils\";\r\nimport AuthenticationService from \"../../services/AuthenticationService\";\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startLoading:false,\r\n            loginUsername: \"\",\r\n            loginPassword: \"\"\r\n        };\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.loginUser = this.loginUser.bind(this);\r\n\r\n    }\r\n    stopLoading() {\r\n        this.setState({startLoading:false});\r\n    }\r\n    loginUser(e) {\r\n        //get the modal to animate it\r\n        let modal = e.target.parentNode.parentNode.parentNode;\r\n\r\n        let loginUserObject = {\r\n            username: this.state.loginUsername,\r\n            password: this.state.loginPassword,\r\n        };\r\n        let closeModalFunc = this.props.closeModal;\r\n        let stopLoading = this.stopLoading.bind(this);\r\n        //This is so global object AppContainer knows when user changes\r\n        let userChangeHandler = this.props.loginHandler;\r\n        this.setState({startLoading:true});\r\n        AuthenticationService.loginUser(loginUserObject).then((authToken) => {\r\n            stopLoading();\r\n            closeModalFunc();\r\n            userChangeHandler();\r\n            this.props.openMessageBox(\"success\", \"Logged in\");\r\n        }, (errResp) => {\r\n            stopLoading();\r\n            this.props.openMessageBox(\"error\", \"Wrong account or password\");\r\n            AnimationUtils.animateElement(modal, \"shake-animate\", 700);\r\n        });\r\n    }\r\n\r\n\r\n    handleUsernameChange(event) {\r\n        let username = event.target.value;\r\n        this.setState({loginUsername: username})\r\n    }\r\n\r\n    handlePasswordChange(event) {\r\n        let password = btoa(event.target.value);\r\n        this.setState({loginPassword: password})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"user-form user-login-form\">\r\n                {!this.state.startLoading ? \"\" : <Loading/>}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"login-username\">Username:</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"login-username\"\r\n                        type=\"text\"\r\n                        placeholder=\"username\"\r\n                        onChange={this.handleUsernameChange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"login-password\">Password:</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"login-password\"\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                        onChange={this.handlePasswordChange}/>\r\n                </div>\r\n                <div className=\"form-group pl-1\">\r\n                    <button type=\"button\" onClick={this.loginUser} className=\"btn btn-primary\">Login</button>\r\n                    <button type=\"button\" onClick={() => this.props.closeModal()} className=\"btn btn-primary\">Cancel</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React, {Component} from 'react';\r\nimport '../../component-styles/UserNavigation.css';\r\nimport ModalBox from \".././utils/util-components/ModalBox\";\r\nimport RegisterForm from \"../forms/RegisterForm\";\r\nimport LoginForm from \"../forms/LoginForm\";\r\nimport {AuthenticationContext} from '../ContextHolder';\r\nimport AuthenticationService from \"../../services/AuthenticationService\";\r\n\r\nclass UserNavigation extends Component {\r\n    contextNotifier;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoginModalOpen: false,\r\n            isRegisterModalOpen: false,\r\n            mouseOver: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n\r\n        this.setState({isLoggedIn: this.props.isLoggedIn});\r\n    }\r\n\r\n    componentWillUpdate(nextProps) {\r\n        if (this.state.isLoggedIn !== nextProps.isLoggedIn)\r\n            this.setState({isLoggedIn: nextProps.isLoggedIn})\r\n\r\n    }\r\n\r\n    closeModal(modalToClose) {\r\n        switch (modalToClose.toLowerCase()) {\r\n            case \"login\" : {\r\n                if (this.state.isLoginModalOpen)\r\n                    this.setState({isLoginModalOpen: false})\r\n            }\r\n                break;\r\n            case \"register\" : {\r\n                if (this.state.isRegisterModalOpen)\r\n                    this.setState({isRegisterModalOpen: false})\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    openModal(modalToClose) {\r\n        switch (modalToClose.toLowerCase()) {\r\n            case \"login\" : {\r\n                if (!this.state.isLoginModalOpen)\r\n                    this.setState({isLoginModalOpen: true})\r\n            }\r\n                break;\r\n            case \"register\" : {\r\n                if (!this.state.isRegisterModalOpen)\r\n                    this.setState({isRegisterModalOpen: true})\r\n            }\r\n                break;\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        AuthenticationService.logout().then(() => {\r\n            this.props.openMessageBox(\"success\", \"Logged out\");\r\n            //This is a function passed through Context.Consumer in render method\r\n            this.contextNotifier();\r\n        });\r\n    }\r\n\r\n\r\n    handleMouseOver() {\r\n        this.setState({mouseOver: true});\r\n    }\r\n\r\n    handleMouseLeave() {\r\n        this.setState({mouseOver: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AuthenticationContext.Consumer>\r\n                {(context) => (\r\n                    <div\r\n                        onMouseEnter={() => this.handleMouseOver()}\r\n                        onMouseLeave={() => this.handleMouseLeave()}\r\n                        className={`user-navigation-container ${this.state.mouseOver ? \"show\" : \"hide\"}`}>\r\n                        {this.contextNotifier = context.handleUserChange}\r\n\r\n                        < ul className=\"user-nav\">\r\n                            <li className={`user-nav-link ${!context.isLoggedIn ? \"\" : \"hidden\"}`}>\r\n                                <a href=\"#\" onClick={() => this.openModal('login')}>\r\n                                    Login\r\n                                </a>\r\n                            </li>\r\n                            <li className={`user-nav-link ${!context.isLoggedIn ? \"\" : \"hidden\"}`}>\r\n                                <a onClick={() => this.openModal('register')} href=\"#\">\r\n                                    Register</a>\r\n                            </li>\r\n                            <li className={`user-nav-link ${!context.isLoggedIn ? \"hidden\" : \"\"}`}>\r\n                                <a onClick={() => this.logout()} href=\"#\">\r\n                                    Logout\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        {/*REGISTER MODAL*/}\r\n                        <ModalBox\r\n                            customStyle={{\"marginTop\": 0, \"width\": \"40%\"}}\r\n                            isOpen={this.state.isRegisterModalOpen}\r\n                            closeFunction={() => this.closeModal('register')}>\r\n                            <RegisterForm\r\n                                openMessageBox={this.props.openMessageBox}\r\n                                closeModal={() => this.closeModal('register')}/>\r\n                        </ModalBox>\r\n                        {/*LOGIN MODAL*/}\r\n                        <ModalBox\r\n                            customStyle={{\"marginTop\": \"5%\"}}\r\n                            isOpen={this.state.isLoginModalOpen}\r\n                            closeFunction={() => this.closeModal('Login')}>\r\n                            <LoginForm\r\n                                openMessageBox={this.props.openMessageBox}\r\n                                loginHandler={this.contextNotifier}\r\n                                closeModal={() => this.closeModal('login')}/>\r\n                        </ModalBox>\r\n                    </div>\r\n                )}\r\n            </AuthenticationContext.Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserNavigation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './util-styles/MessageBoxStyle.css';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst propTypes = {\r\n    type: PropTypes.oneOf(['info', 'success', 'warning', 'error']).isRequired,\r\n    message: PropTypes.string.isRequired\r\n};\r\nconst defaultProps = {\r\n    type: \"info\",\r\n    message: \"Message text\",\r\n};\r\n\r\nconst messageBoxContainer = document.getElementById('message-box-container');\r\n\r\nclass MessageBox extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animationClass: \"hide\"\r\n        };\r\n\r\n        this.messageBox = document.createElement('div');\r\n    }\r\n\r\n    componentWillMount() {\r\n        //Self closing if success or info message\r\n        if (this.props.type === 'success' || this.props.type === 'info') {\r\n            setTimeout(() => {\r\n                this.closeMessageBox()\r\n            }, 3000);\r\n        }\r\n\r\n        this.handleContainerClassChange(\"show\");\r\n        messageBoxContainer.appendChild(this.messageBox);\r\n        setTimeout(() => {\r\n            this.setState({animationClass: \"show\"});\r\n        }, 10);\r\n\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.handleContainerClassChange(\"hide\")\r\n    }\r\n\r\n    closeMessageBox() {\r\n        this.setState({animationClass: \"hide\"});\r\n        setTimeout(() => {\r\n            if(this.props.closeFunction)\r\n                this.props.closeFunction();\r\n            if (messageBoxContainer.contains(this.messageBox))\r\n                messageBoxContainer.removeChild(this.messageBox);\r\n        }, 1000);\r\n\r\n\r\n    }\r\n\r\n    handleBoxClick() {\r\n        this.closeMessageBox();\r\n    }\r\n\r\n    handleContainerClassChange(change) {\r\n        if (change.toLowerCase() === \"show\") {\r\n            messageBoxContainer.classList.add(\"show\");\r\n            messageBoxContainer.classList.remove(\"hide\");\r\n        } else if (change.toLowerCase() === \"hide\") {\r\n            messageBoxContainer.classList.add(\"hide\");\r\n            messageBoxContainer.classList.remove(\"show\");\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div\r\n                onClick={() => this.handleBoxClick()}\r\n                className={\"message-box-content \"\r\n                + this.props.type + \"  \"\r\n                + this.state.animationClass}>\r\n                <div\r\n                    className=\"message-box-message\">\r\n                    <span\r\n                        className=\"message-type\">{this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1) + \": \"}</span>\r\n                    {this.props.message}\r\n                </div>\r\n            </div>\r\n            , this.messageBox)\r\n    }\r\n}\r\n\r\nMessageBox.propTypes = propTypes;\r\nMessageBox.defaultProps = defaultProps;\r\n\r\nexport default MessageBox;\r\n","import React, {Component} from \"react\";\r\nimport AuthenticationService from \"../services/AuthenticationService\";\r\nimport {AuthenticationContext} from './ContextHolder';\r\n\r\nclass AuthenticationContextProvider extends Component {\r\n\r\n    state = {\r\n        isLoggedIn: null,\r\n        loggedInUser: null\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.handleUserChange();\r\n    }\r\n\r\n    handleUserChange() {\r\n        let isLoggedIn = AuthenticationService.isLoggedIn();\r\n        if (isLoggedIn) {\r\n            AuthenticationService.getCurrentUserDTO().then((userDto) => this.setState({\r\n                loggedInUser: userDto,\r\n                isLoggedIn: true\r\n            }));\r\n        } else {\r\n            this.setState({\r\n                isLoggedIn: false,\r\n                loggedInUser: null\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AuthenticationContext.Provider\r\n                value={{\r\n                    isLoggedIn: this.state.isLoggedIn,\r\n                    loggedInUser: this.state.loggedInUser,\r\n                    handleUserChange: () => this.handleUserChange()\r\n                }}>\r\n                {this.props.children}\r\n            </AuthenticationContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthenticationContextProvider;\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport CalendarApp from \"./components/CalendarApp\";\r\nimport UserNavigation from \"./components/navigation/UserNavigation\";\r\nimport MessageBox from \"./components/utils/util-components/MessageBox\";\r\nimport AuthenticationContextProvider from \"./components/AuthenticationContextProvider\";\r\n\r\n//RESPONSIVE STYLES\r\nimport  './component-styles/responsive-styles/CalendarBodyResponsive.css';\r\nimport  './component-styles/responsive-styles/ToDoResponsive.css';\r\nimport './component-styles/responsive-styles/CalendarHeaderResponsive.css';\r\nimport './component-styles/responsive-styles/MyDaysResponsive.css';\r\nimport './component-styles/responsive-styles/MyDaysCalendarBlock.css';\r\nimport './components/utils/util-components/util-styles/GoodJobResponsive.css';\r\n\r\n\r\nclass AppContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            messageBox: {\r\n                type: \"\",\r\n                closeFunction: \"\",\r\n                message: \"\"\r\n            }\r\n        };\r\n\r\n        this.openMessageBox = this.openMessageBox.bind(this);\r\n    }\r\n\r\n    openMessageBox(type, message) {\r\n        let msgBox = {\r\n            type: type,\r\n            message: message\r\n        };\r\n        this.setState({\r\n            messageBox: msgBox\r\n        });\r\n    }\r\n\r\n    resetMessageBox() {\r\n        this.setState({messageBox: {}})\r\n    }\r\n\r\n    render() {\r\n        let msgBox;\r\n        if (this.state.messageBox.type &&\r\n            this.state.messageBox.message) {\r\n            msgBox = <MessageBox\r\n                closeFunction={() => this.resetMessageBox()}\r\n                type={this.state.messageBox.type}\r\n                message={this.state.messageBox.message}/>;\r\n        }\r\n        return (\r\n            <div className=\"app-container\">\r\n                {msgBox}\r\n                <AuthenticationContextProvider>\r\n                    <UserNavigation\r\n                        openMessageBox={this.openMessageBox}/>\r\n\r\n                    <BrowserRouter>\r\n                        <CalendarApp\r\n                            openMessageBox={this.openMessageBox}/>\r\n                    </BrowserRouter>\r\n                </AuthenticationContextProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppContainer;\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppContainer from \"./AppContainer\";\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}